{"version":3,"sources":["styles/PopularProfiles.module.css","styles/Notifications.module.css","styles/Button.module.css","api/axiosDefaults.js","utils/utils.js","contexts/CurrentUserContext.js","components/Avatar.js","components/NavBar.js","assets/login.png","hooks/useRedirect.js","pages/auth/SignUpForm.js","pages/auth/SignInForm.js","components/Asset.js","assets/upload.png","pages/posts/PostCreateForm.js","components/MoreModal.js","components/ShareModal.js","components/ConfirmationModal.js","pages/posts/Post.js","pages/comments/CommentEditForm.js","pages/comments/Comment.js","pages/comments/CommentCreateForm.js","pages/posts/PostPage.js","assets/no-results.png","pages/posts/PostsPage.js","pages/posts/PostEditForm.js","components/NotFound.js","contexts/ProfileDataContext.js","pages/profiles/Profile.js","pages/profiles/PopularProfiles.js","pages/profiles/ProfilePage.js","pages/profiles/UsernameForm.js","pages/profiles/UserPasswordForm.js","pages/profiles/ProfileEditForm.js","pages/notifications/Notification.js","pages/notifications/NotificationPage.js","App.js","reportWebVitals.js","index.js","App.module.css","styles/SignInUpForm.module.css","styles/Post.module.css","styles/CommentCreateEditForm.module.css","styles/PostCreateEditForm.module.css","styles/Comment.module.css","styles/ShareButton.module.css","styles/Profile.module.css","styles/PostsPage.module.css","styles/ProfilePage.module.css","styles/NavBar.module.css","styles/Avatar.module.css","styles/Asset.module.css","styles/NotFound.module.css"],"names":["module","exports","axios","defaults","baseURL","headers","post","withCredentials","axiosReq","create","axiosRes","fetchMoreData","async","resource","setResource","data","get","next","prevResource","results","reduce","acc","cur","some","accResult","id","err","followHelper","profile","clickedProfile","following_id","followers_count","is_owner","following_count","unfollowHelper","removeTokenTimestamp","localStorage","removeItem","CurrentUserContext","createContext","SetCurrentUserContext","useCurrentUser","useContext","useSetCurrentUser","CurrentUserProvider","_ref","children","currentUser","setCurrentUser","useState","history","useHistory","useEffect","console","log","response","handleMount","useMemo","interceptors","request","use","getItem","prevCurrentUser","push","config","Promise","reject","_err$response","status","_jsx","Provider","value","Avatar","src","height","text","_jsxs","className","styles","width","alt","NavBar","isMobile","useMediaQuery","maxWidth","handleSignOut","loggedInIcons","_Fragment","Link","to","picagramLogo","Navbar","Brand","NavLink","exact","activeClassName","Active","onClick","concat","profile_id","profile_image","loggedOutIcons","loggedInIconsMobile","NavLinkMob","loggedOutIconsMobile","desktopIcons","mobileIcons","expand","darkNavbar","Container","Nav","mobileIconsRow","useRedirect","userAuthStatus","SignUpForm","_errors$username","_errors$password","_errors$password2","_errors$non_field_err","signUpData","setSignUpData","username","password1","password2","errors","setErrors","handleChange","event","target","name","fluid","Row","Col","xs","md","Image","Login","LoginImg","Header","Form","onSubmit","preventDefault","Group","controlId","Label","Control","Input","type","placeholder","onChange","map","message","idx","Alert","variant","Button","btnStyles","Wide","Bright","non_field_errors","SignInForm","signInData","setSignInData","password","user","refreshTokenTimestamp","jwtDecode","refresh_token","exp","setItem","setTokenTimestamp","goBack","Asset","spinner","Spinner","animation","PostCreateForm","_errors$content","_errors$image","postData","setPostData","content","image","imageInput","useRef","textFields","as","rows","formData","FormData","append","current","files","_err$response2","appStyles","rounded","htmlFor","Upload","File","accept","length","URL","revokeObjectURL","createObjectURL","ref","hiddenInputButton","Content","ThreeDots","e","MoreModal","_ref2","handleEdit","handleDelete","smShow","setShow","handleClose","handleShow","Modal","size","show","onHide","Body","ButtonGroup","ProfileEditDropdown","_ref3","ShareModal","isOpen","onClose","shareUrl","title","FacebookShareButton","url","quote","ShareButtonDiv","TwitterShareButton","WhatsappShareButton","ConfirmationModal","handleMethod","body","backdrop","keyboard","Post","props","owner","comments_count","likes_count","like_id","updated_at","setPosts","bookmark_count","bookmark_id","location","useLocation","isFeedPage","pathname","includes","isHomePage","isPostPage","startsWith","isProfilePage","isModalOpen","setIsModalOpen","window","origin","showModal","setShowModal","Card","Img","Text","PostBarDark","ProfileDate","ProfileDateHover","delete","PostBar","OverlayTrigger","placement","overlay","Tooltip","prevPosts","Heart","HeartOutline","error","Comments","openModal","closeModal","boldText","CommentEditForm","setShowEditForm","setComments","formContent","setFormContent","put","trim","prevComments","comment","disabled","Comment","setPost","showEditForm","Media","AvatarHover","Owner","Date","profileImage","handleShowModal","editDelete","prevPost","filter","CommentCreateForm","setContent","InputGroup","PostPage","useParams","comments","all","lg","postPage","ContentBlack","InfiniteScroll","dataLength","loader","hasMore","PostsPage","posts","hasLoaded","setHasLoaded","query","setQuery","timer","setTimeout","fetchPosts","clearTimeout","SearchIcon","SearchBar","NoResults","PostEditForm","_imageInput$current","NotFound","NotFound404","ProfileDataContext","SetProfileDataContext","useProfileData","useSetProfileData","ProfileDataProvider","profileData","setProfileData","pageProfile","popularProfiles","prevState","handleFollow","followed","handleUnfollow","Profile","mobile","imageSize","WordBreak","Follow","PopularProfiles","slice","ProfilePage","profilePosts","setProfilePosts","fetchData","mainProfile","noGutters","ProfileImage","roundedCircle","JoinDate","created_at","posts_count","BlackOutline","Black","mainProfilePosts","UsernameForm","setUsername","_currentUser$profile_","toString","prevUser","Blue","UserPasswordForm","_errors$new_password","_errors$new_password2","userData","setUserData","new_password1","new_password2","ProfileEditForm","imageFile","_imageFile$current","_imageFile$current2","Notification","senderAvatar","sentAt","item_id","itemId","is_read","isRead","category","setNotifications","handleSetRead","patch","prevNotifications","notification","ContentBlackRead","NotificationPage","showMessage","notifications","App","isSignInOrSignUp","NavCol","ProfilesCol","Copyright","MidCol","Switch","Route","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","Router","document","getElementById"],"mappings":"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","file":"static/js/main.d269c5b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"boldText\":\"PopularProfiles_boldText__1o81k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContentBlackRead\":\"Notifications_ContentBlackRead__2fF6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__27i9m\",\"Wide\":\"Button_Wide__2ScDr\",\"Bright\":\"Button_Bright__1MBHR\",\"Blue\":\"Button_Blue__10GcT\",\"Black\":\"Button_Black__2dCp7\",\"BlackOutline\":\"Button_BlackOutline__I-kZ-\"};","// Axios Configuration\n\n// Importing Axios library for making HTTP requests\nimport axios from \"axios\";\n\n// Setting up default configurations for all Axios requests\naxios.defaults.baseURL = \"/api\";\naxios.defaults.headers.post['Content-Type'] = 'multipart/form-data';\naxios.defaults.withCredentials = true;\n\n// Creating custom Axios instances for request-related and response-related operations\nexport const axiosReq = axios.create(); // Used for making requests\nexport const axiosRes = axios.create(); // Used for handling responses\n","import jwtDecode from \"jwt-decode\";\nimport { axiosReq } from \"../api/axiosDefaults\";\n\nexport const fetchMoreData = async (resource, setResource) => {\n  try {\n    const { data } = await axiosReq.get(resource.next);\n    setResource((prevResource) => ({\n      ...prevResource,\n      next: data.next,\n      results: data.results.reduce((acc, cur) => {\n        return acc.some((accResult) => accResult.id === cur.id)\n          ? acc\n          : [...acc, cur];\n      }, prevResource.results),\n    }));\n  } catch (err) {}\n};\n\nexport const followHelper = (profile, clickedProfile, following_id) => {\n  return profile.id === clickedProfile.id\n    ? // This is the profile I clicked on,\n      // update its followers count and set its following id\n      {\n        ...profile,\n        followers_count: profile.followers_count + 1,\n        following_id,\n      }\n    : profile.is_owner\n    ? // This is the profile of the logged in user\n      // update its following count\n      { ...profile, following_count: profile.following_count + 1 }\n    : // this is not the profile the user clicked on or the profile\n      // the user owns, so just return it unchanged\n      profile;\n};\n\nexport const unfollowHelper = (profile, clickedProfile) => {\n  return profile.id === clickedProfile.id\n    ? // This is the profile I clicked on,\n      // update its followers count and set its following id\n      {\n        ...profile,\n        followers_count: profile.followers_count - 1,\n        following_id: null,\n      }\n    : profile.is_owner\n    ? // This is the profile of the logged in user\n      // update its following count\n      { ...profile, following_count: profile.following_count - 1 }\n    : // this is not the profile the user clicked on or the profile\n      // the user owns, so just return it unchanged\n      profile;\n};\n\nexport const setTokenTimestamp = (data) => {\n  const refreshTokenTimestamp = jwtDecode(data?.refresh_token).exp;\n  localStorage.setItem(\"refreshTokenTimestamp\", refreshTokenTimestamp);\n};\n\nexport const shouldRefreshToken = () => {\n  return !!localStorage.getItem(\"refreshTokenTimestamp\");\n};\n\nexport const removeTokenTimestamp = () => {\n  localStorage.removeItem(\"refreshTokenTimestamp\");\n};","import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport axios from \"axios\";\nimport { axiosRes, axiosReq } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { removeTokenTimestamp, shouldRefreshToken } from \"../utils/utils\";\n\n// Creating a context to hold the current user data and\n// custom hooks for easily accessing the current user and setting the current user\nexport const CurrentUserContext = createContext();\nexport const SetCurrentUserContext = createContext();\nexport const useCurrentUser = () => useContext(CurrentUserContext)\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext)\n\n// This context is used to manage and share the current\n// user's data across various components in the application.\nexport const CurrentUserProvider = ({children}) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const history = useHistory()\n\n    // Function to fetch the user data on component mount\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosRes.get(\"dj-rest-auth/user/\");\n        setCurrentUser(data);\n      } catch (err) {\n        console.log(err.response);\n      }\n    };\n  \n    // Effect to fetch user data on component mount\n    useEffect(() => {\n      handleMount();\n    }, []);\n\n    // Memoized block to set up Axios interceptors for token refreshing\n    useMemo(() => {\n      axiosReq.interceptors.request.use(\n        async (config) => {\n          if (shouldRefreshToken()){\n            try {\n              await axios.post(\"/dj-rest-auth/token/refresh/\");\n            } catch (err) {\n              setCurrentUser((prevCurrentUser) => {\n                if (prevCurrentUser) {\n                  history.push(\"/signin\");\n                }\n                return null;\n              });\n              removeTokenTimestamp();\n              return config;\n            }\n          }\n          return config;\n        },\n        (err) => {\n          return Promise.reject(err.response);\n        }\n      );\n  \n      axiosRes.interceptors.response.use(\n        (response) => response,\n        async (err) => {\n          if (err.response?.status === 401) {\n            try {\n              await axios.post(\"/dj-rest-auth/token/refresh/\");\n            } catch (err) {\n              setCurrentUser((prevCurrentUser) => {\n                if (prevCurrentUser) {\n                  history.push(\"/signin\");\n                }\n                return null;\n              });\n              removeTokenTimestamp();\n            }\n            return axios(err.config);\n          }\n          return Promise.reject(err);\n        }\n      );\n    }, [history]);\n\n    return (\n    <CurrentUserContext.Provider value={currentUser}>\n        <SetCurrentUserContext.Provider value={setCurrentUser}>\n            {children}\n        </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n    )\n}","import React from 'react'\nimport styles from '../styles/Avatar.module.css'\n\nconst Avatar = ({ src, height = 45, text }) => {\n    return <span>\n        <img className={styles.Avatar} src={src}\n        height={height} width={height} alt=\"avatar\" />\n        {text}\n    </span>\n}\n\nexport default Avatar","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport styles from '../styles/NavBar.module.css';\nimport { NavLink, Link, useHistory } from 'react-router-dom';\nimport { \n  useCurrentUser,\n  useSetCurrentUser,\n  } from \"../contexts/CurrentUserContext\";\nimport Avatar from \"./Avatar.js\";\nimport axios from \"axios\";\nimport { removeTokenTimestamp } from \"../utils/utils.js\";\nimport { useMediaQuery } from 'react-responsive';\n\nconst NavBar = () => {\n  const history = useHistory();\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useSetCurrentUser();\n  const isMobile = useMediaQuery({ maxWidth: 1023 });\n\n  // Function to handle user sign-out\n  const handleSignOut = async () => {\n \n    try {\n      await axios.post(\"dj-rest-auth/logout/\");\n      setCurrentUser(null);\n      removeTokenTimestamp();\n  \n      // Redirect to the login page after successful logout\n      history.push('/login');\n    } catch (err) { }\n};\n\n  // JSX for icons when the user is logged in\n  const loggedInIcons = (\n    <>\n      <Link to=\"/\" className={styles.picagramLogo}>\n      <Navbar.Brand className={styles.picagramLogo}>\n      <i className=\"fa-solid fa-camera-retro\" />Picagram\n      </Navbar.Brand>\n      </Link>\n\n      <NavLink\n      exact className={styles.NavLink}\n      activeClassName={styles.Active}\n      to=\"/\"\n      >\n      <i className=\"fa-solid fa-house\" />Home\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLink}\n      activeClassName={styles.Active}\n      to=\"/feed\"\n      >\n      <i className=\"fas fa-stream\" />Feed\n      </NavLink>\n      \n      <NavLink\n      className={styles.NavLink}\n      activeClassName={styles.Active}\n      to=\"/bookmarked\"\n      >\n      <i className=\"fa-solid fa-bookmark\" />Saved Posts\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLink}\n      activeClassName={styles.Active}\n      to=\"/posts/create\"\n      >\n      <i className=\"fas fa-plus-square\" />Add Post\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLink}\n      to=\"/notifications\"\n      >\n      <i className=\"fa-regular fa-envelope\" />Notifications\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLink}\n      to=\"/\"\n      onClick={handleSignOut}>\n      <i className=\"fas fa-sign-out-alt\" />Sign Out\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLink}\n      to={`/profiles/${currentUser?.profile_id}`}\n      >\n      <Avatar src={currentUser?.profile_image} text=\"Profile\" height={30} />\n      </NavLink>\n\n    </>\n    );\n  \n  // JSX for icons when the user is logged out\n  const loggedOutIcons = (\n    <>\n      <Link to=\"/\" className={styles.picagramLogo}>\n      <Navbar.Brand className={styles.picagramLogo}>\n      <i className=\"fa-solid fa-camera-retro\" />Picagram\n      </Navbar.Brand>\n      </Link>\n\n      <NavLink\n      exact className={styles.NavLink}\n      activeClassName={styles.Active}\n      to=\"/\"\n      >\n      <i className=\"fa-solid fa-house\" />Home\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLink}\n      activeClassName={styles.Active}\n      to=\"/login\"\n      >\n      <i className=\"fa-solid fa-arrow-right-to-bracket\" />Log In\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLink}\n      activeClassName={styles.Active}\n      to=\"/signup\"\n      >\n      <i className=\"fa-solid fa-signature\" />Sign Up\n      </NavLink>\n    </>\n    );\n\n  // JSX for mobile view when the user is logged in\n  const loggedInIconsMobile = (\n    <>\n      <NavLink\n      exact className={styles.NavLinkMob}\n      activeClassName={styles.Active}\n      to=\"/\"\n      >\n      <i className=\"fa-solid fa-house\" />\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLinkMob}\n      activeClassName={styles.Active}\n      to=\"/feed\"\n      >\n      <i className=\"fas fa-stream\" />\n      </NavLink>\n      \n      <NavLink\n      className={styles.NavLinkMob}\n      activeClassName={styles.Active}\n      to=\"/bookmarked\"\n      >\n      <i className=\"fa-solid fa-bookmark\" />\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLinkMob}\n      activeClassName={styles.Active}\n      to=\"/posts/create\"\n      >\n      <i className=\"fas fa-plus-square\" />\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLinkMob}\n      to=\"/notifications\"\n      >\n      <i className=\"fa-regular fa-envelope\" />\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLinkMob}\n      to=\"/\"\n      onClick={handleSignOut}>\n      <i className=\"fas fa-sign-out-alt\" />\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLinkMob}\n      to={`/profiles/${currentUser?.profile_id}`}\n      >\n      <Avatar src={currentUser?.profile_image} height={25} />\n      </NavLink>\n\n    </>\n    );\n\n  // JSX for mobile view when the user is logged out\n  const loggedOutIconsMobile = (\n    <>\n      <NavLink\n      exact className={styles.NavLinkMob}\n      activeClassName={styles.Active}\n      to=\"/\"\n      >\n      <i className=\"fa-solid fa-house\"></i>\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLinkMob}\n      activeClassName={styles.Active}\n      to=\"/login\"\n      >\n      <i className=\"fa-solid fa-arrow-right-to-bracket\"></i> Log In\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLinkMob}\n      activeClassName={styles.Active}\n      to=\"/signup\"\n      >\n      <i className=\"fa-solid fa-signature\"></i> Sign Up\n      </NavLink>\n    </>\n    );\n\n    // Determine which set of icons to use based on the user's authentication status\n    const desktopIcons = currentUser ? loggedInIcons : loggedOutIcons;\n    const mobileIcons = currentUser ? loggedInIconsMobile : loggedOutIconsMobile;\n  \n    return (\n      <>\n        <Navbar\n          expand=\"xl\"\n          className={`${styles.darkNavbar} sticky-top`}\n        >\n          <Container className={styles.Container}>\n            {isMobile ? (\n              // Render icons in a single row for small screens\n              <Nav className={`${styles.mobileIconsRow}`}>\n                {mobileIcons}\n              </Nav>\n            ) : (\n              // Render icons in a column for larger screens\n              <Nav className=\"flex-column\">\n                {desktopIcons}\n              </Nav>\n            )}\n          </Container>\n        </Navbar>\n      </>\n    );\n  };\n\nexport default NavBar","export default __webpack_public_path__ + \"static/media/login.849b0b29.png\";","import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\n\n// Custom hook for redirecting users based on their authentication status\nexport const useRedirect = (userAuthStatus) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        await axios.post(\"/dj-rest-auth/token/refresh/\");\n        // if user is logged in, the code below will run\n        if (userAuthStatus === \"loggedIn\") {\n          history.push(\"/\");\n        }\n      } catch (err) {\n        // if user is not logged in, the code below will run\n        if (userAuthStatus === \"loggedOut\") {\n          history.push(\"/\");\n        }\n      }\n    };\n\n    handleMount();\n  }, [history, userAuthStatus]);\n};","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport styles from \"../../styles/SignInUpForm.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport Login from \"../../assets/login.png\";\n\nimport Image from \"react-bootstrap/Image\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\n\nimport axios from \"axios\";\nimport { useRedirect } from \"../../hooks/useRedirect.js\";\n\nconst SignUpForm = () => {\n  // Redirect the user if already logged in\n  useRedirect('loggedIn')\n  const [signUpData, setSignUpData] = useState({\n    username: \"\",\n    password1: \"\",\n    password2: \"\",\n  });\n  const { username, password1, password2 } = signUpData;\n\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n\n  // Handle form input changes\n  const handleChange = (event) => {\n    setSignUpData({\n      ...signUpData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axios.post(\"/dj-rest-auth/registration/\", signUpData);\n      history.push(\"/login\");\n    } catch (err) {\n      // Handle registration errors and display error messages\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n<Container fluid className={styles.Container}>\n  <Row className=\"justify-content-center align-items-center\">\n    <Col xs={12} md={6} className=\"text-center\">\n      <Image src={Login} className={styles.LoginImg} />\n    </Col>\n\n    {/* Column containing the sign-up form */}\n    <Col xs={12} md={6}>\n    <Row className={`justify-content-center ${styles.Row}`}>\n      <Col>\n      <h1 className={styles.Header}>Sign Up</h1>\n      <hr className=\"my-4\" />\n      </Col>\n    </Row>\n\n    <Row className={`${styles.Row}`}>\n      <Col>\n        <Container className=\"justify-content-center text-center\">\n            <Form onSubmit={handleSubmit}>\n\n              {/* Username input */}\n              <Form.Group controlId=\"username\">\n                <Form.Label className=\"d-none\">username</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.username?.map((message, idx) => (\n                <Alert variant=\"dark\" key={idx} className=\"text-center\">\n                  {message}\n                </Alert>\n              ))}\n\n              {/* Password input */}\n              <Form.Group controlId=\"password1\">\n                <Form.Label className=\"d-none\">Password</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password1\"\n                  value={password1}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.password1?.map((message, idx) => (\n                <Alert key={idx} variant=\"dark\" className=\"text-center\">\n                  {message}\n                </Alert>\n              ))}\n\n              {/* Confirm password input */}\n              <Form.Group controlId=\"password2\">\n                <Form.Label className=\"d-none\">Confirm password</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type=\"password\"\n                  placeholder=\"Confirm password\"\n                  name=\"password2\"\n                  value={password2}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.password2?.map((message, idx) => (\n                <Alert key={idx} variant=\"dark\" className=\"text-center\">\n                  {message}\n                </Alert>\n              ))}\n\n              <Button\n                className={`${btnStyles.Button} ${btnStyles.Wide} ${btnStyles.Bright}`}\n                type=\"submit\"\n              >\n                Sign up\n              </Button>\n              {errors.non_field_errors?.map((message, idx) => (\n                <Alert key={idx} variant=\"dark\" className=\"mt-3 text-center\">\n                  {message}\n                </Alert>\n              ))}\n            </Form>\n          </Container>\n\n          {/* Container for the sign-in link */}\n          <Container className=\"mt-3\">\n            <Link className={styles.Link} to=\"/login\">\n              Already have an account? <span>Sign in</span>\n            </Link>\n          </Container>\n        </Col>\n      </Row>\n    </Col>\n  </Row>\n</Container>\n  );\n};\n\nexport default SignUpForm;","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport Image from \"react-bootstrap/Image\";\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport Login from \"../../assets/login.png\";\n\nimport styles from \"../../styles/SignInUpForm.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport { useSetCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { useRedirect } from \"../../hooks/useRedirect\";\nimport { setTokenTimestamp } from \"../../utils/utils\";\n\nfunction SignInForm() {\n  // Get the setCurrentUser function from the context and redirect the user\n  // if aleary logged in.\n  const setCurrentUser = useSetCurrentUser();\n  useRedirect('loggedIn')\n\n  const [signInData, setSignInData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const { username, password } = signInData;\n\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await axios.post(\"/dj-rest-auth/login/\", signInData);\n      setCurrentUser(data.user);\n      setTokenTimestamp(data);\n      history.goBack();\n    } catch (err) {\n      setErrors(err.response?.data);\n    }\n  };\n\n  // Handle form input changes\n  const handleChange = (event) => {\n    setSignInData({\n      ...signInData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return ( \n<Container fluid className={styles.Container}>\n  <Row className=\"justify-content-center align-items-center\">\n    <Col xs={12} md={6} className=\"text-center\">\n      <Image src={Login} className={styles.LoginImg} />\n    </Col>\n\n    {/* Column containing the login form */}\n    <Col xs={12} md={6}>\n      <Row className={`justify-content-center ${styles.Row}`}>\n        <Col>\n          <h1 className={styles.Header}>Login to Picagram</h1>\n          <hr className=\"my-4\" />\n        </Col>\n      </Row>\n\n      <Row className={`${styles.Row}`}>\n        <Col>\n          <Container className=\"justify-content-center text-center\">\n          <Form onSubmit={handleSubmit}>\n            \n            {/* Username input */}\n            <Form.Group controlId=\"username\">\n              <Form.Label className=\"d-none\">username</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type=\"text\"\n                placeholder=\"Username\"\n                name=\"username\"\n                value={username}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.username?.map((message, idx) => (\n              <Alert variant=\"dark\" key={idx} className=\"text-center\">\n                {message}\n              </Alert>\n            ))}\n\n            {/* Password input */}\n            <Form.Group controlId=\"password\">\n              <Form.Label className=\"d-none\">Password</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={password}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.password1?.map((message, idx) => (\n              <Alert key={idx} variant=\"dark\" className=\"text-center\">\n                {message}\n              </Alert>\n            ))}\n\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Wide} ${btnStyles.Bright} `}\n              type=\"submit\"\n            >\n              Log In\n            </Button>\n            {errors.non_field_errors?.map((message, idx) => (\n              <Alert key={idx} variant=\"dark\" className=\"mt-3 text-center\">\n                {message}\n              </Alert>\n            ))}\n          </Form>\n          </Container>\n        </Col>\n      </Row>\n\n      {/* Row for the sign-up link */}\n      <Row className={`${styles.Row}`}>\n        <Col>\n          <Container className=\"mt-3\">\n            <Link className={styles.Link} to=\"/signup\">\n              Don't have an account? <span>Sign up now!</span>\n            </Link>\n          </Container>\n        </Col>\n      </Row>\n    </Col>\n  </Row>\n</Container>\n   );\n}\n\nexport default SignInForm;","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport styles from \"../styles/Asset.module.css\";\n\nconst Asset = ({ spinner, src, message }) => {\n  return (\n    <div className={`${styles.Asset} p-4`}>\n      {spinner && <Spinner animation=\"border\" />}\n      {src && <img src={src} alt={message} />}\n      {message && <p className=\"mt-4\">{message}</p>}\n    </div>\n  );\n};\n\nexport default Asset;","export default __webpack_public_path__ + \"static/media/upload.f5d60e01.png\";","import React, { useRef, useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Image from \"react-bootstrap/Image\";\n\nimport Asset from \"../../components/Asset\";\nimport Upload from \"../../assets/upload.png\";\n\nimport styles from \"../../styles/PostCreateEditForm.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\n\nimport { useHistory } from \"react-router\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\n\nfunction PostCreateForm() {\n  const [errors, setErrors] = useState({});\n\n  const [postData, setPostData] = useState({\n    content: \"\",\n    image: \"\",\n  });\n  const { content, image } = postData;\n\n  const imageInput = useRef(null);\n  const history = useHistory();\n\n  // Function to handle form field changes\n  const handleChange = (event) => {\n    setPostData({\n      ...postData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Function to handle image input changes\n  const handleChangeImage = (event) => {\n    if (event.target.files.length) {\n      URL.revokeObjectURL(image);\n      setPostData({\n        ...postData,\n        image: URL.createObjectURL(event.target.files[0]),\n      });\n    }\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n\n    // Append content and image data to the FormData object\n    formData.append(\"content\", content);\n    formData.append(\"image\", imageInput.current.files[0]);\n\n    try {\n      const { data } = await axiosReq.post(\"/posts/\", formData);\n      history.push(`/posts/${data.id}`);\n    } catch (err) {\n      // console.log(err);\n      if (err.response?.status !== 401) {\n        setErrors(err.response?.data);\n      }\n    }\n  };\n\n  // JSX for the text fields section\n  const textFields = (\n    <div className=\"text-center\">\n      <Form.Group>\n        <Form.Label className=\"d-none\">Content</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={6}\n          name=\"content\"\n          placeholder=\"Write a caption...\"\n          value={content}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.content?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      <Button\n        className={`${btnStyles.Button}`}\n        onClick={() => history.goBack()}\n      ><i className=\"fa-solid fa-xmark\"></i> Cancel</Button>\n      <Button className={`${btnStyles.Button}`} type=\"submit\">\n      <i className=\"fa-solid fa-circle-plus\"></i>Share\n      </Button>\n    </div>\n  );\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Row>\n        <Col>\n          <Container\n            className={`${styles.Container} d-flex flex-column justify-content-center`}\n          >\n            <Form.Group className=\"text-center\">\n              {image ? (\n                <>\n                  <figure>\n                    {/* Display the selected image */}\n                    <Image\n                        className={appStyles.Image}\n                        src={image}\n                        rounded\n                    />\n                  </figure>\n                  <div>\n                    <Form.Label\n                      className={`${btnStyles.Button} btn`}\n                      htmlFor=\"image-upload\"\n                    >\n                      Change the image\n                    </Form.Label>\n                  </div>\n                </>\n              ) : (\n                // Display the upload button and message when no image is selected\n                <Form.Label\n                  className=\"d-flex justify-content-center\"\n                  htmlFor=\"image-upload\"\n                >\n                  <Asset\n                    src={Upload}\n                    message=\"Click or tap to upload an image\"\n                  />\n                </Form.Label>\n              )}\n\n              {/* Input element for selecting an image */}\n              <Form.File\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleChangeImage}\n                ref={imageInput}\n                className={styles.hiddenInputButton}\n              />\n            </Form.Group>\n            {errors?.image?.map((message, idx) => (\n              <Alert variant=\"warning\" key={idx}>\n                {message}\n              </Alert>\n            ))}\n        </Container>\n      </Col>\n    </Row>\n    <Container className={appStyles.Content}>{textFields}</Container>\n  </Form>\n);\n}\n\nexport default PostCreateForm;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\n// Component for rendering three dots icon with click handler\nconst ThreeDots = ({ onClick }) => (\n  <i\n    className=\"fa-solid fa-ellipsis\"\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  />\n);\n\n// Component for a modal with more options (Edit, Delete, Close)\nexport const MoreModal = ({ handleEdit, handleDelete }) => {\n  const [smShow, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <ThreeDots onClick={handleShow} />\n\n      <Modal size=\"sm\" show={smShow}  onHide={handleClose}>\n        <Modal.Body>\n          <div className=\"text-center\">\n            <ButtonGroup>\n              <Button\n                  variant=\"dark\"\n                  onClick={handleEdit}\n                  aria-label=\"edit\"\n              >\n                <i className=\"fas fa-edit\" /> Edit\n              </Button>\n              <Button\n                variant=\"dark\"\n                onClick={handleDelete}\n                aria-label=\"delete\"\n              >\n                <i className=\"fas fa-trash-alt\" /> Delete\n              </Button>\n              <Button\n                variant=\"dark\"\n                onClick={handleClose}\n              >\n              <i className=\"fa-solid fa-xmark\" /> Close\n              </Button>\n            </ButtonGroup>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\n// Component for a modal with profile editing options\nexport const ProfileEditDropdown = ({ id }) => {\n  const history = useHistory();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <ThreeDots onClick={handleShow} />\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Body>\n          <div className=\"text-center\">\n            <ButtonGroup>\n              <Button\n                variant=\"dark\"\n                onClick={() => history.push(`/profiles/${id}/edit`)}\n                aria-label=\"edit-profile\"\n              >\n                <i className=\"fas fa-edit\" /> Edit profile\n              </Button>\n              <Button\n                variant=\"dark\"\n                onClick={() => history.push(`/profiles/${id}/edit/username`)}\n                aria-label=\"edit-username\"\n              >\n                <i className=\"far fa-id-card\" /> Change username\n              </Button>\n              <Button\n                variant=\"dark\"\n                onClick={() => history.push(`/profiles/${id}/edit/password`)}\n                aria-label=\"edit-password\"\n              >\n                <i className=\"fas fa-key\" /> Change password\n              </Button>\n            </ButtonGroup>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { FacebookShareButton, TwitterShareButton, WhatsappShareButton } from 'react-share';\nimport styles from '../styles/ShareButton.module.css'\n\n// Share modal for sharing posts to other platforms\nconst ShareModal = ({ isOpen, onClose, shareUrl, title }) => {\n  return (\n    <Modal show={isOpen} onHide={onClose}>\n      <Modal.Body>\n        <div className=\"text-center\">\n          <div>\n            <FacebookShareButton url={shareUrl} quote={title}>\n              <div className={styles.ShareButtonDiv}>\n                <i className=\"fa-brands fa-facebook-f\" />\n              </div>\n            </FacebookShareButton>\n\n            <TwitterShareButton url={shareUrl} title={title}>\n              <div className={styles.ShareButtonDiv}>\n                <i className=\"fa-brands fa-x-twitter\" />\n              </div>\n            </TwitterShareButton>\n\n            <WhatsappShareButton url={shareUrl} title={title}>\n              <div className={styles.ShareButtonDiv}>\n                <i className=\"fa-brands fa-whatsapp\" />\n              </div>\n            </WhatsappShareButton>\n\n            <Button variant=\"dark\" onClick={onClose}>\n              <i className=\"fa-solid fa-xmark\" />\n            </Button>\n          </div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default ShareModal;\n","import Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/esm/ButtonGroup\";\n\nconst ConfirmationModal = ({ handleMethod, show, setShow, body, type }) => {\n  return (\n    <>\n      <Modal size=\"sm\" show={show} backdrop=\"static\" keyboard={false} className=\"mt-3\">\n        <Modal.Body className=\"py-1\">\n          <div className=\"text-center\">\n            <ButtonGroup>\n              <Button variant=\"secondary\" size=\"sm\" onClick={() => setShow(false)}>\n                Cancel\n              </Button>\n              <Button variant={type} size=\"sm\" onClick={handleMethod}>\n                {body}\n              </Button>\n            </ButtonGroup>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default ConfirmationModal;","import React, { useState } from 'react';\nimport styles from \"../../styles/Post.module.css\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\n\nimport Card from 'react-bootstrap/Card';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport Avatar from \"../../components/Avatar\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nimport { MoreModal } from \"../../components/MoreModal\";\nimport ShareModal from \"../../components/ShareModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\n\nconst Post = (props) => {\n  const {\n    id,\n    owner,\n    profile_id,\n    profile_image,\n    comments_count,\n    likes_count,\n    like_id,\n    title,\n    content,\n    image,\n    updated_at,\n    setPosts,\n    bookmark_count,\n    bookmark_id,\n  } = props;\n\n  const currentUser = useCurrentUser();\n  const is_owner = currentUser?.username === owner;\n  const history = useHistory();\n\n  // Check what page the user is on\n  const location = useLocation();\n  const isFeedPage = location.pathname.includes('/feed');\n  const isHomePage = location.pathname === '/';\n  const isPostPage = location.pathname.startsWith('/posts/');\n  const isProfilePage = location.pathname.startsWith('/profiles/');\n\n  // State to manage the visibility of the ShareModal and construct the share URL\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const shareUrl = `${window.location.origin}/posts/${id}`;\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n\n  const [showModal, setShowModal] = useState(false);\n  const handleShowModal = () => {\n    setShowModal(true);\n  };\n\n  // Function to navigate to the post edit page\n  const handleEdit = () => {\n    history.push(`/posts/${id}/edit`);\n  };\n\n  // Function to handle post deletion\n  const handleDelete = async () => {\n    try {\n      await axiosRes.delete(`/posts/${id}/`);\n      history.push('/');\n    } catch (err) {\n      // console.error(err);\n    }\n  };\n\n  // Function to handle post like\n  const handleLike = async () => {\n    try {\n      const { data } = await axiosRes.post(\"/likes/\", { post: id });\n      setPosts((prevPosts) => ({\n        ...prevPosts,\n        results: prevPosts.results.map((post) => {\n          return post.id === id\n            ? { ...post, likes_count: post.likes_count + 1, like_id: data.id }\n            : post;\n        }),\n      }));\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n  // Function to handle post unlike\n  const handleUnlike = async () => {\n    try {\n      await axiosRes.delete(`/likes/${like_id}/`);\n      setPosts((prevPosts) => ({\n        ...prevPosts,\n        results: prevPosts.results.map((post) => {\n          return post.id === id\n            ? { ...post, likes_count: post.likes_count - 1, like_id: null }\n            : post;\n        }),\n      }));\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n  \n  // Function to bookmark a post\n  const handleBookmark = async () => {\n    try {\n      const { data } = await axiosRes.post(\"/bookmark/\", { post: id });\n      setPosts((prevPosts) => ({\n        ...prevPosts,\n        results: prevPosts.results.map((post) => {\n          return post.id === id\n            ? { ...post, bookmark_count: bookmark_count + 1, bookmark_id: data.id }\n            : post;\n        }),\n      }));\n    } catch (err) {\n      console.error(\"Error bookmarking post:\", err);\n    }\n  };\n\n  // Function to remove bookmark\n  const handleUnBookmark = async () => {\n    try {\n      await axiosRes.delete(`/bookmark/${bookmark_id}/`);\n      setPosts((prevPosts) => ({\n        ...prevPosts,\n        results: prevPosts.results.map((post) => {\n          return post.id === id\n            ? { ...post, bookmark_count: bookmark_count - 1, bookmark_id: null }\n            : post;\n        }),\n      }));\n    } catch (err) {\n      console.error(\"Error removing bookmark:\", err);\n    }\n  };\n\n\n\n  return (\n    <Card className={styles.Post}>\n      {isProfilePage ? (\n        // Render only the image, likes and comments count when on the profile page\n        <>\n        <Link to={`/posts/${id}`}>\n          <Card.Img src={image} alt={title} />\n        </Link>\n        <Card.Body>\n          <Card.Text className={styles.PostBarDark}>\n          {likes_count === 1 ? `${likes_count} like • ` : `${likes_count} likes • `}\n          {comments_count === 1 ? `${comments_count} comment` : `${comments_count} comments`}\n          </Card.Text>\n        </Card.Body>\n        </>\n      ) : (\n        // Render the entire post content when not on the profile page\n        <>\n        <Card.Body>\n        <div className={`d-flex align-items-center justify-content-between ${styles.ProfileDate}`}>\n            <Link to={`/profiles/${profile_id}`} className={`d-flex align-items-center ${styles.ProfileDateHover}`}>\n            <Avatar src={profile_image} height={30} />\n            <span>{owner} • {updated_at}</span>\n            </Link>\n            {/* Render MoreModal component for post owner to edit or delete the post */}\n            {is_owner && (\n              <>\n                <MoreModal handleEdit={handleEdit} handleDelete={() => handleShowModal()} />\n\n                {/* ConfirmationModal component */}\n                <ConfirmationModal\n                  show={showModal}\n                  setShow={setShowModal}\n                  handleMethod={handleDelete}\n                  body=\"Delete Post!\"\n                  type=\"dark\"\n                />\n              </>\n            )}\n        </div>\n        </Card.Body>\n      <Link to={`/posts/${id}`}>\n        <Card.Img src={image} alt={title} />\n      </Link>\n      <Card.Body>\n        <div className={styles.PostBar}>\n          {is_owner ? (\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>You can't like your own post!</Tooltip>}\n            >\n              <i className=\"far fa-heart\" />\n            </OverlayTrigger>\n          ) : like_id ? (\n            <span onClick={handleUnlike}>\n              <i className={`fas fa-heart ${styles.Heart}`} />\n            </span>\n          ) : currentUser ? (\n            <span onClick={handleLike}>\n              <i className={`far fa-heart ${styles.HeartOutline}`} />\n            </span>\n          ) : (\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>Log in to like posts!</Tooltip>}\n            >\n              <i className=\"far fa-heart\" />\n            </OverlayTrigger>\n          )}\n\n          {is_owner ? (\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>You can find your own posts under Profile!</Tooltip>}\n            >\n              <i className=\"fa-regular fa-bookmark\" />\n            </OverlayTrigger>\n          ) : bookmark_id ? (\n            <span onClick={handleUnBookmark}>\n              <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>Remove from bookmarks!</Tooltip>}\n              >\n              <i className={`fa-solid fa-bookmark`} />\n              </OverlayTrigger>\n            </span>\n          ) : currentUser ? (\n            <span onClick={handleBookmark}>\n              <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>Save post!</Tooltip>}\n              >\n              <i className={`fa-regular fa-bookmark`} />\n              </OverlayTrigger>\n            </span>\n          ) : (\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>Log in to save posts!</Tooltip>}\n            >\n              <i className=\"fa-regular fa-bookmark\" />\n            </OverlayTrigger>\n          )}\n\n          <Link to={`/posts/${id}`}>\n            {isPostPage ? (\n              <OverlayTrigger\n                placement=\"top\"\n                overlay={<Tooltip>{currentUser ? 'Comment down below!' : 'Log in to comment!'}</Tooltip>}\n              >\n                <i className={`far fa-comments ${styles.Comments}`} />\n              </OverlayTrigger>\n            ) : (\n              <i className={`far fa-comments ${styles.Comments}`} /> \n            )}\n          </Link>\n          {/* Render ShareModal component to share the post */}\n          <span onClick={openModal}>\n          <i className=\"fa-regular fa-paper-plane\"></i>\n          </span>\n          <ShareModal isOpen={isModalOpen} onClose={closeModal} shareUrl={shareUrl} title={title} />\n          </div>\n            <Card.Text className={styles.PostBar}>\n            {likes_count === 1 ? `${likes_count} like • ` : `${likes_count} likes • `}\n            {comments_count === 1 ? `${comments_count} comment` : `${comments_count} comments`}\n            </Card.Text>\n            {content && (\n              <Card.Text className={styles.PostBar}>\n                <span className={styles.boldText}>{owner}</span>\n                {content}\n              </Card.Text>\n            )}\n            {isFeedPage || isHomePage ? (\n              <Link to={`/posts/${id}`}>\n                <Card.Text className={styles.PostBar}>\n                  {comments_count === 0\n                    ? `Be the first to comment...`\n                    : comments_count === 1\n                      ? `See the one comment...`\n                      : `See all ${comments_count} comments...`}\n                </Card.Text>\n              </Link>\n            ) : null}\n          </Card.Body>\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default Post;","import React, { useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\n\nimport styles from \"../../styles/CommentCreateEditForm.module.css\";\n\nfunction CommentEditForm(props) {\n  const { id, content, setShowEditForm, setComments } = props;\n\n  const [formContent, setFormContent] = useState(content);\n\n  // Handle change in the comment content input\n  const handleChange = (event) => {\n    setFormContent(event.target.value);\n  };\n\n  // Handle form submission to update the comment\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axiosRes.put(`/comments/${id}/`, {\n        content: formContent.trim(),\n      });\n      setComments((prevComments) => ({\n        ...prevComments,\n        results: prevComments.results.map((comment) => {\n          return comment.id === id\n            ? {\n                ...comment,\n                content: formContent.trim(),\n                updated_at: \"now\",\n              }\n            : comment;\n        }),\n      }));\n\n      // Hide the edit form after successful comment update\n      setShowEditForm(false);\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"pr-1\">\n        <Form.Control\n          className={styles.Form}\n          as=\"textarea\"\n          value={formContent}\n          onChange={handleChange}\n          rows={2}\n        />\n      </Form.Group>\n      <div className=\"text-right\">\n        {/* Cancel button to exit the edit mode */}\n        <button\n          className={styles.Button}\n          onClick={() => setShowEditForm(false)}\n          type=\"button\"\n        >\n          cancel\n        </button>\n        {/* Save button to submit the edited comment */}\n        <button\n          className={styles.Button}\n          disabled={!content.trim()} // Disable if the content is empty\n          type=\"submit\"\n        >\n          save\n        </button>\n      </div>\n    </Form>\n  );\n}\n\nexport default CommentEditForm;","import React, { useState } from \"react\";\nimport Media from 'react-bootstrap/Media';\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"../../components/Avatar\";\nimport styles from \"../../styles/Comment.module.css\";\nimport CommentEditForm from \"./CommentEditForm\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\n\nconst Comment = (props) => {\n  const {\n    profile_id,\n    profile_image,\n    owner,\n    updated_at,\n    content,\n    id,\n    setPost,\n    setComments,\n  } = props;\n\n  const [showEditForm, setShowEditForm] = useState(false);\n  const currentUser = useCurrentUser();\n  const is_owner = currentUser?.username === owner;\n\n  const [showModal, setShowModal] = useState(false);\n\n  const handleShowModal = () => {\n    setShowModal(true);\n  };\n\n  // Handle comment deletion\n  const handleDelete = async () => {\n    try {\n      await axiosRes.delete(`/comments/${id}/`);\n      setPost((prevPost) => ({\n        results: [\n          {\n            ...prevPost.results[0],\n            comments_count: prevPost.results[0].comments_count - 1,\n          },\n        ],\n      }));\n      setComments((prevComments) => ({\n        ...prevComments,\n        results: prevComments.results.filter((comment) => comment.id !== id),\n      }));\n    } catch (err) {}\n  };\n\n  return (\n    <div>\n      <hr />\n\n      {/* Media component for comment display */}\n      <Media className=\"d-flex align-items-center\">\n        <Link to={`/profiles/${profile_id}`} className={styles.AvatarHover}>\n          <Avatar src={profile_image} height={30} />\n        </Link>\n\n        {/* Media body for comment content */}\n        <Media.Body className=\"ml-2\">\n          <span className={styles.Owner}>{owner}</span>\n          <span className={styles.Date}>{updated_at}</span>\n\n          {/* Render comment edit form if in edit mode */}\n          {showEditForm ? (\n            <CommentEditForm\n              id={id}\n              profile_id={profile_id}\n              content={content}\n              profileImage={profile_image}\n              setComments={setComments}\n              setShowEditForm={setShowEditForm}\n            />\n          ) : (\n            <>\n              {/* Render edit and delete icons for comment owner */}\n              {is_owner ? (\n                <>\n                  <span onClick={handleShowModal} className={styles.editDelete}>\n                    <i className=\"fa-solid fa-xmark\"></i>\n                  </span>\n                  <span\n                    onClick={() => setShowEditForm(true)}\n                    className={styles.editDelete}\n                  >\n                    <i className=\"fa-solid fa-ellipsis\"></i>\n                  </span>\n                </>\n              ) : null}\n\n              {/* Display the comment content */}\n              <p>{content}</p>\n            </>\n          )}\n        </Media.Body>\n      </Media>\n      <ConfirmationModal\n        show={showModal}\n        setShow={setShowModal}\n        handleMethod={handleDelete}\n        body=\"Delete comment!\"\n        type=\"dark\"\n      />\n    </div>\n  );\n};\n\nexport default Comment;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport styles from \"../../styles/CommentCreateEditForm.module.css\";\nimport Avatar from \"../../components/Avatar\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\n\nfunction CommentCreateForm(props) {\n  const { post, setPost, setComments, profileImage, profile_id } = props;\n  const [content, setContent] = useState(\"\");\n\n  // Handle change in the comment content input\n  const handleChange = (event) => {\n    setContent(event.target.value);\n  };\n\n  // Handle form submission to create a new comment\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await axiosRes.post(\"/comments/\", {\n        content,\n        post,\n      });\n\n      // Update comments and post after successful comment creation\n      setComments((prevComments) => ({\n        ...prevComments,\n        results: [data, ...prevComments.results],\n      }));\n      setPost((prevPost) => ({\n        results: [\n          {\n            ...prevPost.results[0],\n            comments_count: prevPost.results[0].comments_count + 1,\n          },\n        ],\n      }));\n\n      // Clear the comment input after submission\n      setContent(\"\");\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n  return (\n    <Form className=\"mt-2\" onSubmit={handleSubmit}>\n      <Form.Group>\n        <InputGroup>\n          <Link to={`/profiles/${profile_id}`} className={styles.AvatarHover}>\n            <Avatar src={profileImage} height={30}/>\n          </Link>\n          <Form.Control\n            className={styles.Form}\n            placeholder=\"Add comment...\"\n            as=\"textarea\"\n            value={content}\n            onChange={handleChange}\n            rows={1}\n          />\n        </InputGroup>\n      </Form.Group>\n      \n      {/* Display the \"Publish\" button if content is not empty */}\n      {content.trim() && (\n        <button\n        className={`${styles.Button} btn d-block ml-auto`}\n        type=\"submit\"\n        >\n        Publish\n        </button>\n        )}\n\n    </Form>\n  );\n}\n\nexport default CommentCreateForm;","import React, { useEffect, useState } from \"react\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\n\nimport appStyles from \"../../App.module.css\";\nimport { useParams } from \"react-router\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport Post from \"./Post\";\nimport Comment from \"../comments/Comment\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { fetchMoreData } from \"../../utils/utils\";\nimport Asset from \"../../components/Asset\";\nimport CommentCreateForm from \"../comments/CommentCreateForm\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\n\nfunction PostPage() {\n  const { id } = useParams();\n  const [post, setPost] = useState({ results: [] });\n  const [comments, setComments] = useState({ results: [] });\n\n  // Get the current user and their profile image\n  const currentUser = useCurrentUser();\n  const profile_image = currentUser?.profile_image;\n\n\n  // Use useEffect to fetch post and comments data on component mount\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const [{ data: post }, { data: comments }] = await Promise.all([\n          axiosReq.get(`/posts/${id}`),\n          axiosReq.get(`/comments/?post=${id}`),\n        ]);\n        setPost({ results: [post] });\n        setComments(comments);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n\n    handleMount();\n  }, [id]);\n\n  return (\n    <Row >\n      <Col lg={12}>\n        <Post {...post.results[0]} setPosts={setPost} postPage />\n        <Container className={appStyles.ContentBlack}>\n        {/* Render CommentCreateForm only if there is a current user */}\n          {currentUser ? (\n            <CommentCreateForm\n              profile_id={currentUser.profile_id}\n              profileImage={profile_image}\n              post={id}\n              setPost={setPost}\n              setComments={setComments}\n            />\n          ) : comments.results.length ? (\n            \"Comments\"\n          ) : null}\n          {comments.results.length ? (\n            <InfiniteScroll \n            children={\n              comments.results.map(comment => (\n                <Comment\n                key={comment.id}\n                {...comment}\n                setPost={setPost}\n                setComments={setComments}\n                />\n              ))\n            }\n            dataLength={comments.results.length}\n            loader={<Asset spinner />}\n            hasMore={!!comments.next}\n            next={() => fetchMoreData(comments, setComments)}\n            />\n          ) : currentUser ? (\n            // Render an empty span if there are no comments (and user is logged in)\n            <span> </span>\n          ) : (\n            // Render a message if there are no comments and user is not logged in\n            <span>No comments yet. Login to comment!</span>\n          )}\n        </Container>\n      </Col>\n    </Row>\n  );\n}\n\nexport default PostPage;","export default __webpack_public_path__ + \"static/media/no-results.bd8ecadb.png\";","import React, { useEffect, useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\n\nimport Post from \"./Post\";\nimport Asset from \"../../components/Asset\";\n\nimport appStyles from \"../../App.module.css\";\nimport styles from \"../../styles/PostsPage.module.css\";\nimport { useLocation } from \"react-router\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\n\nimport NoResults from \"../../assets/no-results.png\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { fetchMoreData } from \"../../utils/utils\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\n\nfunction PostsPage({ message, filter = \"\" }) {\n  const [posts, setPosts] = useState({ results: [] });\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const { pathname } = useLocation();\n\n  const [query, setQuery] = useState(\"\");\n  const currentUser = useCurrentUser();\n\n  // UseEffect to fetch posts data when filter, query, or pathname changes\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const { data } = await axiosReq.get(`/posts/?${filter}search=${query}`);\n        setPosts(data);\n        setHasLoaded(true);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n\n    // Set hasLoaded to false and use a timer to wait for \n    // user to stop typing before making the API call\n    setHasLoaded(false);\n    const timer = setTimeout(() => {\n      fetchPosts();\n    }, 1000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [filter, query, pathname, currentUser]);\n\n  return (\n    <Row className=\"h-100\">\n      <Col className=\"py-2 p-0 p-lg-2\" lg={12}>\n        {/* Search bar with search icon */}\n        <i className={`fas fa-search ${styles.SearchIcon}`} />\n        <Form\n          className={styles.SearchBar}\n          onSubmit={(event) => event.preventDefault()}\n        >\n          <Form.Control\n            value={query}\n            onChange={(event) => setQuery(event.target.value)}\n            type=\"text\"\n            className=\"mr-sm-2\"\n            placeholder=\"Search posts...\"\n          />\n        </Form>\n\n        {hasLoaded ? (\n          <>\n            {posts.results.length ? (\n              // Render InfiniteScroll to display posts with lazy loading\n              <InfiniteScroll\n                children={posts.results.map((post) => (\n                  <Post key={post.id} {...post} setPosts={setPosts} />\n                ))}\n                dataLength={posts.results.length}\n                loader={<Asset spinner />}\n                hasMore={!!posts.next}\n                next={() => fetchMoreData(posts, setPosts)}\n              />\n            ) : (\n              <Container className={appStyles.Content}>\n                <Asset src={NoResults} message={message} />\n              </Container>\n            )}\n          </>\n        ) : (\n          <Container className={appStyles.Content}>\n            <Asset spinner />\n          </Container>\n        )}\n      </Col>\n    </Row>\n  );\n}\n\nexport default PostsPage;","import React, { useEffect, useRef, useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Image from \"react-bootstrap/Image\";\n\nimport styles from \"../../styles/PostCreateEditForm.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\n\nimport { useHistory, useParams } from \"react-router\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\n\nfunction PostEditForm() {\n  const [errors, setErrors] = useState({});\n\n  const [postData, setPostData] = useState({\n    content: \"\",\n    image: \"\",\n  });\n  const { content, image } = postData;\n\n  // Reference to the image input element\n  const imageInput = useRef(null);\n\n  // Use useHistory and useParams hooks for navigation and obtaining URL parameters\n  const history = useHistory();\n  const { id } = useParams();\n\n  // Use useEffect to fetch post data on component mount\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(`/posts/${id}/`);\n        const { content, image, is_owner } = data;\n\n        // Check if the current user is the owner of the post\n        // If not, redirect them to the home page\n        is_owner ? setPostData({ content, image }) : history.push(\"/\");\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n\n    handleMount();\n  }, [history, id]);\n\n  // Function to handle form field changes\n  const handleChange = (event) => {\n    setPostData({\n      ...postData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Function to handle image input changes\n  const handleChangeImage = (event) => {\n    if (event.target.files.length) {\n      URL.revokeObjectURL(image);\n      setPostData({\n        ...postData,\n        image: URL.createObjectURL(event.target.files[0]),\n      });\n    }\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n\n    formData.append(\"content\", content);\n\n    // If a new image is selected, append it to the FormData object\n    if (imageInput?.current?.files[0]) {\n        formData.append(\"image\", imageInput.current.files[0]);\n      }\n\n      try {\n        await axiosReq.put(`/posts/${id}/`, formData);\n        history.push(`/posts/${id}`);\n      } catch (err) {\n        // console.log(err);\n        if (err.response?.status !== 401) {\n          setErrors(err.response?.data);\n        }\n      }\n    };\n\n  // JSX for the text fields section\n  const textFields = (\n    <div className=\"text-center\">\n      <Form.Group>\n        <Form.Label className=\"d-none\">Content</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={6}\n          name=\"content\"\n          placeholder=\"Write a caption...\"\n          value={content}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.content?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      <Button\n        className={`${btnStyles.Button}`}\n        onClick={() => history.goBack()}\n      ><i className=\"fa-solid fa-xmark\"></i> Cancel</Button>\n      <Button className={`${btnStyles.Button}`} type=\"submit\">\n      <i className=\"fa-solid fa-circle-plus\"></i>Save\n      </Button>\n    </div>\n  );\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Row>\n        <Col>\n          <Container\n            className={`${styles.Container} d-flex flex-column justify-content-center`}\n          >\n            <Form.Group className=\"text-center\">\n                  <figure>\n                    <Image\n                        className={appStyles.Image}\n                        src={image}\n                        rounded\n                    />\n                  </figure>\n                  <div>\n                    <Form.Label\n                      className={`${btnStyles.Button} btn`}\n                      htmlFor=\"image-upload\"\n                    >\n                      Change the image\n                      </Form.Label>\n                  </div>\n              <Form.File\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleChangeImage}\n                ref={imageInput}\n                className={styles.hiddenInputButton}\n              />\n            </Form.Group>\n            {errors?.image?.map((message, idx) => (\n              <Alert variant=\"warning\" key={idx}>\n                {message}\n              </Alert>\n            ))}\n          </Container>\n        </Col>\n          <Container className={appStyles.Content}>{textFields}</Container>\n      </Row>\n    </Form>\n  );\n}\n\nexport default PostEditForm;","import React from 'react'\nimport NoResults from '../assets/no-results.png'\nimport styles from '../styles/NotFound.module.css'\nimport Asset from './Asset'\n\n// Error message to users for not found pages/search\nconst NotFound = () => {\n  return (\n    <div className={styles.NotFound404}>\n        <Asset src={NoResults} message=\"Sorry, the page you're looking for doesn't exist\" />\n    </div>\n  )\n}\n\nexport default NotFound","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useCurrentUser } from \"../contexts/CurrentUserContext\";\nimport { followHelper, unfollowHelper } from \"../utils/utils\";\n\nconst ProfileDataContext = createContext();\nconst SetProfileDataContext = createContext();\n\nexport const useProfileData = () => useContext(ProfileDataContext);\nexport const useSetProfileData = () => useContext(SetProfileDataContext);\n\n// This context is designed to manage and share profile-related\n// data (such as page profiles and popular profiles) and associated\n// functions for following and unfollowing profiles.\nexport const ProfileDataProvider = ({ children }) => {\n  const [profileData, setProfileData] = useState({\n    pageProfile: { results: [] },\n    popularProfiles: { results: [] },\n  });\n\n  const currentUser = useCurrentUser();\n\n  const handleFollow = async (clickedProfile) => {\n    try {\n      const { data } = await axiosRes.post(\"/followers/\", {\n        followed: clickedProfile.id,\n      });\n\n      setProfileData((prevState) => ({\n        ...prevState,\n        pageProfile: {\n          results: prevState.pageProfile.results.map((profile) =>\n            followHelper(profile, clickedProfile, data.id)\n          ),\n        },\n        popularProfiles: {\n          ...prevState.popularProfiles,\n          results: prevState.popularProfiles.results.map((profile) =>\n            followHelper(profile, clickedProfile, data.id)\n          ),\n        },\n      }));\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n  const handleUnfollow = async (clickedProfile) => {\n    try {\n      await axiosRes.delete(`/followers/${clickedProfile.following_id}/`);\n      setProfileData((prevState) => ({\n        ...prevState,\n        pageProfile: {\n          results: prevState.pageProfile.results.map((profile) =>\n            unfollowHelper(profile, clickedProfile)\n          ),\n        },\n        popularProfiles: {\n          ...prevState.popularProfiles,\n          results: prevState.popularProfiles.results.map((profile) =>\n            unfollowHelper(profile, clickedProfile)\n          ),\n        },\n      }));\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(\n          \"/profiles/?ordering=-followers_count\"\n        );\n        setProfileData((prevState) => ({\n          ...prevState,\n          popularProfiles: data,\n        }));\n      } catch (err) {\n      // console.log(err);\n      }\n    };\n\n    handleMount();\n  }, [currentUser]);\n\n  return (\n    <ProfileDataContext.Provider value={profileData}>\n      <SetProfileDataContext.Provider value={{ setProfileData, handleFollow, handleUnfollow }}>\n        {children}\n      </SetProfileDataContext.Provider>\n    </ProfileDataContext.Provider>\n  );\n};","import React from \"react\";\nimport styles from \"../../styles/Profile.module.css\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"../../components/Avatar\";\nimport { useSetProfileData } from \"../../contexts/ProfileDataContext\";\n\n\nconst Profile = (props) => {\n  const { profile, mobile, imageSize = 30 } = props;\n  const { id, following_id, image, owner } = profile;\n\n  const currentUser = useCurrentUser();\n  const is_owner = currentUser?.username === owner;\n\n  const  {handleFollow, handleUnfollow} = useSetProfileData();\n\n  return (\n    <div\n      className={`my-3 d-flex align-items-center ${mobile && \"flex-column\"}`}\n    >\n      <div>\n        <Link className=\"align-self-center\" to={`/profiles/${id}`}>\n          <Avatar src={image} height={imageSize} />\n        </Link>\n      </div>\n      {/* Display owner's name */}\n      <div className={`mx-2 ${styles.WordBreak}`}>\n        {owner}\n      </div>\n      {/* Display follow/unfollow button */}\n      <div className={`${!mobile && \"ml-auto\"}`}>\n        {!mobile &&\n          currentUser &&\n          !is_owner &&\n          (following_id ? (\n            // Display unfollow button if the user is following the profile\n            <span\n              className={`${styles.Follow}`}\n              onClick={() => handleUnfollow(profile)}\n            >\n              Unfollow\n            </span>\n          ) : (\n            // Display follow button if the user is not following the profile\n            <span\n            className={`${styles.Follow}`}\n            onClick={() => handleFollow(profile)}\n            >\n              Follow\n            </span>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;","import React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport appStyles from \"../../App.module.css\";\nimport Asset from \"../../components/Asset\";\nimport styles from '../../styles/PopularProfiles.module.css'\nimport { useProfileData } from \"../../contexts/ProfileDataContext\";\nimport Profile from \"./Profile\";\n\nconst PopularProfiles = ({ mobile }) => {\n  const { popularProfiles } = useProfileData();\n\n  return (\n    <Container\n      className={`${appStyles.Content} ${\n        mobile && \"d-lg-none text-center mb-3\"\n      }`}\n    >\n      {popularProfiles.results.length ? (\n        // Render popular profiles if there are results\n        <>\n          <p className={styles.boldText}>User suggestions</p>\n          {mobile ? (\n            // Render mobile layout with up to 4 profiles side by side\n            <div className=\"d-flex justify-content-around\">\n              {popularProfiles.results.slice(0, 4).map((profile) => (\n                <Profile key={profile.id} profile={profile} mobile />\n              ))}\n            </div>\n          ) : (\n            // Render profiles in a regular layout\n            popularProfiles.results.map((profile) => (\n              <Profile key={profile.id} profile={profile} />\n            ))\n          )}\n        </>\n      ) : (\n        <Asset spinner />\n      )}\n    </Container>\n  );\n};\n\nexport default PopularProfiles;","import React, { useEffect, useState } from \"react\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\n\nimport Asset from \"../../components/Asset\";\nimport styles from \"../../styles/ProfilePage.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\n\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { useParams } from \"react-router\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport {\n  useProfileData,\n  useSetProfileData,\n} from \"../../contexts/ProfileDataContext\";\n\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Post from \"../posts/Post\";\nimport { fetchMoreData } from \"../../utils/utils\";\nimport { ProfileEditDropdown } from \"../../components/MoreModal\";\n\nfunction ProfilePage() {\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [profilePosts, setProfilePosts] = useState({ results: [] });\n\n  const currentUser = useCurrentUser();\n  const { id } = useParams();\n\n  const { setProfileData, handleFollow, handleUnfollow } = useSetProfileData();\n  const { pageProfile } = useProfileData();\n\n  const [profile] = pageProfile.results;\n  const is_owner = currentUser?.username === profile?.owner;\n\n  // Effect to fetch profile data and posts on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [{ data: pageProfile }, { data: profilePosts }] =\n          await Promise.all([\n            axiosReq.get(`/profiles/${id}/`),\n            axiosReq.get(`/posts/?owner__profile=${id}`),\n          ]);\n        setProfileData((prevState) => ({\n          ...prevState,\n          pageProfile: { results: [pageProfile] },\n        }));\n        setProfilePosts(profilePosts);\n        setHasLoaded(true);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    fetchData();\n  }, [id, setProfileData]);\n\n  // JSX for the main profile section\n  const mainProfile = (\n    <>\n    {profile?.is_owner && <ProfileEditDropdown id={profile?.id} />}\n      <Row noGutters className=\"px-3 text-center\">\n        <Col lg={3} className=\"text-lg-left\">\n          <Image\n            className={styles.ProfileImage}\n            roundedCircle\n            src={profile?.image}\n          />\n        </Col>\n        <Col lg={6}>\n          <h3 className=\"m-2 mt-5\">{profile?.owner}</h3><span className={styles.JoinDate}>Since: {profile?.created_at}</span>\n          <Row className=\"justify-content-center no-gutters\">\n            <Col xs={3} className=\"my-2\">\n              <div>{profile?.posts_count}</div>\n              <div>Posts</div>\n            </Col>\n            <Col xs={3} className=\"my-2\">\n              <div>{profile?.followers_count}</div>\n              <div>Followers</div>\n            </Col>\n            <Col xs={3} className=\"my-2\">\n              <div>{profile?.following_count}</div>\n              <div>Following</div>\n            </Col>\n          </Row>\n        </Col>\n        <Col lg={3} className=\"text-lg-right\">\n          {currentUser &&\n            !is_owner &&\n            (profile?.following_id ? (\n              <Button\n                className={`${btnStyles.Button} ${btnStyles.BlackOutline}`}\n                onClick={() => handleUnfollow(profile)}\n              >\n                Unfollow\n              </Button>\n            ) : (\n              <Button\n                className={`${btnStyles.Button} ${btnStyles.Black}`}\n                onClick={() => handleFollow(profile)}\n              >\n                Follow\n              </Button>\n            ))}\n        </Col>\n        {/* Display profile content */}\n        {profile?.content && <Col className=\"p-3\">{profile.content}</Col>}\n      </Row>\n    </>\n  );\n\n  // JSX for the main profile posts section\n  const mainProfilePosts = (\n    <>\n      <hr />\n      <p className=\"text-center\">{profile?.owner}'s posts</p>\n      <hr />\n      <Container>\n        <Row xs={2} md={2} lg={2} className=\"g-4\">\n          {/* Display profile posts */}\n          {profilePosts.results.map((post) => (\n            <Col key={post.id}>\n              <Post {...post} setPosts={setProfilePosts} />\n            </Col>\n          ))}\n        </Row>\n        {/* Infinite scroll for more posts */}\n        <InfiniteScroll\n          dataLength={profilePosts.results.length}\n          loader={<Asset spinner />}\n          hasMore={!!profilePosts.next}\n          next={() => fetchMoreData(profilePosts, setProfilePosts)}\n        />\n      </Container>\n    </>\n  );\n\n  return (\n    <Row>\n      <Col className=\"py-2 p-0 p-lg-2\" lg={12}>\n        <Container className={appStyles.Content}>\n          {hasLoaded ? (\n            <>\n              {mainProfile}\n              {mainProfilePosts}\n            </>\n          ) : (\n            <Asset spinner />\n          )}\n        </Container>\n      </Col>\n    </Row>\n  );\n}\n\nexport default ProfilePage;","import React, { useEffect, useState } from \"react\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nimport {\n  useCurrentUser,\n  useSetCurrentUser,\n} from \"../../contexts/CurrentUserContext\";\n\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\n\nconst UsernameForm = () => {\n  const [username, setUsername] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n  const { id } = useParams();\n\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useSetCurrentUser();\n\n  useEffect(() => {\n    // Set the initial value of the username field to the current username\n    if (currentUser?.profile_id?.toString() === id) {\n      setUsername(currentUser.username);\n    } else {\n      // Redirect to home if the current user is not the owner of the profile\n      history.push(\"/\");\n    }\n  }, [currentUser, history, id]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axiosRes.put(\"/dj-rest-auth/user/\", {\n        username,\n      });\n      setCurrentUser((prevUser) => ({\n        ...prevUser,\n        username,\n      }));\n      history.goBack();\n    } catch (err) {\n      // console.log(err);\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n    <Row>\n      <Col className=\"py-2 mx-auto text-center\" md={6}>\n        <Container className={appStyles.Content}>\n          {/* Form for changing the username */}\n          <Form onSubmit={handleSubmit} className=\"my-2\">\n            <Form.Group>\n              <Form.Label>Change username</Form.Label>\n              <Form.Control\n                placeholder=\"username\"\n                type=\"text\"\n                value={username}\n                onChange={(event) => setUsername(event.target.value)}\n              />\n            </Form.Group>\n            {errors?.username?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Blue}`}\n              onClick={() => history.goBack()}\n            >\n              cancel\n            </Button>\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Blue}`}\n              type=\"submit\"\n            >\n              save\n            </Button>\n          </Form>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default UsernameForm;","import React, { useEffect, useState } from \"react\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\n\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\n\nconst UserPasswordForm = () => {\n  const history = useHistory();\n  const { id } = useParams();\n  const currentUser = useCurrentUser();\n\n  const [userData, setUserData] = useState({\n    new_password1: \"\",\n    new_password2: \"\",\n  });\n  const { new_password1, new_password2 } = userData;\n\n  const [errors, setErrors] = useState({});\n\n  // Handle changes in the form input fields\n  const handleChange = (event) => {\n    setUserData({\n      ...userData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  useEffect(() => {\n    if (currentUser?.profile_id?.toString() !== id) {\n      // redirect user if they are not the owner of this profile\n      history.push(\"/\");\n    }\n  }, [currentUser, history, id]);\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axiosRes.post(\"/dj-rest-auth/password/change/\", userData);\n      history.goBack();\n    } catch (err) {\n      // console.log(err);\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n    <Row>\n      <Col className=\"py-2 mx-auto text-center\" md={6}>\n        <Container className={appStyles.Content}>\n          {/* Form for changing the user's password */}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label>New password</Form.Label>\n              <Form.Control\n                placeholder=\"new password\"\n                type=\"password\"\n                value={new_password1}\n                onChange={handleChange}\n                name=\"new_password1\"\n              />\n            </Form.Group>\n            {errors?.new_password1?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n            <Form.Group>\n              <Form.Label>Confirm password</Form.Label>\n              <Form.Control\n                placeholder=\"confirm new password\"\n                type=\"password\"\n                value={new_password2}\n                onChange={handleChange}\n                name=\"new_password2\"\n              />\n            </Form.Group>\n            {errors?.new_password2?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Blue}`}\n              onClick={() => history.goBack()}\n            >\n              cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              className={`${btnStyles.Button} ${btnStyles.Blue}`}\n            >\n              save\n            </Button>\n          </Form>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default UserPasswordForm;","import React, { useState, useEffect, useRef } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Alert from \"react-bootstrap/Alert\";\n\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport {\n  useCurrentUser,\n  useSetCurrentUser,\n} from \"../../contexts/CurrentUserContext\";\n\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\n\nconst ProfileEditForm = () => {\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useSetCurrentUser();\n  const { id } = useParams();\n  const history = useHistory();\n  const imageFile = useRef();\n\n  const [profileData, setProfileData] = useState({\n    name: \"\",\n    content: \"\",\n    image: \"\",\n  });\n  const { name, content, image } = profileData;\n\n  const [errors, setErrors] = useState({});\n\n  // Effect to fetch profile data on component mount\n  useEffect(() => {\n    const handleMount = async () => {\n      if (currentUser?.profile_id?.toString() === id) {\n        try {\n          const { data } = await axiosReq.get(`/profiles/${id}/`);\n          const { name, content, image } = data;\n          setProfileData({ name, content, image });\n        } catch (err) {\n          // console.log(err);\n          history.push(\"/\");\n        }\n      } else {\n        history.push(\"/\");\n      }\n    };\n\n    handleMount();\n  }, [currentUser, history, id]);\n\n  // Event handler for form input changes\n  const handleChange = (event) => {\n    setProfileData({\n      ...profileData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Event handler for form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"content\", content);\n\n    if (imageFile?.current?.files[0]) {\n      formData.append(\"image\", imageFile?.current?.files[0]);\n    }\n\n    try {\n      const { data } = await axiosReq.put(`/profiles/${id}/`, formData);\n      setCurrentUser((currentUser) => ({\n        ...currentUser,\n        profile_image: data.image,\n      }));\n      history.goBack();\n    } catch (err) {\n      // console.log(err);\n      setErrors(err.response?.data);\n    }\n  };\n\n  // JSX for text fields section of the form\n  const textFields = (\n    <>\n      <Form.Group>\n        <Form.Label>Bio</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          value={content}\n          onChange={handleChange}\n          name=\"content\"\n          rows={7}\n        />\n      </Form.Group>\n\n      {errors?.content?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n      <Button\n        className={`${btnStyles.Button} ${btnStyles.Blue}`}\n        onClick={() => history.goBack()}\n      >\n        cancel\n      </Button>\n      <Button className={`${btnStyles.Button} ${btnStyles.Blue}`} type=\"submit\">\n        save\n      </Button>\n    </>\n  );\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Row>\n        {/* Image and text fields for smaller screens */}\n        <Col className=\"py-2 p-0 p-md-2 text-center\" md={7} lg={6}>\n          <Container className={appStyles.Content}>\n            <Form.Group>\n              {/* Display current image and handle image change */}\n              {image && (\n                <figure>\n                  <Image src={image} fluid />\n                </figure>\n              )}\n              {errors?.image?.map((message, idx) => (\n                <Alert variant=\"warning\" key={idx}>\n                  {message}\n                </Alert>\n              ))}\n              <div>\n                <Form.Label\n                  className={`${btnStyles.Button} ${btnStyles.Blue} btn my-auto`}\n                  htmlFor=\"image-upload\"\n                >\n                  Change the image\n                </Form.Label>\n              </div>\n              <Form.File\n                id=\"image-upload\"\n                ref={imageFile}\n                accept=\"image/*\"\n                onChange={(e) => {\n                  if (e.target.files.length) {\n                    setProfileData({\n                      ...profileData,\n                      image: URL.createObjectURL(e.target.files[0]),\n                    });\n                  }\n                }}\n              />\n            </Form.Group>\n            {/* Display text fields section for smaller screens */}\n            <div className=\"d-md-none\">{textFields}</div>\n          </Container>\n        </Col>\n        {/* Text fields section for larger screens */}\n        <Col md={5} lg={6} className=\"d-none d-md-block p-0 p-md-2 text-center\">\n          <Container className={appStyles.Content}>{textFields}</Container>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default ProfileEditForm;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\n\nimport Card from \"react-bootstrap/Card\";\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport Avatar from \"../../components/Avatar\";\n\nimport appStyles from \"../../App.module.css\";\nimport styles from \"../../styles/Notifications.module.css\"\n\nconst Notification = (props) => {\n  const {\n    id,\n    profile_image: senderAvatar,\n    created_at: sentAt, \n    item_id: itemId,\n    is_read: isRead,\n    content,\n    category,\n    setNotifications,\n  } = props;\n  const [showModal, setShowModal] = useState(false);\n\n  const handleShowModal = () => {\n    setShowModal(true);\n  };\n\n  const handleSetRead = async () => {\n    try {\n      await axiosRes.patch(`/notifications/${id}`, { is_read: !isRead });\n      setNotifications((prevNotifications) => ({\n        ...prevNotifications,\n        results: prevNotifications.results.map((notification) => {\n          return notification.id === id ? { ...notification, is_read: !isRead } : notification;\n        }),\n      }));\n    } catch (err) {\n       console.log(err);\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      await axiosRes.delete(`/notifications/${id}`);\n      setNotifications((prevNotifications) => ({\n        ...prevNotifications,\n        results: prevNotifications.results.filter((notification) => notification.id !== id),\n      }));\n    } catch (err) {\n       console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <Card className={`${appStyles.ContentBlack} mt-3 me-3 ${isRead ? styles.ContentBlackRead : ''}`}>\n        <Card.Header className=\"d-flex justify-content-between\">\n          <small className=\"\">{sentAt}</small>      \n          <span>\n              <OverlayTrigger\n                placement=\"top\"\n                overlay={<Tooltip>Clear Notification!</Tooltip>}\n              >\n                <span\n                  aria-label=\"Clear\"\n                  title=\"Clear Notification\"\n                  onClick={handleShowModal}\n                >\n                  <i className=\"fa-regular fa-trash-can\" />\n                </span>\n              </OverlayTrigger>\n              {isRead ? (\n                <OverlayTrigger\n                placement=\"top\"\n                overlay={<Tooltip>Mark as unread!</Tooltip>}\n                >\n                  <span onClick={handleSetRead}>\n                    <i className=\"fa-solid fa-circle-check\" />\n                  </span>\n                </OverlayTrigger>\n              ) : (\n                <OverlayTrigger\n                placement=\"top\"\n                overlay={<Tooltip>Mark as read!</Tooltip>}\n                >\n                  <span onClick={handleSetRead}>\n                    <i className=\"fa-regular fa-circle-check\" />\n                  </span>\n                </OverlayTrigger>\n              )}\n            </span>\n        </Card.Header>\n        <Card.Body>\n          <Card.Text>\n            <Avatar src={senderAvatar} height={30} /> {content}{category !== \"follow\" && ( <Link to={`/posts/${itemId}`} className=\"ms-sm-2\">• Go to post...</Link> )}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n\n      <ConfirmationModal\n        show={showModal}\n        setShow={setShowModal}\n        handleMethod={handleDelete}\n        body=\"Clear notification!\"\n        type=\"dark\"\n      />\n    </>\n  );\n};\n\nexport default Notification;","import React, { useState, useEffect } from \"react\";\n\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport { fetchMoreData } from \"../../utils/utils\";\nimport Notification from \"./Notification\";\nimport Asset from \"../../components/Asset\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport NotFound from \"../../components/NotFound\";\n\n\nconst NotificationPage = ({ showMessage }) => {\n  const [notifications, setNotifications] = useState({ results: [] });\n  const currentUser = useCurrentUser();\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  console.log(currentUser);\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(`/notifications/`);\n        setNotifications(data);\n      } catch (err) {\n        console.log(err);\n      }\n      setHasLoaded(true);\n    };\n\n    handleMount();\n  }, []);\n\n  return !currentUser ? (\n    <NotFound />\n  ) : (\n    <>\n      <h4>Notifications</h4>\n      {hasLoaded ? (\n        notifications.results.length ? (\n          <InfiniteScroll className=\"overflow-hidden\"\n            children={notifications.results.map((notification) => (\n              <Notification\n                key={notification.id}\n                {...notification}\n                setNotifications={setNotifications}\n                showMessage={showMessage}\n              />\n            ))}\n            dataLength={notifications.results.length}\n            loader={\n              <div className=\"mt-3 text-muted text-center\">\n                <Spinner />\n              </div>\n            }\n            hasMore={!!notifications.next}\n            next={() => fetchMoreData(notifications, setNotifications)}\n          />\n        ) : (\n          <p>No new notifications</p>\n        )\n      ) : (\n        <Asset spinner />\n      )}\n    </>\n  );\n};\n\nexport default NotificationPage;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport NavBar from './components/NavBar';\nimport styles from './App.module.css'\nimport {Route, Switch, useLocation} from 'react-router-dom'\nimport './api/axiosDefaults'\nimport SignUpForm from './pages/auth/SignUpForm';\nimport SignInForm from './pages/auth/SignInForm';\nimport PostCreateForm from \"./pages/posts/PostCreateForm\";\nimport PostPage from \"./pages/posts/PostPage\";\nimport PostsPage from \"./pages/posts/PostsPage\";\nimport { useCurrentUser } from \"./contexts/CurrentUserContext\";\nimport PostEditForm from \"./pages/posts/PostEditForm\";\nimport NotFound from \"./components/NotFound\";\nimport PopularProfiles from './pages/profiles/PopularProfiles';\nimport ProfilePage from \"./pages/profiles/ProfilePage\";\nimport UsernameForm from \"./pages/profiles/UsernameForm\";\nimport UserPasswordForm from \"./pages/profiles/UserPasswordForm\";\nimport ProfileEditForm from \"./pages/profiles/ProfileEditForm\";\nimport NotificationPage from \"./pages/notifications/NotificationPage\";\n\n\nfunction App() {\n  const currentUser = useCurrentUser();\n  const profile_id = currentUser?.profile_id || \"\";\n\n  const location = useLocation();\n  const isSignInOrSignUp = location.pathname.includes('/login') || location.pathname.includes('/signup');\n\n  return (\n    <Container className={styles.App} fluid>\n      <Row>\n        <Col xs={12} lg={2} className={styles.NavCol}><NavBar /></Col>\n        <Col xs={12} lg={3} className={`order-lg-2 ${styles.ProfilesCol}`}>\n          {/* Render PopularProfiles if not in SignIn/SignUp pages */}\n          {!isSignInOrSignUp && (\n            <>\n              <Col>\n                <PopularProfiles mobile />\n              </Col>\n              <Col className=\"d-none d-lg-block\">\n                <PopularProfiles />\n              </Col>\n              <Col className=\"d-none d-lg-block mt-4\">\n                <span className={styles.Copyright}>© 2024 Picagram by J. Timlin / Code Institute</span>\n              </Col>\n            </>\n          )}\n        </Col>\n        <Col xs={12} lg={7} className={`order-lg-1 justify-content-center align-items-center ${styles.MidCol}`}>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <PostsPage message=\"No results found. Adjust the search keyword.\" />\n              )}\n            />\n            <Route\n              exact\n              path=\"/feed\"\n              render={() => (\n                <PostsPage\n                  message=\"No results found. Adjust the search keyword or follow a user.\"\n                  filter={`owner__followed__owner__profile=${profile_id}&`}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/bookmarked\"\n              render={() => (\n                <PostsPage\n                  message=\"No bookmarked posts found. Bookmark some posts to see them here.\"\n                  filter={`bookmark__owner__profile=${profile_id}&ordering=-bookmark__created_at&`}\n                />\n              )}\n            />\n            <Route exact path=\"/login\" render={() => <SignInForm />} />\n            <Route exact path=\"/signup\" render={() => <SignUpForm />} />\n            <Route exact path=\"/posts/create\" render={() => <PostCreateForm />} />\n            <Route exact path=\"/posts/:id/edit\" render={() => <PostEditForm />} />\n            <Route exact path=\"/posts/:id\" render={() => <PostPage />} />\n            <Route exact path=\"/notifications\" render={() => <NotificationPage />} />\n            <Route exact path=\"/profiles/:id\" render={() => <ProfilePage />} />\n            <Route exact path=\"/profiles/:id/edit/username\" render={() => <UsernameForm />} />\n            <Route exact path=\"/profiles/:id/edit/password\" render={() => <UserPasswordForm />} />\n            <Route exact path=\"/profiles/:id/edit\" render={() => <ProfileEditForm />} />\n            {/* Catch-all route for handling unmatched routes */}            \n            <Route render={() => <NotFound />} />\n          </Switch>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { CurrentUserProvider } from './contexts/CurrentUserContext';\nimport { ProfileDataProvider } from './contexts/ProfileDataContext';\n\nReactDOM.render(\n    <Router>\n      <CurrentUserProvider>\n        <ProfileDataProvider>\n          <App />\n        </ProfileDataProvider>\n      </CurrentUserProvider>\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"Content\":\"App_Content__ZaMNr\",\"ContentBlack\":\"App_ContentBlack__3IPbw\",\"Image\":\"App_Image__3UPXw\",\"NavCol\":\"App_NavCol__1X7Z8\",\"MidCol\":\"App_MidCol__3enO6\",\"ProfilesCol\":\"App_ProfilesCol__5BEju\",\"Copyright\":\"App_Copyright__1VPM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SignInUpForm_Container__2cuBp\",\"Input\":\"SignInUpForm_Input__3xaLZ\",\"Header\":\"SignInUpForm_Header__3joQJ\",\"Link\":\"SignInUpForm_Link__1BeMm\",\"LoginImg\":\"SignInUpForm_LoginImg__XPDvg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__3UScv\",\"Heart\":\"Post_Heart__3zMAO\",\"HeartOutline\":\"Post_HeartOutline__2dqsh\",\"PostBar\":\"Post_PostBar__3geIW\",\"PostBarDark\":\"Post_PostBarDark__2wHZP\",\"ProfileDate\":\"Post_ProfileDate__2ciSx\",\"ProfileDateHover\":\"Post_ProfileDateHover__2oJJl\",\"Comments\":\"Post_Comments__3v2v5\",\"boldText\":\"Post_boldText__1Dgmw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"CommentCreateEditForm_Form__1Qeyz\",\"Button\":\"CommentCreateEditForm_Button__sGFSX\",\"AvatarHover\":\"CommentCreateEditForm_AvatarHover__CKMUG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PostCreateEditForm_Container__2WHuV\",\"hiddenInputButton\":\"PostCreateEditForm_hiddenInputButton__lKd0Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Owner\":\"Comment_Owner__3sgYe\",\"AvatarHover\":\"Comment_AvatarHover__1ckLn\",\"Date\":\"Comment_Date__10qt0\",\"editDelete\":\"Comment_editDelete__3KLM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShareButtonDiv\":\"ShareButton_ShareButtonDiv__153wC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WordBreak\":\"Profile_WordBreak__3_YmI\",\"Follow\":\"Profile_Follow__2dmyf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"PostsPage_SearchBar__1T8bC\",\"SearchIcon\":\"PostsPage_SearchIcon__12ojn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileImage\":\"ProfilePage_ProfileImage__7dvRw\",\"JoinDate\":\"ProfilePage_JoinDate__BMrtT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__1amC6\",\"mobileIconsRow\":\"NavBar_mobileIconsRow__1JvMs\",\"Container\":\"NavBar_Container__15V9o\",\"picagramLogo\":\"NavBar_picagramLogo__1rbwc\",\"darkNavbar\":\"NavBar_darkNavbar__yV-0n\",\"NavLink\":\"NavBar_NavLink__34ons\",\"NavLinkMob\":\"NavBar_NavLinkMob__1mMZM\",\"Active\":\"NavBar_Active__3PBZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Avatar_Avatar__196lW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Asset\":\"Asset_Asset__1dBcX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotFound404\":\"NotFound_NotFound404__3uH1o\"};"],"sourceRoot":""}