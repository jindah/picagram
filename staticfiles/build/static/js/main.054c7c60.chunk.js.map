{"version":3,"sources":["styles/PopularProfiles.module.css","styles/Notifications.module.css","styles/Button.module.css","api/axiosDefaults.js","utils/utils.js","contexts/CurrentUserContext.js","components/Avatar.js","components/NavBar.js","assets/login.png","hooks/useRedirect.js","pages/auth/SignUpForm.js","pages/auth/SignInForm.js","components/Asset.js","assets/upload.png","pages/posts/PostCreateForm.js","components/MoreModal.js","components/ShareModal.js","components/ConfirmationModal.js","pages/posts/Post.js","pages/comments/CommentEditForm.js","pages/comments/Comment.js","pages/comments/CommentCreateForm.js","pages/posts/PostPage.js","assets/no-results.png","pages/posts/PostsPage.js","pages/posts/PostEditForm.js","components/NotFound.js","contexts/ProfileDataContext.js","pages/profiles/Profile.js","pages/profiles/PopularProfiles.js","pages/profiles/ProfilePage.js","pages/profiles/UsernameForm.js","pages/profiles/UserPasswordForm.js","pages/profiles/ProfileEditForm.js","pages/notifications/Notification.js","pages/notifications/NotificationPage.js","App.js","reportWebVitals.js","index.js","App.module.css","styles/SignInUpForm.module.css","styles/Post.module.css","styles/CommentCreateEditForm.module.css","styles/PostCreateEditForm.module.css","styles/Comment.module.css","styles/ShareButton.module.css","styles/Profile.module.css","styles/PostsPage.module.css","styles/ProfilePage.module.css","styles/NavBar.module.css","styles/Avatar.module.css","styles/Asset.module.css","styles/NotFound.module.css"],"names":["module","exports","axios","defaults","baseURL","headers","post","withCredentials","axiosReq","create","axiosRes","fetchMoreData","async","resource","setResource","data","get","next","prevResource","results","reduce","acc","cur","some","accResult","id","err","followHelper","profile","clickedProfile","following_id","followers_count","is_owner","following_count","unfollowHelper","removeTokenTimestamp","localStorage","removeItem","CurrentUserContext","createContext","SetCurrentUserContext","useCurrentUser","useContext","useSetCurrentUser","CurrentUserProvider","_ref","children","currentUser","setCurrentUser","useState","history","useHistory","useEffect","handleMount","useMemo","interceptors","request","use","getItem","prevCurrentUser","push","config","Promise","reject","response","_err$response","status","_jsx","Provider","value","Avatar","src","height","text","_jsxs","className","styles","width","alt","NavBar","isMobile","useMediaQuery","maxWidth","handleSignOut","loggedInIcons","_Fragment","Link","to","picagramLogo","Navbar","Brand","NavLink","exact","activeClassName","Active","onClick","concat","NavLinkProfile","profile_id","profile_image","loggedOutIcons","loggedInIconsMobile","NavLinkMob","loggedOutIconsMobile","desktopIcons","mobileIcons","expand","darkNavbar","Container","Nav","mobileIconsRow","useRedirect","userAuthStatus","SignUpForm","_errors$username","_errors$password","_errors$password2","_errors$non_field_err","signUpData","setSignUpData","username","password1","password2","errors","setErrors","handleChange","event","target","name","fluid","Row","Col","xs","md","Image","Login","LoginImg","Header","Form","onSubmit","preventDefault","Group","controlId","Label","Control","Input","type","placeholder","onChange","map","message","idx","Alert","variant","Button","btnStyles","Wide","Bright","non_field_errors","SignInForm","signInData","setSignInData","password","user","refreshTokenTimestamp","jwtDecode","refresh_token","exp","setItem","setTokenTimestamp","goBack","Asset","spinner","Spinner","animation","PostCreateForm","_errors$content","_errors$image","postData","setPostData","content","image","imageInput","useRef","textFields","as","rows","formData","FormData","append","current","files","_err$response2","appStyles","rounded","htmlFor","Upload","File","accept","length","URL","revokeObjectURL","createObjectURL","ref","hiddenInputButton","Content","ThreeDots","e","MoreModal","_ref2","handleEdit","handleDelete","smShow","setShow","handleClose","handleShow","Modal","size","show","onHide","Body","ButtonGroup","ProfileEditDropdown","_ref3","ShareModal","isOpen","onClose","shareUrl","title","FacebookShareButton","url","quote","ShareButtonDiv","TwitterShareButton","WhatsappShareButton","ConfirmationModal","handleMethod","body","backdrop","keyboard","Post","props","owner","comments_count","likes_count","like_id","updated_at","setPosts","bookmark_id","location","useLocation","isFeedPage","pathname","includes","isHomePage","isPostPage","startsWith","isProfilePage","isModalOpen","setIsModalOpen","window","origin","showModal","setShowModal","Card","Img","Text","PostBarDark","ProfileDate","ProfileDateHover","delete","PostBar","OverlayTrigger","placement","overlay","Tooltip","prevPosts","Heart","HeartOutline","Comments","openModal","closeModal","boldText","CommentEditForm","setShowEditForm","setComments","formContent","setFormContent","put","trim","prevComments","comment","disabled","Comment","setPost","showEditForm","Media","AvatarHover","Owner","Date","profileImage","handleShowModal","editDelete","prevPost","filter","CommentCreateForm","setContent","InputGroup","PostPage","useParams","comments","all","lg","postPage","ContentBlack","InfiniteScroll","dataLength","loader","hasMore","PostsPage","posts","hasLoaded","setHasLoaded","query","setQuery","isBookmarkedPage","timer","setTimeout","fetchPosts","clearTimeout","SearchIcon","SearchBar","NoResults","PostEditForm","_imageInput$current","NotFound","NotFound404","ProfileDataContext","SetProfileDataContext","useProfileData","useSetProfileData","ProfileDataProvider","profileData","setProfileData","pageProfile","popularProfiles","prevState","handleFollow","followed","handleUnfollow","Profile","mobile","imageSize","WordBreak","Follow","PopularProfiles","slice","ProfilePage","profilePosts","setProfilePosts","fetchData","mainProfile","noGutters","ProfileImage","roundedCircle","JoinDate","created_at","posts_count","BlackOutline","Black","mainProfilePosts","UsernameForm","setUsername","_currentUser$profile_","toString","prevUser","Blue","UserPasswordForm","_errors$new_password","_errors$new_password2","userData","setUserData","new_password1","new_password2","ProfileEditForm","imageFile","_imageFile$current","_imageFile$current2","Notification","senderAvatar","sentAt","item_id","itemId","is_read","isRead","category","setNotifications","handleSetRead","patch","prevNotifications","notification","ContentBlackRead","NotificationPage","showMessage","notifications","App","isSignInOrSignUp","NavCol","ProfilesCol","Copyright","MidCol","Switch","Route","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","Router","document","getElementById"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,SAAW,kC,sBCA7BD,EAAOC,QAAU,CAAC,iBAAmB,wC,2CCArCD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,OAAS,uBAAuB,KAAO,qBAAqB,MAAQ,sBAAsB,aAAe,6B,uKCKvLC,IAAMC,SAASC,QAAU,OACzBF,IAAMC,SAASE,QAAQC,KAAK,gBAAkB,sBAC9CJ,IAAMC,SAASI,iBAAkB,EAG1B,MAAMC,EAAWN,IAAMO,SACjBC,EAAWR,IAAMO,S,oBCRvB,MAAME,EAAgBC,MAAOC,EAAUC,KAC5C,IACE,MAAM,KAAEC,SAAeP,EAASQ,IAAIH,EAASI,MAC7CH,GAAaI,IAAY,IACpBA,EACHD,KAAMF,EAAKE,KACXE,QAASJ,EAAKI,QAAQC,QAAO,CAACC,EAAKC,IAC1BD,EAAIE,MAAMC,GAAcA,EAAUC,KAAOH,EAAIG,KAChDJ,EACA,IAAIA,EAAKC,IACZJ,EAAaC,YAEpB,CAAE,MAAOO,GAAM,GAGJC,EAAeA,CAACC,EAASC,EAAgBC,IAC7CF,EAAQH,KAAOI,EAAeJ,GAGjC,IACKG,EACHG,gBAAiBH,EAAQG,gBAAkB,EAC3CD,gBAEFF,EAAQI,SAGR,IAAKJ,EAASK,gBAAiBL,EAAQK,gBAAkB,GAGzDL,EAGOM,EAAiBA,CAACN,EAASC,IAC/BD,EAAQH,KAAOI,EAAeJ,GAGjC,IACKG,EACHG,gBAAiBH,EAAQG,gBAAkB,EAC3CD,aAAc,MAEhBF,EAAQI,SAGR,IAAKJ,EAASK,gBAAiBL,EAAQK,gBAAkB,GAGzDL,EAYOO,EAAuBA,KAClCC,aAAaC,WAAW,wBAAwB,E,WCzD3C,MAAMC,EAAqBC,0BACrBC,EAAwBD,0BACxBE,EAAiBA,IAAMC,qBAAWJ,GAClCK,EAAoBA,IAAMD,qBAAWF,GAIrCI,EAAsBC,IAAiB,IAAhB,SAACC,GAASD,EAC1C,MAAOE,EAAaC,GAAkBC,mBAAS,MACzCC,EAAUC,uBAgEhB,OAnDAC,qBAAU,KAVUxC,WAClB,IACE,MAAM,KAAEG,SAAeL,EAASM,IAAI,sBACpCgC,EAAejC,EACjB,CAAE,MAAOW,GACP,GAMF2B,EAAa,GACZ,IAGHC,mBAAQ,KACN9C,EAAS+C,aAAaC,QAAQC,KAC5B7C,UACE,GDuBCwB,aAAasB,QAAQ,yBCtBpB,UACQxD,IAAMI,KAAK,+BACnB,CAAE,MAAOoB,GAQP,OAPAsB,GAAgBW,IACVA,GACFT,EAAQU,KAAK,WAER,QAETzB,IACO0B,CACT,CAEF,OAAOA,CAAM,IAEdnC,GACQoC,QAAQC,OAAOrC,KAI1BhB,EAAS6C,aAAaS,SAASP,KAC5BO,GAAaA,IACdpD,UAAgB,IAADqD,EACb,GAA6B,OAAb,QAAZA,EAAAvC,EAAIsC,gBAAQ,IAAAC,OAAA,EAAZA,EAAcC,QAAgB,CAChC,UACQhE,IAAMI,KAAK,+BACnB,CAAE,MAAOoB,GACPsB,GAAgBW,IACVA,GACFT,EAAQU,KAAK,WAER,QAETzB,GACF,CACA,OAAOjC,IAAMwB,EAAImC,OACnB,CACA,OAAOC,QAAQC,OAAOrC,EAAI,GAE7B,GACA,CAACwB,IAGJiB,cAAC7B,EAAmB8B,SAAQ,CAACC,MAAOtB,EAAYD,SAC5CqB,cAAC3B,EAAsB4B,SAAQ,CAACC,MAAOrB,EAAeF,SACjDA,KAEqB,E,qBC3EnBwB,MARAzB,IAAiC,IAAhC,IAAE0B,EAAG,OAAEC,EAAS,GAAE,KAAEC,GAAM5B,EACtC,OAAO6B,eAAA,QAAA5B,SAAA,CACHqB,cAAA,OAAKQ,UAAWC,IAAON,OAAQC,IAAKA,EACpCC,OAAQA,EAAQK,MAAOL,EAAQM,IAAI,WAClCL,IACE,E,QCkPIM,MA3OAA,KACb,MAAM7B,EAAUC,uBACVJ,EAAcN,IACdO,EAAiBL,IACjBqC,EAAWC,wBAAc,CAAEC,SAAU,OAGrCC,EAAgBvE,UAEpB,UACQV,IAAMI,KAAK,wBACjB0C,EAAe,MACfb,IAGAe,EAAQU,KAAK,SACf,CAAE,MAAOlC,GAAO,GAIZ0D,EACJV,eAAAW,WAAA,CAAAvC,SAAA,CACEqB,cAACmB,IAAI,CAACC,GAAG,IAAIZ,UAAWC,IAAOY,aAAa1C,SAC5C4B,eAACe,IAAOC,MAAK,CAACf,UAAWC,IAAOY,aAAa1C,SAAA,CAC7CqB,cAAA,KAAGQ,UAAU,6BAA6B,gBAI1CD,eAACiB,IAAO,CACRC,OAAK,EAACjB,UAAWC,IAAOe,QACxBE,gBAAiBjB,IAAOkB,OACxBP,GAAG,IAAGzC,SAAA,CAENqB,cAAA,KAAGQ,UAAU,sBAAsB,UAGnCD,eAACiB,IAAO,CACRhB,UAAWC,IAAOe,QAClBE,gBAAiBjB,IAAOkB,OACxBP,GAAG,QAAOzC,SAAA,CAEVqB,cAAA,KAAGQ,UAAU,kBAAkB,UAG/BD,eAACiB,IAAO,CACRhB,UAAWC,IAAOe,QAClBE,gBAAiBjB,IAAOkB,OACxBP,GAAG,cAAazC,SAAA,CAEhBqB,cAAA,KAAGQ,UAAU,yBAAyB,iBAGtCD,eAACiB,IAAO,CACRhB,UAAWC,IAAOe,QAClBE,gBAAiBjB,IAAOkB,OACxBP,GAAG,gBAAezC,SAAA,CAElBqB,cAAA,KAAGQ,UAAU,uBAAuB,cAGpCD,eAACiB,IAAO,CACRhB,UAAWC,IAAOe,QAClBJ,GAAG,iBAAgBzC,SAAA,CAEnBqB,cAAA,KAAGQ,UAAU,2BAA2B,mBAGxCD,eAACiB,IAAO,CACRhB,UAAWC,IAAOe,QAClBJ,GAAG,IACHQ,QAASZ,EAAcrC,SAAA,CACvBqB,cAAA,KAAGQ,UAAU,wBAAwB,cAGrCR,cAACwB,IAAO,CACRhB,UAAS,GAAAqB,OAAKpB,IAAOe,QAAO,KAAAK,OAAIpB,IAAOqB,gBACvCV,GAAE,aAAAS,OAA0B,OAAXjD,QAAW,IAAXA,OAAW,EAAXA,EAAamD,YAAapD,SAE3CqB,cAACG,EAAM,CAACC,IAAgB,OAAXxB,QAAW,IAAXA,OAAW,EAAXA,EAAaoD,cAAe1B,KAAK,UAAUD,OAAQ,UAO9D4B,EACJ1B,eAAAW,WAAA,CAAAvC,SAAA,CACEqB,cAACmB,IAAI,CAACC,GAAG,IAAIZ,UAAWC,IAAOY,aAAa1C,SAC5C4B,eAACe,IAAOC,MAAK,CAACf,UAAWC,IAAOY,aAAa1C,SAAA,CAC7CqB,cAAA,KAAGQ,UAAU,6BAA6B,gBAI1CD,eAACiB,IAAO,CACRC,OAAK,EAACjB,UAAWC,IAAOe,QACxBE,gBAAiBjB,IAAOkB,OACxBP,GAAG,IAAGzC,SAAA,CAENqB,cAAA,KAAGQ,UAAU,sBAAsB,UAGnCD,eAACiB,IAAO,CACRhB,UAAWC,IAAOe,QAClBE,gBAAiBjB,IAAOkB,OACxBP,GAAG,SAAQzC,SAAA,CAEXqB,cAAA,KAAGQ,UAAU,uCAAuC,YAGpDD,eAACiB,IAAO,CACRhB,UAAWC,IAAOe,QAClBE,gBAAiBjB,IAAOkB,OACxBP,GAAG,UAASzC,SAAA,CAEZqB,cAAA,KAAGQ,UAAU,0BAA0B,gBAMrC0B,EACJ3B,eAAAW,WAAA,CAAAvC,SAAA,CACEqB,cAACwB,IAAO,CACRC,OAAK,EAACjB,UAAWC,IAAO0B,WACxBT,gBAAiBjB,IAAOkB,OACxBP,GAAG,IAAGzC,SAENqB,cAAA,KAAGQ,UAAU,wBAGbR,cAACwB,IAAO,CACRhB,UAAWC,IAAO0B,WAClBT,gBAAiBjB,IAAOkB,OACxBP,GAAG,QAAOzC,SAEVqB,cAAA,KAAGQ,UAAU,oBAGbR,cAACwB,IAAO,CACRhB,UAAWC,IAAO0B,WAClBT,gBAAiBjB,IAAOkB,OACxBP,GAAG,cAAazC,SAEhBqB,cAAA,KAAGQ,UAAU,2BAGbR,cAACwB,IAAO,CACRhB,UAAWC,IAAO0B,WAClBT,gBAAiBjB,IAAOkB,OACxBP,GAAG,gBAAezC,SAElBqB,cAAA,KAAGQ,UAAU,yBAGbR,cAACwB,IAAO,CACRhB,UAAWC,IAAO0B,WAClBf,GAAG,iBAAgBzC,SAEnBqB,cAAA,KAAGQ,UAAU,6BAGbR,cAACwB,IAAO,CACRhB,UAAWC,IAAO0B,WAClBf,GAAG,IACHQ,QAASZ,EAAcrC,SACvBqB,cAAA,KAAGQ,UAAU,0BAGbR,cAACwB,IAAO,CACRhB,UAAWC,IAAO0B,WAClBf,GAAE,aAAAS,OAA0B,OAAXjD,QAAW,IAAXA,OAAW,EAAXA,EAAamD,YAAapD,SAE3CqB,cAACG,EAAM,CAACC,IAAgB,OAAXxB,QAAW,IAAXA,OAAW,EAAXA,EAAaoD,cAAe3B,OAAQ,UAO/C+B,EACJ7B,eAAAW,WAAA,CAAAvC,SAAA,CACEqB,cAACwB,IAAO,CACRC,OAAK,EAACjB,UAAWC,IAAO0B,WACxBT,gBAAiBjB,IAAOkB,OACxBP,GAAG,IAAGzC,SAENqB,cAAA,KAAGQ,UAAU,wBAGbD,eAACiB,IAAO,CACRhB,UAAWC,IAAO0B,WAClBT,gBAAiBjB,IAAOkB,OACxBP,GAAG,SAAQzC,SAAA,CAEXqB,cAAA,KAAGQ,UAAU,uCAAyC,aAGtDD,eAACiB,IAAO,CACRhB,UAAWC,IAAO0B,WAClBT,gBAAiBjB,IAAOkB,OACxBP,GAAG,UAASzC,SAAA,CAEZqB,cAAA,KAAGQ,UAAU,0BAA4B,iBAMrC6B,EAAezD,EAAcqC,EAAgBgB,EAC7CK,EAAc1D,EAAcsD,EAAsBE,EAExD,OACEpC,cAAAkB,WAAA,CAAAvC,SACEqB,cAACsB,IAAM,CACLiB,OAAO,KACP/B,UAAS,GAAAqB,OAAKpB,IAAO+B,WAAU,eAAc7D,SAE7CqB,cAACyC,IAAS,CAACjC,UAAWC,IAAOgC,UAAU9D,SACpCkC,EAECb,cAAC0C,IAAG,CAAClC,UAAS,GAAAqB,OAAKpB,IAAOkC,gBAAiBhE,SACxC2D,IAIHtC,cAAC0C,IAAG,CAAClC,UAAU,cAAa7B,SACzB0D,SAKR,E,mDCtPM,MAA0B,kC,+BCKlC,MAAMO,EAAeC,IAC1B,MAAM9D,EAAUC,uBAEhBC,qBAAU,KACYxC,WAClB,UACQV,IAAMI,KAAK,gCAEM,aAAnB0G,GACF9D,EAAQU,KAAK,IAEjB,CAAE,MAAOlC,GAEgB,cAAnBsF,GACF9D,EAAQU,KAAK,IAEjB,GAGFP,EAAa,GACZ,CAACH,EAAS8D,GAAgB,ECkIhBC,MAzIIA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAEvBN,EAAY,YACZ,MAAOO,EAAYC,GAAiBtE,mBAAS,CAC3CuE,SAAU,GACVC,UAAW,GACXC,UAAW,MAEP,SAAEF,EAAQ,UAAEC,EAAS,UAAEC,GAAcJ,GAEpCK,EAAQC,GAAa3E,mBAAS,CAAC,GAEhCC,EAAUC,uBAGV0E,EAAgBC,IACpBP,EAAc,IACTD,EACH,CAACQ,EAAMC,OAAOC,MAAOF,EAAMC,OAAO1D,OAClC,EAeJ,OACFF,cAACyC,IAAS,CAACqB,OAAK,EAACtD,UAAWC,IAAOgC,UAAU9D,SAC3C4B,eAACwD,IAAG,CAACvD,UAAU,4CAA2C7B,SAAA,CACxDqB,cAACgE,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAG1D,UAAU,cAAa7B,SACzCqB,cAACmE,IAAK,CAAC/D,IAAKgE,EAAO5D,UAAWC,IAAO4D,aAIvC9D,eAACyD,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAEvF,SAAA,CACnBqB,cAAC+D,IAAG,CAACvD,UAAS,0BAAAqB,OAA4BpB,IAAOsD,KAAMpF,SACrD4B,eAACyD,IAAG,CAAArF,SAAA,CACJqB,cAAA,MAAIQ,UAAWC,IAAO6D,OAAO3F,SAAC,YAC9BqB,cAAA,MAAIQ,UAAU,cAIhBR,cAAC+D,IAAG,CAACvD,UAAS,GAAAqB,OAAKpB,IAAOsD,KAAMpF,SAC9B4B,eAACyD,IAAG,CAAArF,SAAA,CACFqB,cAACyC,IAAS,CAACjC,UAAU,qCAAoC7B,SACrD4B,eAACgE,IAAI,CAACC,SA9BK/H,UACnBkH,EAAMc,iBACN,UACQ1I,IAAMI,KAAK,8BAA+BgH,GAChDpE,EAAQU,KAAK,SACf,CAAE,MAAOlC,GAAM,IAADuC,EAEZ2D,EAAsB,QAAb3D,EAACvC,EAAIsC,gBAAQ,IAAAC,OAAA,EAAZA,EAAclD,KAC1B,GAsBqC+B,SAAA,CAG3B4B,eAACgE,IAAKG,MAAK,CAACC,UAAU,WAAUhG,SAAA,CAC9BqB,cAACuE,IAAKK,MAAK,CAACpE,UAAU,SAAQ7B,SAAC,aAC/BqB,cAACuE,IAAKM,QAAO,CACXrE,UAAWC,IAAOqE,MAClBC,KAAK,OACLC,YAAY,WACZnB,KAAK,WACL3D,MAAOmD,EACP4B,SAAUvB,OAGE,QADHX,EACZS,EAAOH,gBAAQ,IAAAN,OAAA,EAAfA,EAAiBmC,KAAI,CAACC,EAASC,IAC9BpF,cAACqF,IAAK,CAACC,QAAQ,OAAiB9E,UAAU,cAAa7B,SACpDwG,GADwBC,KAM7B7E,eAACgE,IAAKG,MAAK,CAACC,UAAU,YAAWhG,SAAA,CAC/BqB,cAACuE,IAAKK,MAAK,CAACpE,UAAU,SAAQ7B,SAAC,aAC/BqB,cAACuE,IAAKM,QAAO,CACXrE,UAAWC,IAAOqE,MAClBC,KAAK,WACLC,YAAY,WACZnB,KAAK,YACL3D,MAAOoD,EACP2B,SAAUvB,OAGG,QADJV,EACZQ,EAAOF,iBAAS,IAAAN,OAAA,EAAhBA,EAAkBkC,KAAI,CAACC,EAASC,IAC/BpF,cAACqF,IAAK,CAAWC,QAAQ,OAAO9E,UAAU,cAAa7B,SACpDwG,GADSC,KAMd7E,eAACgE,IAAKG,MAAK,CAACC,UAAU,YAAWhG,SAAA,CAC/BqB,cAACuE,IAAKK,MAAK,CAACpE,UAAU,SAAQ7B,SAAC,qBAC/BqB,cAACuE,IAAKM,QAAO,CACXrE,UAAWC,IAAOqE,MAClBC,KAAK,WACLC,YAAY,mBACZnB,KAAK,YACL3D,MAAOqD,EACP0B,SAAUvB,OAGG,QADJT,EACZO,EAAOD,iBAAS,IAAAN,OAAA,EAAhBA,EAAkBiC,KAAI,CAACC,EAASC,IAC/BpF,cAACqF,IAAK,CAAWC,QAAQ,OAAO9E,UAAU,cAAa7B,SACpDwG,GADSC,KAKdpF,cAACuF,IAAM,CACL/E,UAAS,GAAAqB,OAAK2D,IAAUD,OAAM,KAAA1D,OAAI2D,IAAUC,KAAI,KAAA5D,OAAI2D,IAAUE,QAC9DX,KAAK,SAAQpG,SACd,YAGuB,QADfuE,EACRM,EAAOmC,wBAAgB,IAAAzC,OAAA,EAAvBA,EAAyBgC,KAAI,CAACC,EAASC,IACtCpF,cAACqF,IAAK,CAAWC,QAAQ,OAAO9E,UAAU,mBAAkB7B,SACzDwG,GADSC,UAQlBpF,cAACyC,IAAS,CAACjC,UAAU,OAAM7B,SACzB4B,eAACY,IAAI,CAACX,UAAWC,IAAOU,KAAMC,GAAG,SAAQzC,SAAA,CAAC,4BACfqB,cAAA,QAAArB,SAAM,6BAOjC,ECJGiH,MA/Hf,WAAuB,IAAD7C,EAAAC,EAAAE,EAGpB,MAAMrE,EAAiBL,IACvBoE,EAAY,YAEZ,MAAOiD,EAAYC,GAAiBhH,mBAAS,CAC3CuE,SAAU,GACV0C,SAAU,MAEN,SAAE1C,EAAQ,SAAE0C,GAAaF,GAExBrC,EAAQC,GAAa3E,mBAAS,CAAC,GAEhCC,EAAUC,uBAiBV0E,EAAgBC,IACpBmC,EAAc,IACTD,EACH,CAAClC,EAAMC,OAAOC,MAAOF,EAAMC,OAAO1D,OAClC,EAGJ,OACFF,cAACyC,IAAS,CAACqB,OAAK,EAACtD,UAAWC,IAAOgC,UAAU9D,SAC3C4B,eAACwD,IAAG,CAACvD,UAAU,4CAA2C7B,SAAA,CACxDqB,cAACgE,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAG1D,UAAU,cAAa7B,SACzCqB,cAACmE,IAAK,CAAC/D,IAAKgE,EAAO5D,UAAWC,IAAO4D,aAIvC9D,eAACyD,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAEvF,SAAA,CACjBqB,cAAC+D,IAAG,CAACvD,UAAS,0BAAAqB,OAA4BpB,IAAOsD,KAAMpF,SACrD4B,eAACyD,IAAG,CAAArF,SAAA,CACFqB,cAAA,MAAIQ,UAAWC,IAAO6D,OAAO3F,SAAC,sBAC9BqB,cAAA,MAAIQ,UAAU,cAIlBR,cAAC+D,IAAG,CAACvD,UAAS,GAAAqB,OAAKpB,IAAOsD,KAAMpF,SAC9BqB,cAACgE,IAAG,CAAArF,SACFqB,cAACyC,IAAS,CAACjC,UAAU,qCAAoC7B,SACzD4B,eAACgE,IAAI,CAACC,SAxCO/H,UACnBkH,EAAMc,iBAEN,IACE,MAAM,KAAE7H,SAAeb,IAAMI,KAAK,uBAAwB0J,GAC1DhH,EAAejC,EAAKoJ,MPaQpJ,KAChC,MAAMqJ,EAAwBC,YAAc,OAAJtJ,QAAI,IAAJA,OAAI,EAAJA,EAAMuJ,eAAeC,IAC7DnI,aAAaoI,QAAQ,wBAAyBJ,EAAsB,EOdhEK,CAAkB1J,GAClBmC,EAAQwH,QACV,CAAE,MAAOhJ,GAAM,IAADuC,EACZ2D,EAAsB,QAAb3D,EAACvC,EAAIsC,gBAAQ,IAAAC,OAAA,EAAZA,EAAclD,KAC1B,GA8BmC+B,SAAA,CAG3B4B,eAACgE,IAAKG,MAAK,CAACC,UAAU,WAAUhG,SAAA,CAC9BqB,cAACuE,IAAKK,MAAK,CAACpE,UAAU,SAAQ7B,SAAC,aAC/BqB,cAACuE,IAAKM,QAAO,CACXrE,UAAWC,IAAOqE,MAClBC,KAAK,OACLC,YAAY,WACZnB,KAAK,WACL3D,MAAOmD,EACP4B,SAAUvB,OAGE,QADHX,EACZS,EAAOH,gBAAQ,IAAAN,OAAA,EAAfA,EAAiBmC,KAAI,CAACC,EAASC,IAC9BpF,cAACqF,IAAK,CAACC,QAAQ,OAAiB9E,UAAU,cAAa7B,SACpDwG,GADwBC,KAM7B7E,eAACgE,IAAKG,MAAK,CAACC,UAAU,WAAUhG,SAAA,CAC9BqB,cAACuE,IAAKK,MAAK,CAACpE,UAAU,SAAQ7B,SAAC,aAC/BqB,cAACuE,IAAKM,QAAO,CACXrE,UAAWC,IAAOqE,MAClBC,KAAK,WACLC,YAAY,WACZnB,KAAK,WACL3D,MAAO6F,EACPd,SAAUvB,OAGG,QADJV,EACZQ,EAAOF,iBAAS,IAAAN,OAAA,EAAhBA,EAAkBkC,KAAI,CAACC,EAASC,IAC/BpF,cAACqF,IAAK,CAAWC,QAAQ,OAAO9E,UAAU,cAAa7B,SACpDwG,GADSC,KAKdpF,cAACuF,IAAM,CACL/E,UAAS,GAAAqB,OAAK2D,IAAUD,OAAM,KAAA1D,OAAI2D,IAAUC,KAAI,KAAA5D,OAAI2D,IAAUE,OAAM,KACpEX,KAAK,SAAQpG,SACd,WAGuB,QADfuE,EACRM,EAAOmC,wBAAgB,IAAAzC,OAAA,EAAvBA,EAAyBgC,KAAI,CAACC,EAASC,IACtCpF,cAACqF,IAAK,CAAWC,QAAQ,OAAO9E,UAAU,mBAAkB7B,SACzDwG,GADSC,cAUpBpF,cAAC+D,IAAG,CAACvD,UAAS,GAAAqB,OAAKpB,IAAOsD,KAAMpF,SAC9BqB,cAACgE,IAAG,CAAArF,SACFqB,cAACyC,IAAS,CAACjC,UAAU,OAAM7B,SACzB4B,eAACY,IAAI,CAACX,UAAWC,IAAOU,KAAMC,GAAG,UAASzC,SAAA,CAAC,0BAClBqB,cAAA,QAAArB,SAAM,iCAS3C,E,yBCnIe6H,MAVD9H,IAAgC,IAA/B,QAAE+H,EAAO,IAAErG,EAAG,QAAE+E,GAASzG,EACtC,OACE6B,eAAA,OAAKC,UAAS,GAAAqB,OAAKpB,IAAO+F,MAAK,QAAO7H,SAAA,CACnC8H,GAAWzG,cAAC0G,IAAO,CAACC,UAAU,WAC9BvG,GAAOJ,cAAA,OAAKI,IAAKA,EAAKO,IAAKwE,IAC3BA,GAAWnF,cAAA,KAAGQ,UAAU,OAAM7B,SAAEwG,MAC7B,ECVK,OAA0B,mC,oBCmK1ByB,OA/If,WAA2B,IAADC,EAAAC,EACxB,MAAOtD,EAAQC,GAAa3E,mBAAS,CAAC,IAE/BiI,EAAUC,GAAelI,mBAAS,CACvCmI,QAAS,GACTC,MAAO,MAEH,QAAED,EAAO,MAAEC,GAAUH,EAErBI,EAAaC,iBAAO,MACpBrI,EAAUC,uBA0CVqI,EACJ9G,eAAA,OAAKC,UAAU,cAAa7B,SAAA,CAC1B4B,eAACgE,IAAKG,MAAK,CAAA/F,SAAA,CACTqB,cAACuE,IAAKK,MAAK,CAACpE,UAAU,SAAQ7B,SAAC,YAC/BqB,cAACuE,IAAKM,QAAO,CACXyC,GAAG,WACHC,KAAM,EACN1D,KAAK,UACLmB,YAAY,qBACZ9E,MAAO+G,EACPhC,SAjDctB,IACpBqD,EAAY,IACPD,EACH,CAACpD,EAAMC,OAAOC,MAAOF,EAAMC,OAAO1D,OAClC,OAgDO,OAANsD,QAAM,IAANA,GAAe,QAATqD,EAANrD,EAAQyD,eAAO,IAAAJ,OAAT,EAANA,EAAiB3B,KAAI,CAACC,EAASC,IAC9BpF,cAACqF,IAAK,CAACC,QAAQ,UAAS3G,SACrBwG,GAD2BC,KAKhC7E,eAACgF,IAAM,CACL/E,UAAS,GAAAqB,OAAK2D,IAAUD,QACxB3D,QAASA,IAAM7C,EAAQwH,SAAS5H,SAAA,CACjCqB,cAAA,KAAGQ,UAAU,sBAAwB,aACtCD,eAACgF,IAAM,CAAC/E,UAAS,GAAAqB,OAAK2D,IAAUD,QAAUR,KAAK,SAAQpG,SAAA,CACvDqB,cAAA,KAAGQ,UAAU,4BAA8B,cAK/C,OACED,eAACgE,IAAI,CAACC,SAlDa/H,UACnBkH,EAAMc,iBACN,MAAM+C,EAAW,IAAIC,SAGrBD,EAASE,OAAO,UAAWT,GAC3BO,EAASE,OAAO,QAASP,EAAWQ,QAAQC,MAAM,IAElD,IACE,MAAM,KAAEhL,SAAeP,EAASF,KAAK,UAAWqL,GAChDzI,EAAQU,KAAK,UAADoC,OAAWjF,EAAKU,IAC9B,CAAE,MAAOC,GAAM,IAADuC,EAEsB+H,EAAlC,GAA6B,OAAb,QAAZ/H,EAAAvC,EAAIsC,gBAAQ,IAAAC,OAAA,EAAZA,EAAcC,QAChB0D,EAAsB,QAAboE,EAACtK,EAAIsC,gBAAQ,IAAAgI,OAAA,EAAZA,EAAcjL,KAE5B,GAkC6B+B,SAAA,CAC3BqB,cAAC+D,IAAG,CAAApF,SACFqB,cAACgE,IAAG,CAAArF,SACF4B,eAACkC,IAAS,CACRjC,UAAS,GAAAqB,OAAKpB,KAAOgC,UAAS,8CAA6C9D,SAAA,CAE3E4B,eAACgE,IAAKG,MAAK,CAAClE,UAAU,cAAa7B,SAAA,CAChCuI,EACC3G,eAAAW,WAAA,CAAAvC,SAAA,CACEqB,cAAA,UAAArB,SAEEqB,cAACmE,IAAK,CACF3D,UAAWsH,IAAU3D,MACrB/D,IAAK8G,EACLa,SAAO,MAGb/H,cAAA,OAAArB,SACEqB,cAACuE,IAAKK,MAAK,CACTpE,UAAS,GAAAqB,OAAK2D,IAAUD,OAAM,QAC9ByC,QAAQ,eAAcrJ,SACvB,0BAOLqB,cAACuE,IAAKK,MAAK,CACTpE,UAAU,gCACVwH,QAAQ,eAAcrJ,SAEtBqB,cAACwG,EAAK,CACJpG,IAAK6H,GACL9C,QAAQ,sCAMdnF,cAACuE,IAAK2D,KAAI,CACR5K,GAAG,eACH6K,OAAO,UACPlD,SAxGatB,IACrBA,EAAMC,OAAOgE,MAAMQ,SACrBC,IAAIC,gBAAgBpB,GACpBF,EAAY,IACPD,EACHG,MAAOmB,IAAIE,gBAAgB5E,EAAMC,OAAOgE,MAAM,MAElD,EAkGYY,IAAKrB,EACL3G,UAAWC,KAAOgI,uBAGf,OAANjF,QAAM,IAANA,GAAa,QAAPsD,EAANtD,EAAQ0D,aAAK,IAAAJ,OAAP,EAANA,EAAe5B,KAAI,CAACC,EAASC,IAC5BpF,cAACqF,IAAK,CAACC,QAAQ,UAAS3G,SACrBwG,GAD2BC,YAOxCpF,cAACyC,IAAS,CAACjC,UAAWsH,IAAUY,QAAQ/J,SAAE0I,MAG9C,E,iEC1JA,MAAMsB,GAAYjK,IAAA,IAAC,QAAEkD,GAASlD,EAAA,OAC5BsB,cAAA,KACEQ,UAAU,uBACVoB,QAAUgH,IACRA,EAAEnE,iBACF7C,EAAQgH,EAAE,GAEZ,EAISC,GAAYC,IAAmC,IAAlC,WAAEC,EAAU,aAAEC,GAAcF,EACpD,MAAOG,EAAQC,GAAWpK,oBAAS,GAE7BqK,EAAcA,IAAMD,GAAQ,GAGlC,OACE3I,eAAAW,WAAA,CAAAvC,SAAA,CACEqB,cAAC2I,GAAS,CAAC/G,QAJIwH,IAAMF,GAAQ,KAM7BlJ,cAACqJ,KAAK,CAACC,KAAK,KAAKC,KAAMN,EAASO,OAAQL,EAAYxK,SAClDqB,cAACqJ,KAAMI,KAAI,CAAA9K,SACTqB,cAAA,OAAKQ,UAAU,cAAa7B,SAC1B4B,eAACmJ,KAAW,CAAA/K,SAAA,CACV4B,eAACgF,IAAM,CACHD,QAAQ,OACR1D,QAASmH,EACT,aAAW,OAAMpK,SAAA,CAEnBqB,cAAA,KAAGQ,UAAU,gBAAgB,WAE/BD,eAACgF,IAAM,CACLD,QAAQ,OACR1D,QAASoH,EACT,aAAW,SAAQrK,SAAA,CAEnBqB,cAAA,KAAGQ,UAAU,qBAAqB,aAEpCD,eAACgF,IAAM,CACLD,QAAQ,OACR1D,QAASuH,EAAYxK,SAAA,CAEvBqB,cAAA,KAAGQ,UAAU,sBAAsB,uBAM1C,EAKMmJ,GAAsBC,IAAa,IAAZ,GAAEtM,GAAIsM,EACxC,MAAM7K,EAAUC,wBACTuK,EAAML,GAAWpK,oBAAS,GAKjC,OACEyB,eAAAW,WAAA,CAAAvC,SAAA,CACEqB,cAAC2I,GAAS,CAAC/G,QAJIwH,IAAMF,GAAQ,KAM7BlJ,cAACqJ,KAAK,CAACE,KAAMA,EAAMC,OAPHL,IAAMD,GAAQ,GAOSvK,SACrCqB,cAACqJ,KAAMI,KAAI,CAAA9K,SACTqB,cAAA,OAAKQ,UAAU,cAAa7B,SAC1B4B,eAACmJ,KAAW,CAAA/K,SAAA,CACV4B,eAACgF,IAAM,CACLD,QAAQ,OACR1D,QAASA,IAAM7C,EAAQU,KAAK,aAADoC,OAAcvE,EAAE,UAC3C,aAAW,eAAcqB,SAAA,CAEzBqB,cAAA,KAAGQ,UAAU,gBAAgB,mBAE/BD,eAACgF,IAAM,CACLD,QAAQ,OACR1D,QAASA,IAAM7C,EAAQU,KAAK,aAADoC,OAAcvE,EAAE,mBAC3C,aAAW,gBAAeqB,SAAA,CAE1BqB,cAAA,KAAGQ,UAAU,mBAAmB,sBAElCD,eAACgF,IAAM,CACLD,QAAQ,OACR1D,QAASA,IAAM7C,EAAQU,KAAK,aAADoC,OAAcvE,EAAE,mBAC3C,aAAW,gBAAeqB,SAAA,CAE1BqB,cAAA,KAAGQ,UAAU,eAAe,iCAMrC,E,iCC5DQqJ,OAlCInL,IAA2C,IAA1C,OAAEoL,EAAM,QAAEC,EAAO,SAAEC,EAAQ,MAAEC,GAAOvL,EACtD,OACEsB,cAACqJ,KAAK,CAACE,KAAMO,EAAQN,OAAQO,EAAQpL,SACnCqB,cAACqJ,KAAMI,KAAI,CAAA9K,SACTqB,cAAA,OAAKQ,UAAU,cAAa7B,SAC1B4B,eAAA,OAAA5B,SAAA,CACEqB,cAACkK,KAAmB,CAACC,IAAKH,EAAUI,MAAOH,EAAMtL,SAC/CqB,cAAA,OAAKQ,UAAWC,KAAO4J,eAAe1L,SACpCqB,cAAA,KAAGQ,UAAU,gCAIjBR,cAACsK,KAAkB,CAACH,IAAKH,EAAUC,MAAOA,EAAMtL,SAC9CqB,cAAA,OAAKQ,UAAWC,KAAO4J,eAAe1L,SACpCqB,cAAA,KAAGQ,UAAU,+BAIjBR,cAACuK,KAAmB,CAACJ,IAAKH,EAAUC,MAAOA,EAAMtL,SAC/CqB,cAAA,OAAKQ,UAAWC,KAAO4J,eAAe1L,SACpCqB,cAAA,KAAGQ,UAAU,8BAIjBR,cAACuF,IAAM,CAACD,QAAQ,OAAO1D,QAASmI,EAAQpL,SACtCqB,cAAA,KAAGQ,UAAU,gCAKf,ECZGgK,OArBW9L,IAAkD,IAAjD,aAAE+L,EAAY,KAAElB,EAAI,QAAEL,EAAO,KAAEwB,EAAI,KAAE3F,GAAMrG,EACpE,OACEsB,cAAAkB,WAAA,CAAAvC,SACEqB,cAACqJ,KAAK,CAACC,KAAK,KAAKC,KAAMA,EAAMoB,SAAS,SAASC,UAAU,EAAOpK,UAAU,OAAM7B,SAC9EqB,cAACqJ,KAAMI,KAAI,CAACjJ,UAAU,OAAM7B,SAC1BqB,cAAA,OAAKQ,UAAU,cAAa7B,SAC1B4B,eAACmJ,KAAW,CAAA/K,SAAA,CACVqB,cAACuF,IAAM,CAACD,QAAQ,YAAYgE,KAAK,KAAK1H,QAASA,IAAMsH,GAAQ,GAAOvK,SAAC,WAGrEqB,cAACuF,IAAM,CAACD,QAASP,EAAMuE,KAAK,KAAK1H,QAAS6I,EAAa9L,SACpD+L,cAMV,EC2QQG,OAjRDC,IACZ,MAAM,GACJxN,EAAE,MACFyN,EAAK,WACLhJ,EAAU,cACVC,EAAa,eACbgJ,EAAc,YACdC,EAAW,QACXC,EAAO,MACPjB,EAAK,QACLhD,EAAO,MACPC,EAAK,WACLiE,EAAU,SACVC,EAAQ,YACRC,GACEP,EAEElM,EAAcN,IACdT,GAAsB,OAAXe,QAAW,IAAXA,OAAW,EAAXA,EAAayE,YAAa0H,EACrChM,EAAUC,uBAGVsM,EAAWC,wBACXC,EAAaF,EAASG,SAASC,SAAS,SACxCC,EAAmC,MAAtBL,EAASG,SACtBG,EAAaN,EAASG,SAASI,WAAW,WAC1CC,EAAgBR,EAASG,SAASI,WAAW,eAG5CE,EAAaC,GAAkBlN,oBAAS,GACzCkL,EAAQ,GAAAnI,OAAMoK,OAAOX,SAASY,OAAM,WAAArK,OAAUvE,IAI7C6O,EAAWC,GAAgBtN,oBAAS,GAyF3C,OACEkB,cAACqM,KAAI,CAAC7L,UAAWC,KAAOoK,KAAKlM,SAC1BmN,EAECvL,eAAAW,WAAA,CAAAvC,SAAA,CACAqB,cAACmB,IAAI,CAACC,GAAE,UAAAS,OAAYvE,GAAKqB,SACvBqB,cAACqM,KAAKC,IAAG,CAAClM,IAAK8G,EAAOvG,IAAKsJ,MAE7BjK,cAACqM,KAAK5C,KAAI,CAAA9K,SACR4B,eAAC8L,KAAKE,KAAI,CAAC/L,UAAWC,KAAO+L,YAAY7N,SAAA,CACvB,GAAAkD,OAAMoJ,EAAP,IAAhBA,EAAkC,gBAA2B,kBACzC,GAAApJ,OAAMmJ,EAAP,IAAnBA,EAAwC,WAA8B,qBAMzEzK,eAAAW,WAAA,CAAAvC,SAAA,CACAqB,cAACqM,KAAK5C,KAAI,CAAA9K,SACV4B,eAAA,OAAKC,UAAS,qDAAAqB,OAAuDpB,KAAOgM,aAAc9N,SAAA,CACtF4B,eAACY,IAAI,CAACC,GAAE,aAAAS,OAAeE,GAAcvB,UAAS,6BAAAqB,OAA+BpB,KAAOiM,kBAAmB/N,SAAA,CACvGqB,cAACG,EAAM,CAACC,IAAK4B,EAAe3B,OAAQ,KACpCE,eAAA,QAAA5B,SAAA,CAAOoM,EAAM,WAAII,QAGhBtN,GACC0C,eAAAW,WAAA,CAAAvC,SAAA,CACEqB,cAAC6I,GAAS,CAACE,WA9GNA,KACjBhK,EAAQU,KAAK,UAADoC,OAAWvE,EAAE,SAAQ,EA6Gc0L,aAAcA,KAlH7DoD,GAAa,EAkHwE,IAGzEpM,cAACwK,GAAiB,CAChBjB,KAAM4C,EACNjD,QAASkD,EACT3B,aA/GKhO,UACnB,UACQF,EAASoQ,OAAO,UAAD9K,OAAWvE,EAAE,MAClCyB,EAAQU,KAAK,aAADoC,OAAyB,OAAXjD,QAAW,IAAXA,OAAW,EAAXA,EAAamD,YACzC,CAAE,MAAOxE,GACP,GA2GYmN,KAAK,eACL3F,KAAK,iBAMjB/E,cAACmB,IAAI,CAACC,GAAE,UAAAS,OAAYvE,GAAKqB,SACvBqB,cAACqM,KAAKC,IAAG,CAAClM,IAAK8G,EAAOvG,IAAKsJ,MAE7B1J,eAAC8L,KAAK5C,KAAI,CAAA9K,SAAA,CACR4B,eAAA,OAAKC,UAAWC,KAAOmM,QAAQjO,SAAA,CAC5Bd,EACCmC,cAAC6M,KAAc,CACbC,UAAU,MACVC,QAAS/M,cAACgN,KAAO,CAAArO,SAAC,kCAAwCA,SAE1DqB,cAAA,KAAGQ,UAAU,mBAEb0K,EACFlL,cAAA,QAAM4B,QAzGKnF,UACnB,UACQF,EAASoQ,OAAO,UAAD9K,OAAWqJ,EAAO,MACvCE,GAAU6B,IAAS,IACdA,EACHjQ,QAASiQ,EAAUjQ,QAAQkI,KAAK/I,GACvBA,EAAKmB,KAAOA,EACf,IAAKnB,EAAM8O,YAAa9O,EAAK8O,YAAc,EAAGC,QAAS,MACvD/O,OAGV,CAAE,MAAOoB,GACP,GA6FkCoB,SAC1BqB,cAAA,KAAGQ,UAAS,gBAAAqB,OAAkBpB,KAAOyM,WAErCtO,EACFoB,cAAA,QAAM4B,QA9HGnF,UACjB,IACE,MAAM,KAAEG,SAAeL,EAASJ,KAAK,UAAW,CAAEA,KAAMmB,IACxD8N,GAAU6B,IAAS,IACdA,EACHjQ,QAASiQ,EAAUjQ,QAAQkI,KAAK/I,GACvBA,EAAKmB,KAAOA,EACf,IAAKnB,EAAM8O,YAAa9O,EAAK8O,YAAc,EAAGC,QAAStO,EAAKU,IAC5DnB,OAGV,CAAE,MAAOoB,GACP,GAkHgCoB,SACxBqB,cAAA,KAAGQ,UAAS,gBAAAqB,OAAkBpB,KAAO0M,kBAGvCnN,cAAC6M,KAAc,CACbC,UAAU,MACVC,QAAS/M,cAACgN,KAAO,CAAArO,SAAC,0BAAgCA,SAElDqB,cAAA,KAAGQ,UAAU,mBAIhB3C,EACCmC,cAAC6M,KAAc,CACbC,UAAU,MACVC,QAAS/M,cAACgN,KAAO,CAAArO,SAAC,+CAAqDA,SAEvEqB,cAAA,KAAGQ,UAAU,6BAEb6K,EACFrL,cAAA,QAAM4B,QA/FSnF,UACvB,UACQF,EAASoQ,OAAO,aAAD9K,OAAcwJ,EAAW,MAC9CD,GAAU6B,IAAS,IACdA,EACHjQ,QAASiQ,EAAUjQ,QAAQkI,KAAK/I,GACvBA,EAAKmB,KAAOA,EACf,IAAKnB,EAAMkP,YAAa,MACxBlP,OAGV,CAAE,MAAOoB,GACP,GAmFsCoB,SAC9BqB,cAAC6M,KAAc,CACfC,UAAU,MACVC,QAAS/M,cAACgN,KAAO,CAAArO,SAAC,2BAAiCA,SAEnDqB,cAAA,KAAGQ,UAAS,6BAGZ5B,EACFoB,cAAA,QAAM4B,QAzHOnF,UACrB,IACE,MAAM,KAAEG,SAAeL,EAASJ,KAAK,aAAc,CAAEA,KAAMmB,IAC3D8N,GAAU6B,IAAS,IACdA,EACHjQ,QAASiQ,EAAUjQ,QAAQkI,KAAK/I,GACvBA,EAAKmB,KAAOA,EACf,IAAKnB,EAAMkP,YAAazO,EAAKU,IAC7BnB,OAGV,CAAE,MAAOoB,GACP,GA6GoCoB,SAC5BqB,cAAC6M,KAAc,CACfC,UAAU,MACVC,QAAS/M,cAACgN,KAAO,CAAArO,SAAC,eAAqBA,SAEvCqB,cAAA,KAAGQ,UAAS,+BAIdR,cAAC6M,KAAc,CACbC,UAAU,MACVC,QAAS/M,cAACgN,KAAO,CAAArO,SAAC,0BAAgCA,SAElDqB,cAAA,KAAGQ,UAAU,6BAIjBR,cAACmB,IAAI,CAACC,GAAE,UAAAS,OAAYvE,GAAKqB,SACtBiN,EACC5L,cAAC6M,KAAc,CACbC,UAAU,MACVC,QAAS/M,cAACgN,KAAO,CAAArO,SAAEC,EAAc,sBAAwB,uBAAgCD,SAEzFqB,cAAA,KAAGQ,UAAS,mBAAAqB,OAAqBpB,KAAO2M,cAG1CpN,cAAA,KAAGQ,UAAS,mBAAAqB,OAAqBpB,KAAO2M,cAI5CpN,cAAA,QAAM4B,QAjNIyL,IAAMrB,GAAe,GAiNNrN,SACzBqB,cAAA,KAAGQ,UAAU,gCAEbR,cAAC6J,GAAU,CAACC,OAAQiC,EAAahC,QAnNtBuD,IAAMtB,GAAe,GAmNsBhC,SAAUA,EAAUC,MAAOA,OAE/E1J,eAAC8L,KAAKE,KAAI,CAAC/L,UAAWC,KAAOmM,QAAQjO,SAAA,CACnB,GAAAkD,OAAMoJ,EAAP,IAAhBA,EAAkC,gBAA2B,kBACzC,GAAApJ,OAAMmJ,EAAP,IAAnBA,EAAwC,WAA8B,gBAEtE/D,GACC1G,eAAC8L,KAAKE,KAAI,CAAC/L,UAAWC,KAAOmM,QAAQjO,SAAA,CACnCqB,cAAA,QAAMQ,UAAWC,KAAO8M,SAAS5O,SAAEoM,IAClC9D,KAGJuE,GAAcG,EACb3L,cAACmB,IAAI,CAACC,GAAE,UAAAS,OAAYvE,GAAKqB,SACvBqB,cAACqM,KAAKE,KAAI,CAAC/L,UAAWC,KAAOmM,QAAQjO,SACf,IAAnBqM,EAAoB,6BAEE,IAAnBA,EAAoB,oCAAAnJ,OAEPmJ,EAAc,oBAGjC,YAIL,E,iDC/MIwC,OAtEf,SAAyB1C,GACvB,MAAM,GAAExN,EAAE,QAAE2J,EAAO,gBAAEwG,EAAe,YAAEC,GAAgB5C,GAE/C6C,EAAaC,GAAkB9O,mBAASmI,GAkC/C,OACE1G,eAACgE,IAAI,CAACC,SA3Ba/H,UACnBkH,EAAMc,iBACN,UACQlI,EAASsR,IAAI,aAADhM,OAAcvE,EAAE,KAAK,CACrC2J,QAAS0G,EAAYG,SAEvBJ,GAAaK,IAAY,IACpBA,EACH/Q,QAAS+Q,EAAa/Q,QAAQkI,KAAK8I,GAC1BA,EAAQ1Q,KAAOA,EAClB,IACK0Q,EACH/G,QAAS0G,EAAYG,OACrB3C,WAAY,OAEd6C,QAKRP,GAAgB,EAClB,CAAE,MAAOlQ,GACP,GAK2BoB,SAAA,CAC3BqB,cAACuE,IAAKG,MAAK,CAAClE,UAAU,OAAM7B,SAC1BqB,cAACuE,IAAKM,QAAO,CACXrE,UAAWC,KAAO8D,KAClB+C,GAAG,WACHpH,MAAOyN,EACP1I,SAtCctB,IACpBiK,EAAejK,EAAMC,OAAO1D,MAAM,EAsC5BqH,KAAM,MAGVhH,eAAA,OAAKC,UAAU,aAAY7B,SAAA,CAEzBqB,cAAA,UACEQ,UAAWC,KAAO8E,OAClB3D,QAASA,IAAM6L,GAAgB,GAC/B1I,KAAK,SAAQpG,SACd,WAIDqB,cAAA,UACEQ,UAAWC,KAAO8E,OAClB0I,UAAWhH,EAAQ6G,OACnB/I,KAAK,SAAQpG,SACd,cAMT,ECmCeuP,OApGEpD,IACf,MAAM,WACJ/I,EAAU,cACVC,EAAa,MACb+I,EAAK,WACLI,EAAU,QACVlE,EAAO,GACP3J,EAAE,QACF6Q,EAAO,YACPT,GACE5C,GAEGsD,EAAcX,GAAmB3O,oBAAS,GAC3CF,EAAcN,IACdT,GAAsB,OAAXe,QAAW,IAAXA,OAAW,EAAXA,EAAayE,YAAa0H,GAEpCoB,EAAWC,GAAgBtN,oBAAS,GAyB3C,OACEyB,eAAA,OAAA5B,SAAA,CACEqB,cAAA,SAGAO,eAAC8N,KAAK,CAAC7N,UAAU,4BAA2B7B,SAAA,CAC1CqB,cAACmB,IAAI,CAACC,GAAE,aAAAS,OAAeE,GAAcvB,UAAWC,KAAO6N,YAAY3P,SACjEqB,cAACG,EAAM,CAACC,IAAK4B,EAAe3B,OAAQ,OAItCE,eAAC8N,KAAM5E,KAAI,CAACjJ,UAAU,OAAM7B,SAAA,CAC1BqB,cAAA,QAAMQ,UAAWC,KAAO8N,MAAM5P,SAAEoM,IAChC/K,cAAA,QAAMQ,UAAWC,KAAO+N,KAAK7P,SAAEwM,IAG9BiD,EACCpO,cAACwN,GAAe,CACdlQ,GAAIA,EACJyE,WAAYA,EACZkF,QAASA,EACTwH,aAAczM,EACd0L,YAAaA,EACbD,gBAAiBA,IAGnBlN,eAAAW,WAAA,CAAAvC,SAAA,CAEGd,EACC0C,eAAAW,WAAA,CAAAvC,SAAA,CACEqB,cAAA,QAAM4B,QArDE8M,KACtBtC,GAAa,EAAK,EAoD4B5L,UAAWC,KAAOkO,WAAWhQ,SAC3DqB,cAAA,KAAGQ,UAAU,wBAEfR,cAAA,QACE4B,QAASA,IAAM6L,GAAgB,GAC/BjN,UAAWC,KAAOkO,WAAWhQ,SAE7BqB,cAAA,KAAGQ,UAAU,8BAGf,KAGJR,cAAA,KAAArB,SAAIsI,aAKZjH,cAACwK,GAAiB,CAChBjB,KAAM4C,EACNjD,QAASkD,EACT3B,aArEehO,UACnB,UACQF,EAASoQ,OAAO,aAAD9K,OAAcvE,EAAE,MACrC6Q,GAASS,IAAQ,CACf5R,QAAS,CACP,IACK4R,EAAS5R,QAAQ,GACpBgO,eAAgB4D,EAAS5R,QAAQ,GAAGgO,eAAiB,QAI3D0C,GAAaK,IAAY,IACpBA,EACH/Q,QAAS+Q,EAAa/Q,QAAQ6R,QAAQb,GAAYA,EAAQ1Q,KAAOA,OAErE,CAAE,MAAOC,GAAM,GAuDXmN,KAAK,kBACL3F,KAAK,WAEH,E,kBCzBK+J,OAvEf,SAA2BhE,GACzB,MAAM,KAAE3O,EAAI,QAAEgS,EAAO,YAAET,EAAW,aAAEe,EAAY,WAAE1M,GAAe+I,GAC1D7D,EAAS8H,GAAcjQ,mBAAS,IAqCvC,OACEyB,eAACgE,IAAI,CAAC/D,UAAU,OAAOgE,SA9BJ/H,UACnBkH,EAAMc,iBACN,IACE,MAAM,KAAE7H,SAAeL,EAASJ,KAAK,aAAc,CACjD8K,UACA9K,SAIFuR,GAAaK,IAAY,IACpBA,EACH/Q,QAAS,CAACJ,KAASmR,EAAa/Q,aAElCmR,GAASS,IAAQ,CACf5R,QAAS,CACP,IACK4R,EAAS5R,QAAQ,GACpBgO,eAAgB4D,EAAS5R,QAAQ,GAAGgO,eAAiB,QAM3D+D,EAAW,GACb,CAAE,MAAOxR,GACP,GAK4CoB,SAAA,CAC5CqB,cAACuE,IAAKG,MAAK,CAAA/F,SACT4B,eAACyO,KAAU,CAAArQ,SAAA,CACTqB,cAACmB,IAAI,CAACC,GAAE,aAAAS,OAAeE,GAAcvB,UAAWC,KAAO6N,YAAY3P,SACjEqB,cAACG,EAAM,CAACC,IAAKqO,EAAcpO,OAAQ,OAErCL,cAACuE,IAAKM,QAAO,CACXrE,UAAWC,KAAO8D,KAClBS,YAAY,iBACZsC,GAAG,WACHpH,MAAO+G,EACPhC,SA9CYtB,IACpBoL,EAAWpL,EAAMC,OAAO1D,MAAM,EA8CtBqH,KAAM,SAMXN,EAAQ6G,QACP9N,cAAA,UACAQ,UAAS,GAAAqB,OAAKpB,KAAO8E,OAAM,wBAC3BR,KAAK,SAAQpG,SACZ,cAOT,ECaesQ,OA3Ef,WACE,MAAM,GAAE3R,GAAO4R,uBACR/S,EAAMgS,GAAWrP,mBAAS,CAAE9B,QAAS,MACrCmS,EAAUzB,GAAe5O,mBAAS,CAAE9B,QAAS,KAG9C4B,EAAcN,IACd0D,EAA2B,OAAXpD,QAAW,IAAXA,OAAW,EAAXA,EAAaoD,cAqBnC,OAjBA/C,qBAAU,KACYxC,WAClB,IACE,OAASG,KAAMT,IAAUS,KAAMuS,UAAoBxP,QAAQyP,IAAI,CAC7D/S,EAASQ,IAAI,UAADgF,OAAWvE,IACvBjB,EAASQ,IAAI,mBAADgF,OAAoBvE,MAElC6Q,EAAQ,CAAEnR,QAAS,CAACb,KACpBuR,EAAYyB,EACd,CAAE,MAAO5R,GACP,GAIJ2B,EAAa,GACZ,CAAC5B,IAGF0C,cAAC+D,IAAG,CAAApF,SACF4B,eAACyD,IAAG,CAACqL,GAAI,GAAG1Q,SAAA,CACVqB,cAAC6K,GAAI,IAAK1O,EAAKa,QAAQ,GAAIoO,SAAU+C,EAASmB,UAAQ,IACtD/O,eAACkC,IAAS,CAACjC,UAAWsH,IAAUyH,aAAa5Q,SAAA,CAE1CC,EACCoB,cAAC8O,GAAiB,CAChB/M,WAAYnD,EAAYmD,WACxB0M,aAAczM,EACd7F,KAAMmB,EACN6Q,QAASA,EACTT,YAAaA,IAEbyB,EAASnS,QAAQoL,OACnB,WACE,KACH+G,EAASnS,QAAQoL,OAChBpI,cAACwP,KAAc,CACf7Q,SACEwQ,EAASnS,QAAQkI,KAAI8I,GACnBhO,cAACkO,GAAO,IAEJF,EACJG,QAASA,EACTT,YAAaA,GAHRM,EAAQ1Q,MAOjBmS,WAAYN,EAASnS,QAAQoL,OAC7BsH,OAAQ1P,cAACwG,EAAK,CAACC,SAAO,IACtBkJ,UAAWR,EAASrS,KACpBA,KAAMA,IAAMN,EAAc2S,EAAUzB,KAElC9O,EAEFoB,cAAA,QAAArB,SAAM,MAGNqB,cAAA,QAAArB,SAAM,8CAMlB,E,oBC1Fe,OAA0B,uCCwG1BiR,OApFf,SAAkBlR,GAA4B,IAA3B,QAAEyG,EAAO,OAAE0J,EAAS,IAAInQ,EACzC,MAAOmR,EAAOzE,GAAYtM,mBAAS,CAAE9B,QAAS,MACvC8S,EAAWC,GAAgBjR,oBAAS,IACrC,SAAE2M,GAAaF,yBAEdyE,EAAOC,GAAYnR,mBAAS,IAC7BF,EAAcN,IAEdgN,EAAWC,wBACX2E,EAAmB5E,EAASG,SAASC,SAAS,eAC9CF,EAAaF,EAASG,SAASC,SAAS,SA0B9C,OAvBAzM,qBAAU,KAaR8Q,GAAa,GACb,MAAMI,EAAQC,YAAW,KAbN3T,WACjB,IACE,MAAM,KAAEG,SAAeP,EAASQ,IAAI,WAADgF,OAAYgN,EAAM,WAAAhN,OAAUmO,IAC/D5E,EAASxO,GACTmT,GAAa,EACf,CAAE,MAAOxS,GACP,GAQF8S,EAAY,GACX,KAEH,MAAO,KACLC,aAAaH,EAAM,CACpB,GACA,CAACtB,EAAQmB,EAAOvE,EAAU7M,IAG3BoB,cAAC+D,IAAG,CAACvD,UAAU,QAAO7B,SACpB4B,eAACyD,IAAG,CAACxD,UAAU,kBAAkB6O,GAAI,GAAG1Q,SAAA,CAEtCqB,cAAA,KAAGQ,UAAS,iBAAAqB,OAAmBpB,KAAO8P,cACtCvQ,cAACuE,IAAI,CACH/D,UAAWC,KAAO+P,UAClBhM,SAAWb,GAAUA,EAAMc,iBAAiB9F,SAE5CqB,cAACuE,IAAKM,QAAO,CACX3E,MAAO8P,EACP/K,SAAWtB,GAAUsM,EAAStM,EAAMC,OAAO1D,OAC3C6E,KAAK,OACLvE,UAAU,UACVwE,YAAY,sBAIf8K,EACCvP,eAAAW,WAAA,CAAAvC,SAAA,CACGuR,EAAmBlQ,cAAA,MAAArB,SAAI,qBAAwB6M,EAAaxL,cAAA,MAAArB,SAAI,cAAiB,KACjFkR,EAAM7S,QAAQoL,OAEbpI,cAACwP,KAAc,CACb7Q,SAAUkR,EAAM7S,QAAQkI,KAAK/I,GAC3B6D,cAAC6K,GAAI,IAAmB1O,EAAMiP,SAAUA,GAA7BjP,EAAKmB,MAElBmS,WAAYI,EAAM7S,QAAQoL,OAC1BsH,OAAQ1P,cAACwG,EAAK,CAACC,SAAO,IACtBkJ,UAAWE,EAAM/S,KACjBA,KAAMA,IAAMN,EAAcqT,EAAOzE,KAGnCpL,cAACyC,IAAS,CAACjC,UAAWsH,IAAUY,QAAQ/J,SACtCqB,cAACwG,EAAK,CAACpG,IAAKqQ,GAAWtL,QAASA,SAKtCnF,cAACyC,IAAS,CAACjC,UAAWsH,IAAUY,QAAQ/J,SACtCqB,cAACwG,EAAK,CAACC,SAAO,UAM1B,ECiEeiK,OAtJf,WAAyB,IAAD7J,EAAAC,EACtB,MAAOtD,EAAQC,GAAa3E,mBAAS,CAAC,IAE/BiI,EAAUC,GAAelI,mBAAS,CACvCmI,QAAS,GACTC,MAAO,MAEH,QAAED,EAAO,MAAEC,GAAUH,EAGrBI,EAAaC,iBAAO,MAGpBrI,EAAUC,wBACV,GAAE1B,GAAO4R,sBAGfjQ,qBAAU,KACYxC,WAClB,IACE,MAAM,KAAEG,SAAeP,EAASQ,IAAI,UAADgF,OAAWvE,EAAE,OAC1C,QAAE2J,EAAO,MAAEC,EAAK,SAAErJ,GAAajB,EAIrCiB,EAAWmJ,EAAY,CAAEC,UAASC,UAAWnI,EAAQU,KAAK,IAC5D,CAAE,MAAOlC,GACP,GAIJ2B,EAAa,GACZ,CAACH,EAASzB,IAGb,MA0CM+J,EACJ9G,eAAA,OAAKC,UAAU,cAAa7B,SAAA,CAC1B4B,eAACgE,IAAKG,MAAK,CAAA/F,SAAA,CACTqB,cAACuE,IAAKK,MAAK,CAACpE,UAAU,SAAQ7B,SAAC,YAC/BqB,cAACuE,IAAKM,QAAO,CACXyC,GAAG,WACHC,KAAM,EACN1D,KAAK,UACLmB,YAAY,qBACZ9E,MAAO+G,EACPhC,SApDctB,IACpBqD,EAAY,IACPD,EACH,CAACpD,EAAMC,OAAOC,MAAOF,EAAMC,OAAO1D,OAClC,OAmDO,OAANsD,QAAM,IAANA,GAAe,QAATqD,EAANrD,EAAQyD,eAAO,IAAAJ,OAAT,EAANA,EAAiB3B,KAAI,CAACC,EAASC,IAC9BpF,cAACqF,IAAK,CAACC,QAAQ,UAAS3G,SACrBwG,GAD2BC,KAKhC7E,eAACgF,IAAM,CACL/E,UAAS,GAAAqB,OAAK2D,IAAUD,QACxB3D,QAASA,IAAM7C,EAAQwH,SAAS5H,SAAA,CACjCqB,cAAA,KAAGQ,UAAU,sBAAwB,aACtCD,eAACgF,IAAM,CAAC/E,UAAS,GAAAqB,OAAK2D,IAAUD,QAAUR,KAAK,SAAQpG,SAAA,CACvDqB,cAAA,KAAGQ,UAAU,4BAA8B,aAK/C,OACER,cAACuE,IAAI,CAACC,SArDa/H,UAAkB,IAADkU,EACpChN,EAAMc,iBACN,MAAM+C,EAAW,IAAIC,SAErBD,EAASE,OAAO,UAAWT,GAGb,OAAVE,QAAU,IAAVA,GAAmB,QAATwJ,EAAVxJ,EAAYQ,eAAO,IAAAgJ,GAAnBA,EAAqB/I,MAAM,IAC3BJ,EAASE,OAAO,QAASP,EAAWQ,QAAQC,MAAM,IAGpD,UACQvL,EAASwR,IAAI,UAADhM,OAAWvE,EAAE,KAAKkK,GACpCzI,EAAQU,KAAK,UAADoC,OAAWvE,GACzB,CAAE,MAAOC,GAAM,IAADuC,EAEsB+H,EAAlC,GAA6B,OAAb,QAAZ/H,EAAAvC,EAAIsC,gBAAQ,IAAAC,OAAA,EAAZA,EAAcC,QAChB0D,EAAsB,QAAboE,EAACtK,EAAIsC,gBAAQ,IAAAgI,OAAA,EAAZA,EAAcjL,KAE5B,GAkC2B+B,SAC3B4B,eAACwD,IAAG,CAAApF,SAAA,CACFqB,cAACgE,IAAG,CAAArF,SACF4B,eAACkC,IAAS,CACRjC,UAAS,GAAAqB,OAAKpB,KAAOgC,UAAS,8CAA6C9D,SAAA,CAE3E4B,eAACgE,IAAKG,MAAK,CAAClE,UAAU,cAAa7B,SAAA,CAC7BqB,cAAA,UAAArB,SACEqB,cAACmE,IAAK,CACF3D,UAAWsH,IAAU3D,MACrB/D,IAAK8G,EACLa,SAAO,MAGb/H,cAAA,OAAArB,SACEqB,cAACuE,IAAKK,MAAK,CACTpE,UAAS,GAAAqB,OAAK2D,IAAUD,OAAM,QAC9ByC,QAAQ,eAAcrJ,SACvB,uBAIPqB,cAACuE,IAAK2D,KAAI,CACR5K,GAAG,eACH6K,OAAO,UACPlD,SAzFatB,IACrBA,EAAMC,OAAOgE,MAAMQ,SACrBC,IAAIC,gBAAgBpB,GACpBF,EAAY,IACPD,EACHG,MAAOmB,IAAIE,gBAAgB5E,EAAMC,OAAOgE,MAAM,MAElD,EAmFYY,IAAKrB,EACL3G,UAAWC,KAAOgI,uBAGf,OAANjF,QAAM,IAANA,GAAa,QAAPsD,EAANtD,EAAQ0D,aAAK,IAAAJ,OAAP,EAANA,EAAe5B,KAAI,CAACC,EAASC,IAC5BpF,cAACqF,IAAK,CAACC,QAAQ,UAAS3G,SACrBwG,GAD2BC,UAMlCpF,cAACyC,IAAS,CAACjC,UAAWsH,IAAUY,QAAQ/J,SAAE0I,QAIpD,E,oBCvJeuJ,OAREA,IAEb5Q,cAAA,OAAKQ,UAAWC,KAAOoQ,YAAYlS,SAC/BqB,cAACwG,EAAK,CAACpG,IAAKqQ,GAAWtL,QAAQ,uD,qBCJvC,MAAM2L,GAAqB1S,0BACrB2S,GAAwB3S,0BAEjB4S,GAAiBA,IAAMzS,qBAAWuS,IAClCG,GAAoBA,IAAM1S,qBAAWwS,IAKrCG,GAAsBxS,IAAmB,IAAlB,SAAEC,GAAUD,EAC9C,MAAOyS,EAAaC,GAAkBtS,mBAAS,CAC7CuS,YAAa,CAAErU,QAAS,IACxBsU,gBAAiB,CAAEtU,QAAS,MAGxB4B,EAAcN,IAmEpB,OAlBAW,qBAAU,KACYxC,WAClB,IACE,MAAM,KAAEG,SAAeP,EAASQ,IAC9B,wCAEFuU,GAAgBG,IAAS,IACpBA,EACHD,gBAAiB1U,KAErB,CAAE,MAAOW,GACT,GAIF2B,EAAa,GACZ,CAACN,IAGFoB,cAAC8Q,GAAmB7Q,SAAQ,CAACC,MAAOiR,EAAYxS,SAC9CqB,cAAC+Q,GAAsB9Q,SAAQ,CAACC,MAAO,CAAEkR,iBAAgBI,aAnExC/U,UACnB,IACE,MAAM,KAAEG,SAAeL,EAASJ,KAAK,cAAe,CAClDsV,SAAU/T,EAAeJ,KAG3B8T,GAAgBG,IAAS,IACpBA,EACHF,YAAa,CACXrU,QAASuU,EAAUF,YAAYrU,QAAQkI,KAAKzH,GAC1CD,EAAaC,EAASC,EAAgBd,EAAKU,OAG/CgU,gBAAiB,IACZC,EAAUD,gBACbtU,QAASuU,EAAUD,gBAAgBtU,QAAQkI,KAAKzH,GAC9CD,EAAaC,EAASC,EAAgBd,EAAKU,UAInD,CAAE,MAAOC,GACP,GA8CuEmU,eA1CpDjV,UACrB,UACQF,EAASoQ,OAAO,cAAD9K,OAAenE,EAAeC,aAAY,MAC/DyT,GAAgBG,IAAS,IACpBA,EACHF,YAAa,CACXrU,QAASuU,EAAUF,YAAYrU,QAAQkI,KAAKzH,GAC1CM,EAAeN,EAASC,MAG5B4T,gBAAiB,IACZC,EAAUD,gBACbtU,QAASuU,EAAUD,gBAAgBtU,QAAQkI,KAAKzH,GAC9CM,EAAeN,EAASC,SAIhC,CAAE,MAAOH,GACP,IAwBwFoB,SACrFA,KAEyB,E,wBCnCnBgT,OAjDE7G,IACf,MAAM,QAAErN,EAAO,OAAEmU,EAAM,UAAEC,EAAY,IAAO/G,GACtC,GAAExN,EAAE,aAAEK,EAAY,MAAEuJ,EAAK,MAAE6D,GAAUtN,EAErCmB,EAAcN,IACdT,GAAsB,OAAXe,QAAW,IAAXA,OAAW,EAAXA,EAAayE,YAAa0H,GAEpC,aAACyG,EAAY,eAAEE,GAAkBT,KAExC,OACE1Q,eAAA,OACEC,UAAS,kCAAAqB,OAAoC+P,GAAU,eAAgBjT,SAAA,CAEvEqB,cAAA,OAAArB,SACEqB,cAACmB,IAAI,CAACX,UAAU,oBAAoBY,GAAE,aAAAS,OAAevE,GAAKqB,SACxDqB,cAACG,EAAM,CAACC,IAAK8G,EAAO7G,OAAQwR,QAIhC7R,cAAA,OAAKQ,UAAS,QAAAqB,OAAUpB,KAAOqR,WAAYnT,SACxCoM,IAGH/K,cAAA,OAAKQ,UAAS,GAAAqB,QAAM+P,GAAU,WAAYjT,UACtCiT,GACAhT,IACCf,IACAF,EAECqC,cAAA,QACEQ,UAAS,GAAAqB,OAAKpB,KAAOsR,QACrBnQ,QAASA,IAAM8P,EAAejU,GAASkB,SACxC,aAKDqB,cAAA,QACAQ,UAAS,GAAAqB,OAAKpB,KAAOsR,QACrBnQ,QAASA,IAAM4P,EAAa/T,GAASkB,SACpC,gBAKH,ECXKqT,OAlCStT,IAAiB,IAAhB,OAAEkT,GAAQlT,EACjC,MAAM,gBAAE4S,GAAoBN,KAE5B,OACEhR,cAACyC,IAAS,CACRjC,UAAS,GAAAqB,OAAKiG,IAAUY,QAAO,KAAA7G,OAC7B+P,GAAU,8BACTjT,SAEF2S,EAAgBtU,QAAQoL,OAEvB7H,eAAAW,WAAA,CAAAvC,SAAA,CACEqB,cAAA,KAAGQ,UAAWC,KAAO8M,SAAS5O,SAAC,qBAC9BiT,EAEC5R,cAAA,OAAKQ,UAAU,gCAA+B7B,SAC3C2S,EAAgBtU,QAAQiV,MAAM,EAAG,GAAG/M,KAAKzH,GACxCuC,cAAC2R,GAAO,CAAkBlU,QAASA,EAASmU,QAAM,GAApCnU,EAAQH,QAK1BgU,EAAgBtU,QAAQkI,KAAKzH,GAC3BuC,cAAC2R,GAAO,CAAkBlU,QAASA,GAArBA,EAAQH,SAK5B0C,cAACwG,EAAK,CAACC,SAAO,KAEN,E,oBCyHDyL,OArIf,WACE,MAAOpC,EAAWC,GAAgBjR,oBAAS,IACpCqT,EAAcC,GAAmBtT,mBAAS,CAAE9B,QAAS,KAEtD4B,EAAcN,KACd,GAAEhB,GAAO4R,uBAET,eAAEkC,EAAc,aAAEI,EAAY,eAAEE,GAAmBT,MACnD,YAAEI,GAAgBL,MAEjBvT,GAAW4T,EAAYrU,QACxBa,GAAsB,OAAXe,QAAW,IAAXA,OAAW,EAAXA,EAAayE,aAAoB,OAAP5F,QAAO,IAAPA,OAAO,EAAPA,EAASsN,OAGpD9L,qBAAU,KACUxC,WAChB,IACE,OAASG,KAAMyU,IAAiBzU,KAAMuV,UAC9BxS,QAAQyP,IAAI,CAChB/S,EAASQ,IAAI,aAADgF,OAAcvE,EAAE,MAC5BjB,EAASQ,IAAI,0BAADgF,OAA2BvE,MAE3C8T,GAAgBG,IAAS,IACpBA,EACHF,YAAa,CAAErU,QAAS,CAACqU,QAE3Be,EAAgBD,GAChBpC,GAAa,EACf,CAAE,MAAOxS,GACP,GAGJ8U,EAAW,GACV,CAAC/U,EAAI8T,IAGR,MAAMkB,EACJ/R,eAAAW,WAAA,CAAAvC,SAAA,EACQ,OAAPlB,QAAO,IAAPA,OAAO,EAAPA,EAASI,WAAYmC,cAAC2J,GAAmB,CAACrM,GAAW,OAAPG,QAAO,IAAPA,OAAO,EAAPA,EAASH,KACtDiD,eAACwD,IAAG,CAACwO,WAAS,EAAC/R,UAAU,mBAAkB7B,SAAA,CACzCqB,cAACgE,IAAG,CAACqL,GAAI,EAAG7O,UAAU,eAAc7B,SAClCqB,cAACmE,IAAK,CACJ3D,UAAWC,KAAO+R,aAClBC,eAAa,EACbrS,IAAY,OAAP3C,QAAO,IAAPA,OAAO,EAAPA,EAASyJ,UAGlB3G,eAACyD,IAAG,CAACqL,GAAI,EAAE1Q,SAAA,CACTqB,cAAA,MAAIQ,UAAU,WAAU7B,SAAS,OAAPlB,QAAO,IAAPA,OAAO,EAAPA,EAASsN,QAAWxK,eAAA,QAAMC,UAAWC,KAAOiS,SAAS/T,SAAA,CAAC,UAAe,OAAPlB,QAAO,IAAPA,OAAO,EAAPA,EAASkV,cACjGpS,eAACwD,IAAG,CAACvD,UAAU,oCAAmC7B,SAAA,CAChD4B,eAACyD,IAAG,CAACC,GAAI,EAAGzD,UAAU,OAAM7B,SAAA,CAC1BqB,cAAA,OAAArB,SAAa,OAAPlB,QAAO,IAAPA,OAAO,EAAPA,EAASmV,cACf5S,cAAA,OAAArB,SAAK,aAEP4B,eAACyD,IAAG,CAACC,GAAI,EAAGzD,UAAU,OAAM7B,SAAA,CAC1BqB,cAAA,OAAArB,SAAa,OAAPlB,QAAO,IAAPA,OAAO,EAAPA,EAASG,kBACfoC,cAAA,OAAArB,SAAK,iBAEP4B,eAACyD,IAAG,CAACC,GAAI,EAAGzD,UAAU,OAAM7B,SAAA,CAC1BqB,cAAA,OAAArB,SAAa,OAAPlB,QAAO,IAAPA,OAAO,EAAPA,EAASK,kBACfkC,cAAA,OAAArB,SAAK,uBAIXqB,cAACgE,IAAG,CAACqL,GAAI,EAAG7O,UAAU,gBAAe7B,SAClCC,IACEf,IACO,OAAPJ,QAAO,IAAPA,KAASE,aACRqC,cAACuF,IAAM,CACL/E,UAAS,GAAAqB,OAAK2D,IAAUD,OAAM,KAAA1D,OAAI2D,IAAUqN,cAC5CjR,QAASA,IAAM8P,EAAejU,GAASkB,SACxC,aAIDqB,cAACuF,IAAM,CACL/E,UAAS,GAAAqB,OAAK2D,IAAUD,OAAM,KAAA1D,OAAI2D,IAAUsN,OAC5ClR,QAASA,IAAM4P,EAAa/T,GAASkB,SACtC,eAMC,OAAPlB,QAAO,IAAPA,OAAO,EAAPA,EAASwJ,UAAWjH,cAACgE,IAAG,CAACxD,UAAU,MAAK7B,SAAElB,EAAQwJ,gBAMnD8L,EACJxS,eAAAW,WAAA,CAAAvC,SAAA,CACEqB,cAAA,SACAO,eAAA,KAAGC,UAAU,cAAa7B,SAAA,CAAS,OAAPlB,QAAO,IAAPA,OAAO,EAAPA,EAASsN,MAAM,cAC3C/K,cAAA,SACAO,eAACkC,IAAS,CAAA9D,SAAA,CACRqB,cAAC+D,IAAG,CAACE,GAAI,EAAGC,GAAI,EAAGmL,GAAI,EAAG7O,UAAU,MAAK7B,SAEtCwT,EAAanV,QAAQkI,KAAK/I,GACzB6D,cAACgE,IAAG,CAAArF,SACFqB,cAAC6K,GAAI,IAAK1O,EAAMiP,SAAUgH,KADlBjW,EAAKmB,QAMnB0C,cAACwP,KAAc,CACbC,WAAY0C,EAAanV,QAAQoL,OACjCsH,OAAQ1P,cAACwG,EAAK,CAACC,SAAO,IACtBkJ,UAAWwC,EAAarV,KACxBA,KAAMA,IAAMN,EAAc2V,EAAcC,WAMhD,OACEpS,cAAC+D,IAAG,CAAApF,SACFqB,cAACgE,IAAG,CAACxD,UAAU,kBAAkB6O,GAAI,GAAG1Q,SACtCqB,cAACyC,IAAS,CAACjC,UAAWsH,IAAUY,QAAQ/J,SACrCmR,EACCvP,eAAAW,WAAA,CAAAvC,SAAA,CACG2T,EACAS,KAGH/S,cAACwG,EAAK,CAACC,SAAO,SAM1B,EC9DeuM,OA5EMA,KAAO,IAADjQ,EACzB,MAAOM,EAAU4P,GAAenU,mBAAS,KAClC0E,EAAQC,GAAa3E,mBAAS,CAAC,GAEhCC,EAAUC,wBACV,GAAE1B,GAAO4R,sBAETtQ,EAAcN,IACdO,EAAiBL,IAEvBS,qBAAU,KAAO,IAADiU,GAEC,OAAXtU,QAAW,IAAXA,GAAuB,QAAZsU,EAAXtU,EAAamD,kBAAU,IAAAmR,OAAZ,EAAXA,EAAyBC,cAAe7V,EAC1C2V,EAAYrU,EAAYyE,UAGxBtE,EAAQU,KAAK,IACf,GACC,CAACb,EAAaG,EAASzB,IAmB1B,OACE0C,cAAC+D,IAAG,CAAApF,SACFqB,cAACgE,IAAG,CAACxD,UAAU,2BAA2B0D,GAAI,EAAEvF,SAC9CqB,cAACyC,IAAS,CAACjC,UAAWsH,IAAUY,QAAQ/J,SAEtC4B,eAACgE,IAAI,CAACC,SAtBO/H,UACnBkH,EAAMc,iBACN,UACQlI,EAASsR,IAAI,sBAAuB,CACxCxK,aAEFxE,GAAgBuU,IAAQ,IACnBA,EACH/P,eAEFtE,EAAQwH,QACV,CAAE,MAAOhJ,GAAM,IAADuC,EAEZ2D,EAAsB,QAAb3D,EAACvC,EAAIsC,gBAAQ,IAAAC,OAAA,EAAZA,EAAclD,KAC1B,GAQoC4D,UAAU,OAAM7B,SAAA,CAC5C4B,eAACgE,IAAKG,MAAK,CAAA/F,SAAA,CACTqB,cAACuE,IAAKK,MAAK,CAAAjG,SAAC,oBACZqB,cAACuE,IAAKM,QAAO,CACXG,YAAY,WACZD,KAAK,OACL7E,MAAOmD,EACP4B,SAAWtB,GAAUsP,EAAYtP,EAAMC,OAAO1D,YAG3C,OAANsD,QAAM,IAANA,GAAgB,QAAVT,EAANS,EAAQH,gBAAQ,IAAAN,OAAV,EAANA,EAAkBmC,KAAI,CAACC,EAASC,IAC/BpF,cAACqF,IAAK,CAAWC,QAAQ,UAAS3G,SAC/BwG,GADSC,KAIdpF,cAACuF,IAAM,CACL/E,UAAS,GAAAqB,OAAK2D,IAAUD,OAAM,KAAA1D,OAAI2D,IAAU6N,MAC5CzR,QAASA,IAAM7C,EAAQwH,SAAS5H,SACjC,WAGDqB,cAACuF,IAAM,CACL/E,UAAS,GAAAqB,OAAK2D,IAAUD,OAAM,KAAA1D,OAAI2D,IAAU6N,MAC5CtO,KAAK,SAAQpG,SACd,iBAMH,ECoBK2U,OA/FUA,KAAO,IAADC,EAAAC,EAC7B,MAAMzU,EAAUC,wBACV,GAAE1B,GAAO4R,sBACTtQ,EAAcN,KAEbmV,EAAUC,GAAe5U,mBAAS,CACvC6U,cAAe,GACfC,cAAe,MAEX,cAAED,EAAa,cAAEC,GAAkBH,GAElCjQ,EAAQC,GAAa3E,mBAAS,CAAC,GAGhC4E,EAAgBC,IACpB+P,EAAY,IACPD,EACH,CAAC9P,EAAMC,OAAOC,MAAOF,EAAMC,OAAO1D,OAClC,EAGJjB,qBAAU,KAAO,IAADiU,GACC,OAAXtU,QAAW,IAAXA,GAAuB,QAAZsU,EAAXtU,EAAamD,kBAAU,IAAAmR,OAAZ,EAAXA,EAAyBC,cAAe7V,GAE1CyB,EAAQU,KAAK,IACf,GACC,CAACb,EAAaG,EAASzB,IAc1B,OACE0C,cAAC+D,IAAG,CAAApF,SACFqB,cAACgE,IAAG,CAACxD,UAAU,2BAA2B0D,GAAI,EAAEvF,SAC9CqB,cAACyC,IAAS,CAACjC,UAAWsH,IAAUY,QAAQ/J,SAEtC4B,eAACgE,IAAI,CAACC,SAhBO/H,UACnBkH,EAAMc,iBACN,UACQlI,EAASJ,KAAK,iCAAkCsX,GACtD1U,EAAQwH,QACV,CAAE,MAAOhJ,GAAM,IAADuC,EAEZ2D,EAAsB,QAAb3D,EAACvC,EAAIsC,gBAAQ,IAAAC,OAAA,EAAZA,EAAclD,KAC1B,GAQmC+B,SAAA,CAC3B4B,eAACgE,IAAKG,MAAK,CAAA/F,SAAA,CACTqB,cAACuE,IAAKK,MAAK,CAAAjG,SAAC,iBACZqB,cAACuE,IAAKM,QAAO,CACXG,YAAY,eACZD,KAAK,WACL7E,MAAOyT,EACP1O,SAAUvB,EACVG,KAAK,qBAGF,OAANL,QAAM,IAANA,GAAqB,QAAf+P,EAAN/P,EAAQmQ,qBAAa,IAAAJ,OAAf,EAANA,EAAuBrO,KAAI,CAACC,EAASC,IACpCpF,cAACqF,IAAK,CAAWC,QAAQ,UAAS3G,SAC/BwG,GADSC,KAId7E,eAACgE,IAAKG,MAAK,CAAA/F,SAAA,CACTqB,cAACuE,IAAKK,MAAK,CAAAjG,SAAC,qBACZqB,cAACuE,IAAKM,QAAO,CACXG,YAAY,uBACZD,KAAK,WACL7E,MAAO0T,EACP3O,SAAUvB,EACVG,KAAK,qBAGF,OAANL,QAAM,IAANA,GAAqB,QAAfgQ,EAANhQ,EAAQoQ,qBAAa,IAAAJ,OAAf,EAANA,EAAuBtO,KAAI,CAACC,EAASC,IACpCpF,cAACqF,IAAK,CAAWC,QAAQ,UAAS3G,SAC/BwG,GADSC,KAIdpF,cAACuF,IAAM,CACL/E,UAAS,GAAAqB,OAAK2D,IAAUD,OAAM,KAAA1D,OAAI2D,IAAU6N,MAC5CzR,QAASA,IAAM7C,EAAQwH,SAAS5H,SACjC,WAGDqB,cAACuF,IAAM,CACLR,KAAK,SACLvE,UAAS,GAAAqB,OAAK2D,IAAUD,OAAM,KAAA1D,OAAI2D,IAAU6N,MAAO1U,SACpD,iBAMH,ECiEKkV,OAxJSA,KAAO,IAADhN,EAAAC,EAC5B,MAAMlI,EAAcN,IACdO,EAAiBL,KACjB,GAAElB,GAAO4R,sBACTnQ,EAAUC,uBACV8U,EAAY1M,oBAEX+J,EAAaC,GAAkBtS,mBAAS,CAC7C+E,KAAM,GACNoD,QAAS,GACTC,MAAO,MAEH,KAAErD,EAAI,QAAEoD,EAAO,MAAEC,GAAUiK,GAE1B3N,EAAQC,GAAa3E,mBAAS,CAAC,GAGtCG,qBAAU,KACYxC,WAAa,IAADyW,EAC9B,IAAe,OAAXtU,QAAW,IAAXA,GAAuB,QAAZsU,EAAXtU,EAAamD,kBAAU,IAAAmR,OAAZ,EAAXA,EAAyBC,cAAe7V,EAC1C,IACE,MAAM,KAAEV,SAAeP,EAASQ,IAAI,aAADgF,OAAcvE,EAAE,OAC7C,KAAEuG,EAAI,QAAEoD,EAAO,MAAEC,GAAUtK,EACjCwU,EAAe,CAAEvN,OAAMoD,UAASC,SAClC,CAAE,MAAO3J,GAEPwB,EAAQU,KAAK,IACf,MAEAV,EAAQU,KAAK,IACf,EAGFP,EAAa,GACZ,CAACN,EAAaG,EAASzB,IAG1B,MAgCM+J,EACJ9G,eAAAW,WAAA,CAAAvC,SAAA,CACE4B,eAACgE,IAAKG,MAAK,CAAA/F,SAAA,CACTqB,cAACuE,IAAKK,MAAK,CAAAjG,SAAC,QACZqB,cAACuE,IAAKM,QAAO,CACXyC,GAAG,WACHpH,MAAO+G,EACPhC,SAvCctB,IACpByN,EAAe,IACVD,EACH,CAACxN,EAAMC,OAAOC,MAAOF,EAAMC,OAAO1D,OAClC,EAoCI2D,KAAK,UACL0D,KAAM,OAIH,OAAN/D,QAAM,IAANA,GAAe,QAATqD,EAANrD,EAAQyD,eAAO,IAAAJ,OAAT,EAANA,EAAiB3B,KAAI,CAACC,EAASC,IAC9BpF,cAACqF,IAAK,CAACC,QAAQ,UAAS3G,SACrBwG,GAD2BC,KAIhCpF,cAACuF,IAAM,CACL/E,UAAS,GAAAqB,OAAK2D,IAAUD,OAAM,KAAA1D,OAAI2D,IAAU6N,MAC5CzR,QAASA,IAAM7C,EAAQwH,SAAS5H,SACjC,WAGDqB,cAACuF,IAAM,CAAC/E,UAAS,GAAAqB,OAAK2D,IAAUD,OAAM,KAAA1D,OAAI2D,IAAU6N,MAAQtO,KAAK,SAAQpG,SAAC,YAM9E,OACEqB,cAACuE,IAAI,CAACC,SAvDa/H,UAAkB,IAADsX,EACpCpQ,EAAMc,iBACN,MAAM+C,EAAW,IAAIC,SAIc,IAADuM,GAHlCxM,EAASE,OAAO,OAAQ7D,GACxB2D,EAASE,OAAO,UAAWT,GAEd,OAAT6M,QAAS,IAATA,GAAkB,QAATC,EAATD,EAAWnM,eAAO,IAAAoM,GAAlBA,EAAoBnM,MAAM,KAC5BJ,EAASE,OAAO,QAAkB,OAAToM,QAAS,IAATA,GAAkB,QAATE,EAATF,EAAWnM,eAAO,IAAAqM,OAAT,EAATA,EAAoBpM,MAAM,IAGrD,IACE,MAAM,KAAEhL,SAAeP,EAASwR,IAAI,aAADhM,OAAcvE,EAAE,KAAKkK,GACxD3I,GAAgBD,IAAW,IACtBA,EACHoD,cAAepF,EAAKsK,UAEtBnI,EAAQwH,QACV,CAAE,MAAOhJ,GAAM,IAADuC,EAEZ2D,EAAsB,QAAb3D,EAACvC,EAAIsC,gBAAQ,IAAAC,OAAA,EAAZA,EAAclD,KAC1B,GAmC6B+B,SAC3B4B,eAACwD,IAAG,CAAApF,SAAA,CAEFqB,cAACgE,IAAG,CAACxD,UAAU,8BAA8B0D,GAAI,EAAGmL,GAAI,EAAE1Q,SACxD4B,eAACkC,IAAS,CAACjC,UAAWsH,IAAUY,QAAQ/J,SAAA,CACtC4B,eAACgE,IAAKG,MAAK,CAAA/F,SAAA,CAERuI,GACClH,cAAA,UAAArB,SACEqB,cAACmE,IAAK,CAAC/D,IAAK8G,EAAOpD,OAAK,MAGrB,OAANN,QAAM,IAANA,GAAa,QAAPsD,EAANtD,EAAQ0D,aAAK,IAAAJ,OAAP,EAANA,EAAe5B,KAAI,CAACC,EAASC,IAC5BpF,cAACqF,IAAK,CAACC,QAAQ,UAAS3G,SACrBwG,GAD2BC,KAIhCpF,cAAA,OAAArB,SACEqB,cAACuE,IAAKK,MAAK,CACTpE,UAAS,GAAAqB,OAAK2D,IAAUD,OAAM,KAAA1D,OAAI2D,IAAU6N,KAAI,gBAChDrL,QAAQ,eAAcrJ,SACvB,uBAIHqB,cAACuE,IAAK2D,KAAI,CACR5K,GAAG,eACHkL,IAAKsL,EACL3L,OAAO,UACPlD,SAAW2D,IACLA,EAAEhF,OAAOgE,MAAMQ,QACjBgJ,EAAe,IACVD,EACHjK,MAAOmB,IAAIE,gBAAgBK,EAAEhF,OAAOgE,MAAM,KAE9C,OAKN5H,cAAA,OAAKQ,UAAU,YAAW7B,SAAE0I,SAIhCrH,cAACgE,IAAG,CAACE,GAAI,EAAGmL,GAAI,EAAG7O,UAAU,2CAA0C7B,SACrEqB,cAACyC,IAAS,CAACjC,UAAWsH,IAAUY,QAAQ/J,SAAE0I,UAGzC,E,qBCpDI4M,OAtGOnJ,IACpB,MAAM,GACJxN,EACA0E,cAAekS,EACfvB,WAAYwB,EACZC,QAASC,EACTC,QAASC,EAAM,QACftN,EAAO,SACPuN,EAAQ,iBACRC,GACE3J,GACGqB,EAAWC,GAAgBtN,oBAAS,GAOrC4V,EAAgBjY,UACpB,UACQF,EAASoY,MAAM,kBAAD9S,OAAmBvE,GAAM,CAAEgX,SAAUC,IACzDE,GAAkBG,IAAiB,IAC9BA,EACH5X,QAAS4X,EAAkB5X,QAAQkI,KAAK2P,GAC/BA,EAAavX,KAAOA,EAAK,IAAKuX,EAAcP,SAAUC,GAAWM,OAG9E,CAAE,MAAOtX,GACP,GAiBJ,OACEgD,eAAAW,WAAA,CAAAvC,SAAA,CACE4B,eAAC8L,KAAI,CAAC7L,UAAS,GAAAqB,OAAKiG,IAAUyH,aAAY,eAAA1N,OAAc0S,EAAS9T,KAAOqU,iBAAmB,IAAKnW,SAAA,CAC9F4B,eAAC8L,KAAK/H,OAAM,CAAC9D,UAAU,iCAAgC7B,SAAA,CACrDqB,cAAA,SAAOQ,UAAU,GAAE7B,SAAEwV,IACrB5T,eAAA,QAAA5B,SAAA,CACIqB,cAAC6M,KAAc,CACbC,UAAU,MACVC,QAAS/M,cAACgN,KAAO,CAAArO,SAAC,wBAA8BA,SAEhDqB,cAAA,QACE,aAAW,QACXiK,MAAM,qBACNrI,QA7CQ8M,KACtBtC,GAAa,EAAK,EA4CqBzN,SAEzBqB,cAAA,KAAGQ,UAAU,gCAGhB+T,EACCvU,cAAC6M,KAAc,CACfC,UAAU,MACVC,QAAS/M,cAACgN,KAAO,CAAArO,SAAC,oBAA0BA,SAE1CqB,cAAA,QAAM4B,QAAS8S,EAAc/V,SAC3BqB,cAAA,KAAGQ,UAAU,iCAIjBR,cAAC6M,KAAc,CACfC,UAAU,MACVC,QAAS/M,cAACgN,KAAO,CAAArO,SAAC,kBAAwBA,SAExCqB,cAAA,QAAM4B,QAAS8S,EAAc/V,SAC3BqB,cAAA,KAAGQ,UAAU,yCAMzBR,cAACqM,KAAK5C,KAAI,CAAA9K,SACR4B,eAAC8L,KAAKE,KAAI,CAAA5N,SAAA,CACRqB,cAACG,EAAM,CAACC,IAAK8T,EAAc7T,OAAQ,KAAM,IAAE4G,EAAsB,WAAbuN,GAA2BxU,cAACmB,IAAI,CAACC,GAAE,UAAAS,OAAYwS,GAAU7T,UAAU,UAAS7B,SAAC,iCAKvIqB,cAACwK,GAAiB,CAChBjB,KAAM4C,EACNjD,QAASkD,EACT3B,aA7DehO,UACnB,UACQF,EAASoQ,OAAO,kBAAD9K,OAAmBvE,IACxCmX,GAAkBG,IAAiB,IAC9BA,EACH5X,QAAS4X,EAAkB5X,QAAQ6R,QAAQgG,GAAiBA,EAAavX,KAAOA,OAEpF,CAAE,MAAOC,GACP,GAsDEmN,KAAK,sBACL3F,KAAK,WAEN,EC5CQgQ,OAxDUrW,IAAsB,IAArB,YAAEsW,GAAatW,EACvC,MAAOuW,EAAeR,GAAoB3V,mBAAS,CAAE9B,QAAS,KACxD4B,EAAcN,KACbwR,EAAWC,GAAgBjR,oBAAS,GAkB3C,OAfAG,qBAAU,KACYxC,WAClB,IACE,MAAM,KAAEG,SAAeP,EAASQ,IAAI,mBACpC4X,EAAiB7X,EACnB,CAAE,MAAOW,GACP,CAEFwS,GAAa,EAAK,EAGpB7Q,EAAa,GACZ,IAGKN,EAGN2B,eAAAW,WAAA,CAAAvC,SAAA,CACEqB,cAAA,MAAArB,SAAI,kBACHmR,EACCmF,EAAcjY,QAAQoL,OACpBpI,cAACwP,KAAc,CAAChP,UAAU,kBACxB7B,SAAUsW,EAAcjY,QAAQkI,KAAK2P,GACnC7U,cAACiU,GAAY,IAEPY,EACJJ,iBAAkBA,EAClBO,YAAaA,GAHRH,EAAavX,MAMtBmS,WAAYwF,EAAcjY,QAAQoL,OAClCsH,OACE1P,cAAA,OAAKQ,UAAU,8BAA6B7B,SAC1CqB,cAAC0G,IAAO,MAGZiJ,UAAWsF,EAAcnY,KACzBA,KAAMA,IAAMN,EAAcyY,EAAeR,KAG3CzU,cAAA,KAAArB,SAAG,yBAGLqB,cAACwG,EAAK,CAACC,SAAO,OA5BlBzG,cAAC4Q,GAAQ,GA+BV,ECgCYsE,OA3Ef,WACE,MAAMtW,EAAcN,IACdyD,GAAwB,OAAXnD,QAAW,IAAXA,OAAW,EAAXA,EAAamD,aAAc,GAExCuJ,EAAWC,wBACX4J,EAAmB7J,EAASG,SAASC,SAAS,WAAaJ,EAASG,SAASC,SAAS,WAE5F,OACE1L,cAACyC,IAAS,CAACjC,UAAWC,IAAOyU,IAAKpR,OAAK,EAAAnF,SACrC4B,eAACwD,IAAG,CAAApF,SAAA,CACFqB,cAACgE,IAAG,CAACC,GAAI,GAAIoL,GAAI,EAAG7O,UAAWC,IAAO2U,OAAOzW,SAACqB,cAACY,EAAM,MACrDZ,cAACgE,IAAG,CAACC,GAAI,GAAIoL,GAAI,EAAG7O,UAAS,cAAAqB,OAAgBpB,IAAO4U,aAAc1W,UAE9DwW,GACA5U,eAAAW,WAAA,CAAAvC,SAAA,CACEqB,cAACgE,IAAG,CAAArF,SACFqB,cAACgS,GAAe,CAACJ,QAAM,MAEzB5R,cAACgE,IAAG,CAACxD,UAAU,oBAAmB7B,SAChCqB,cAACgS,GAAe,MAElBhS,cAACgE,IAAG,CAACxD,UAAU,yBAAwB7B,SACrCqB,cAAA,QAAMQ,UAAWC,IAAO6U,UAAU3W,SAAC,4DAK3CqB,cAACgE,IAAG,CAACC,GAAI,GAAIoL,GAAI,EAAG7O,UAAS,wDAAAqB,OAA0DpB,IAAO8U,QAAS5W,SACrG4B,eAACiV,SAAM,CAAA7W,SAAA,CACLqB,cAACyV,QAAK,CACJhU,OAAK,EACLiU,KAAK,IACLC,OAAQA,IACN3V,cAAC4P,GAAS,CAACzK,QAAQ,mDAGvBnF,cAACyV,QAAK,CACJhU,OAAK,EACLiU,KAAK,QACLC,OAAQA,IACN3V,cAAC4P,GAAS,CACRzK,QAAQ,gEACR0J,OAAM,mCAAAhN,OAAqCE,EAAU,SAI3D/B,cAACyV,QAAK,CACJhU,OAAK,EACLiU,KAAK,cACLC,OAAQA,IACN3V,cAAC4P,GAAS,CACRzK,QAAQ,mEACR0J,OAAM,4BAAAhN,OAA8BE,EAAU,wCAIpD/B,cAACyV,QAAK,CAAChU,OAAK,EAACiU,KAAK,SAASC,OAAQA,IAAM3V,cAAC4F,EAAU,MACpD5F,cAACyV,QAAK,CAAChU,OAAK,EAACiU,KAAK,UAAUC,OAAQA,IAAM3V,cAAC8C,EAAU,MACrD9C,cAACyV,QAAK,CAAChU,OAAK,EAACiU,KAAK,gBAAgBC,OAAQA,IAAM3V,cAAC4G,GAAc,MAC/D5G,cAACyV,QAAK,CAAChU,OAAK,EAACiU,KAAK,kBAAkBC,OAAQA,IAAM3V,cAAC0Q,GAAY,MAC/D1Q,cAACyV,QAAK,CAAChU,OAAK,EAACiU,KAAK,aAAaC,OAAQA,IAAM3V,cAACiP,GAAQ,MACtDjP,cAACyV,QAAK,CAAChU,OAAK,EAACiU,KAAK,iBAAiBC,OAAQA,IAAM3V,cAAC+U,GAAgB,MAClE/U,cAACyV,QAAK,CAAChU,OAAK,EAACiU,KAAK,gBAAgBC,OAAQA,IAAM3V,cAACkS,GAAW,MAC5DlS,cAACyV,QAAK,CAAChU,OAAK,EAACiU,KAAK,8BAA8BC,OAAQA,IAAM3V,cAACgT,GAAY,MAC3EhT,cAACyV,QAAK,CAAChU,OAAK,EAACiU,KAAK,8BAA8BC,OAAQA,IAAM3V,cAACsT,GAAgB,MAC/EtT,cAACyV,QAAK,CAAChU,OAAK,EAACiU,KAAK,qBAAqBC,OAAQA,IAAM3V,cAAC6T,GAAe,MAErE7T,cAACyV,QAAK,CAACE,OAAQA,IAAM3V,cAAC4Q,GAAQ,eAM1C,ECnFegF,OAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAKrX,IAAkD,IAAjD,OAAEsX,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS1X,EACpEsX,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EAAY,GAExB,ECAFQ,IAASV,OACL3V,cAACsW,IAAM,CAAA3X,SACLqB,cAACvB,EAAmB,CAAAE,SAClBqB,cAACkR,GAAmB,CAAAvS,SAClBqB,cAACkV,GAAG,UAIZqB,SAASC,eAAe,SAM1BZ,I,qBCtBA/Z,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,qBAAqB,aAAe,0BAA0B,MAAQ,mBAAmB,OAAS,oBAAoB,OAAS,oBAAoB,YAAc,yBAAyB,UAAY,uB,qBCAzPD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,MAAQ,4BAA4B,OAAS,6BAA6B,KAAO,2BAA2B,SAAW,+B,qBCArLD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,aAAe,2BAA2B,QAAU,sBAAsB,YAAc,0BAA0B,YAAc,0BAA0B,iBAAmB,+BAA+B,SAAW,uBAAuB,SAAW,uB,qBCAjUD,EAAOC,QAAU,CAAC,KAAO,oCAAoC,OAAS,sCAAsC,YAAc,2C,qBCA1HD,EAAOC,QAAU,CAAC,UAAY,sCAAsC,kBAAoB,8C,qBCAxFD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,YAAc,6BAA6B,KAAO,sBAAsB,WAAa,4B,qBCAtID,EAAOC,QAAU,CAAC,eAAiB,oC,qBCAnCD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,OAAS,wB,qBCAlED,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8B,qBCAxED,EAAOC,QAAU,CAAC,aAAe,kCAAkC,SAAW,8B,oBCA9ED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,eAAiB,+BAA+B,UAAY,0BAA0B,aAAe,6BAA6B,WAAa,2BAA2B,QAAU,wBAAwB,eAAiB,+BAA+B,WAAa,2BAA2B,OAAS,uB,qBCA/VD,EAAOC,QAAU,CAAC,OAAS,uB,qBCA3BD,EAAOC,QAAU,CAAC,MAAQ,qB,qBCA1BD,EAAOC,QAAU,CAAC,YAAc,8B","file":"static/js/main.054c7c60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"boldText\":\"PopularProfiles_boldText__1o81k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContentBlackRead\":\"Notifications_ContentBlackRead__2fF6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__27i9m\",\"Wide\":\"Button_Wide__2ScDr\",\"Bright\":\"Button_Bright__1MBHR\",\"Blue\":\"Button_Blue__10GcT\",\"Black\":\"Button_Black__2dCp7\",\"BlackOutline\":\"Button_BlackOutline__I-kZ-\"};","// Axios Configuration\n\n// Importing Axios library for making HTTP requests\nimport axios from \"axios\";\n\n// Setting up default configurations for all Axios requests\naxios.defaults.baseURL = \"/api\";\naxios.defaults.headers.post['Content-Type'] = 'multipart/form-data';\naxios.defaults.withCredentials = true;\n\n// Creating custom Axios instances for request-related and response-related operations\nexport const axiosReq = axios.create(); // Used for making requests\nexport const axiosRes = axios.create(); // Used for handling responses\n","import jwtDecode from \"jwt-decode\";\nimport { axiosReq } from \"../api/axiosDefaults\";\n\n\nexport const fetchMoreData = async (resource, setResource) => {\n  try {\n    const { data } = await axiosReq.get(resource.next);\n    setResource((prevResource) => ({\n      ...prevResource,\n      next: data.next,\n      results: data.results.reduce((acc, cur) => {\n        return acc.some((accResult) => accResult.id === cur.id)\n          ? acc\n          : [...acc, cur];\n      }, prevResource.results),\n    }));\n  } catch (err) {}\n};\n\nexport const followHelper = (profile, clickedProfile, following_id) => {\n  return profile.id === clickedProfile.id\n    ? // This is the profile I clicked on,\n      // update its followers count and set its following id\n      {\n        ...profile,\n        followers_count: profile.followers_count + 1,\n        following_id,\n      }\n    : profile.is_owner\n    ? // This is the profile of the logged in user\n      // update its following count\n      { ...profile, following_count: profile.following_count + 1 }\n    : // this is not the profile the user clicked on or the profile\n      // the user owns, so just return it unchanged\n      profile;\n};\n\nexport const unfollowHelper = (profile, clickedProfile) => {\n  return profile.id === clickedProfile.id\n    ? // This is the profile I clicked on,\n      // update its followers count and set its following id\n      {\n        ...profile,\n        followers_count: profile.followers_count - 1,\n        following_id: null,\n      }\n    : profile.is_owner\n    ? // This is the profile of the logged in user\n      // update its following count\n      { ...profile, following_count: profile.following_count - 1 }\n    : // this is not the profile the user clicked on or the profile\n      // the user owns, so just return it unchanged\n      profile;\n};\n\nexport const setTokenTimestamp = (data) => {\n  const refreshTokenTimestamp = jwtDecode(data?.refresh_token).exp;\n  localStorage.setItem(\"refreshTokenTimestamp\", refreshTokenTimestamp);\n};\n\nexport const shouldRefreshToken = () => {\n  return !!localStorage.getItem(\"refreshTokenTimestamp\");\n};\n\nexport const removeTokenTimestamp = () => {\n  localStorage.removeItem(\"refreshTokenTimestamp\");\n};\n\n","import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport axios from \"axios\";\nimport { axiosRes, axiosReq } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { removeTokenTimestamp, shouldRefreshToken } from \"../utils/utils\";\n\n// Creating a context to hold the current user data and\n// custom hooks for easily accessing the current user and setting the current user\nexport const CurrentUserContext = createContext();\nexport const SetCurrentUserContext = createContext();\nexport const useCurrentUser = () => useContext(CurrentUserContext)\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext)\n\n// This context is used to manage and share the current\n// user's data across various components in the application.\nexport const CurrentUserProvider = ({children}) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const history = useHistory()\n\n    // Function to fetch the user data on component mount\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosRes.get(\"dj-rest-auth/user/\");\n        setCurrentUser(data);\n      } catch (err) {\n        // console.log(err.response);\n      }\n    };\n  \n    // Effect to fetch user data on component mount\n    useEffect(() => {\n      handleMount();\n    }, []);\n\n    // Memoized block to set up Axios interceptors for token refreshing\n    useMemo(() => {\n      axiosReq.interceptors.request.use(\n        async (config) => {\n          if (shouldRefreshToken()){\n            try {\n              await axios.post(\"/dj-rest-auth/token/refresh/\");\n            } catch (err) {\n              setCurrentUser((prevCurrentUser) => {\n                if (prevCurrentUser) {\n                  history.push(\"/signin\");\n                }\n                return null;\n              });\n              removeTokenTimestamp();\n              return config;\n            }\n          }\n          return config;\n        },\n        (err) => {\n          return Promise.reject(err);\n        }\n      );\n  \n      axiosRes.interceptors.response.use(\n        (response) => response,\n        async (err) => {\n          if (err.response?.status === 401) {\n            try {\n              await axios.post(\"/dj-rest-auth/token/refresh/\");\n            } catch (err) {\n              setCurrentUser((prevCurrentUser) => {\n                if (prevCurrentUser) {\n                  history.push(\"/signin\");\n                }\n                return null;\n              });\n              removeTokenTimestamp();\n            }\n            return axios(err.config);\n          }\n          return Promise.reject(err);\n        }\n      );\n    }, [history]);\n\n    return (\n    <CurrentUserContext.Provider value={currentUser}>\n        <SetCurrentUserContext.Provider value={setCurrentUser}>\n            {children}\n        </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n    )\n}","import React from 'react'\nimport styles from '../styles/Avatar.module.css'\n\nconst Avatar = ({ src, height = 45, text }) => {\n    return <span>\n        <img className={styles.Avatar} src={src}\n        height={height} width={height} alt=\"avatar\" />\n        {text}\n    </span>\n}\n\nexport default Avatar","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport styles from '../styles/NavBar.module.css';\nimport { NavLink, Link, useHistory } from 'react-router-dom';\nimport { \n  useCurrentUser,\n  useSetCurrentUser,\n  } from \"../contexts/CurrentUserContext\";\nimport Avatar from \"./Avatar.js\";\nimport axios from \"axios\";\nimport { removeTokenTimestamp } from \"../utils/utils.js\";\nimport { useMediaQuery } from 'react-responsive';\n\nconst NavBar = () => {\n  const history = useHistory();\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useSetCurrentUser();\n  const isMobile = useMediaQuery({ maxWidth: 1023 });\n\n  // Function to handle user sign-out\n  const handleSignOut = async () => {\n \n    try {\n      await axios.post(\"dj-rest-auth/logout/\");\n      setCurrentUser(null);\n      removeTokenTimestamp();\n  \n      // Redirect to the login page after successful logout\n      history.push('/login');\n    } catch (err) { }\n};\n\n  // JSX for icons when the user is logged in\n  const loggedInIcons = (\n    <>\n      <Link to=\"/\" className={styles.picagramLogo}>\n      <Navbar.Brand className={styles.picagramLogo}>\n      <i className=\"fa-solid fa-camera-retro\" />Picagram\n      </Navbar.Brand>\n      </Link>\n\n      <NavLink\n      exact className={styles.NavLink}\n      activeClassName={styles.Active}\n      to=\"/\"\n      >\n      <i className=\"fa-solid fa-house\" />Home\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLink}\n      activeClassName={styles.Active}\n      to=\"/feed\"\n      >\n      <i className=\"fas fa-stream\" />Feed\n      </NavLink>\n      \n      <NavLink\n      className={styles.NavLink}\n      activeClassName={styles.Active}\n      to=\"/bookmarked\"\n      >\n      <i className=\"fa-solid fa-bookmark\" />Saved Posts\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLink}\n      activeClassName={styles.Active}\n      to=\"/posts/create\"\n      >\n      <i className=\"fas fa-plus-square\" />Add Post\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLink}\n      to=\"/notifications\"\n      >\n      <i className=\"fa-regular fa-envelope\" />Notifications\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLink}\n      to=\"/\"\n      onClick={handleSignOut}>\n      <i className=\"fas fa-sign-out-alt\" />Sign Out\n      </NavLink>\n\n      <NavLink\n      className={`${styles.NavLink} ${styles.NavLinkProfile}`}\n      to={`/profiles/${currentUser?.profile_id}`}\n      >\n      <Avatar src={currentUser?.profile_image} text=\"Profile\" height={30} />\n      </NavLink>\n\n    </>\n    );\n  \n  // JSX for icons when the user is logged out\n  const loggedOutIcons = (\n    <>\n      <Link to=\"/\" className={styles.picagramLogo}>\n      <Navbar.Brand className={styles.picagramLogo}>\n      <i className=\"fa-solid fa-camera-retro\" />Picagram\n      </Navbar.Brand>\n      </Link>\n\n      <NavLink\n      exact className={styles.NavLink}\n      activeClassName={styles.Active}\n      to=\"/\"\n      >\n      <i className=\"fa-solid fa-house\" />Home\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLink}\n      activeClassName={styles.Active}\n      to=\"/login\"\n      >\n      <i className=\"fa-solid fa-arrow-right-to-bracket\" />Log In\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLink}\n      activeClassName={styles.Active}\n      to=\"/signup\"\n      >\n      <i className=\"fa-solid fa-signature\" />Sign Up\n      </NavLink>\n    </>\n    );\n\n  // JSX for mobile view when the user is logged in\n  const loggedInIconsMobile = (\n    <>\n      <NavLink\n      exact className={styles.NavLinkMob}\n      activeClassName={styles.Active}\n      to=\"/\"\n      >\n      <i className=\"fa-solid fa-house\" />\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLinkMob}\n      activeClassName={styles.Active}\n      to=\"/feed\"\n      >\n      <i className=\"fas fa-stream\" />\n      </NavLink>\n      \n      <NavLink\n      className={styles.NavLinkMob}\n      activeClassName={styles.Active}\n      to=\"/bookmarked\"\n      >\n      <i className=\"fa-solid fa-bookmark\" />\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLinkMob}\n      activeClassName={styles.Active}\n      to=\"/posts/create\"\n      >\n      <i className=\"fas fa-plus-square\" />\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLinkMob}\n      to=\"/notifications\"\n      >\n      <i className=\"fa-regular fa-envelope\" />\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLinkMob}\n      to=\"/\"\n      onClick={handleSignOut}>\n      <i className=\"fas fa-sign-out-alt\" />\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLinkMob}\n      to={`/profiles/${currentUser?.profile_id}`}\n      >\n      <Avatar src={currentUser?.profile_image} height={25} />\n      </NavLink>\n\n    </>\n    );\n\n  // JSX for mobile view when the user is logged out\n  const loggedOutIconsMobile = (\n    <>\n      <NavLink\n      exact className={styles.NavLinkMob}\n      activeClassName={styles.Active}\n      to=\"/\"\n      >\n      <i className=\"fa-solid fa-house\"></i>\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLinkMob}\n      activeClassName={styles.Active}\n      to=\"/login\"\n      >\n      <i className=\"fa-solid fa-arrow-right-to-bracket\"></i> Log In\n      </NavLink>\n\n      <NavLink\n      className={styles.NavLinkMob}\n      activeClassName={styles.Active}\n      to=\"/signup\"\n      >\n      <i className=\"fa-solid fa-signature\"></i> Sign Up\n      </NavLink>\n    </>\n    );\n\n    // Determine which set of icons to use based on the user's authentication status\n    const desktopIcons = currentUser ? loggedInIcons : loggedOutIcons;\n    const mobileIcons = currentUser ? loggedInIconsMobile : loggedOutIconsMobile;\n  \n    return (\n      <>\n        <Navbar\n          expand=\"xl\"\n          className={`${styles.darkNavbar} sticky-top`}\n        >\n          <Container className={styles.Container}>\n            {isMobile ? (\n              // Render icons in a single row for small screens\n              <Nav className={`${styles.mobileIconsRow}`}>\n                {mobileIcons}\n              </Nav>\n            ) : (\n              // Render icons in a column for larger screens\n              <Nav className=\"flex-column\">\n                {desktopIcons}\n              </Nav>\n            )}\n          </Container>\n        </Navbar>\n      </>\n    );\n  };\n\nexport default NavBar","export default __webpack_public_path__ + \"static/media/login.849b0b29.png\";","import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\n\n// Custom hook for redirecting users based on their authentication status\nexport const useRedirect = (userAuthStatus) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        await axios.post(\"/dj-rest-auth/token/refresh/\");\n        // if user is logged in, the code below will run\n        if (userAuthStatus === \"loggedIn\") {\n          history.push(\"/\");\n        }\n      } catch (err) {\n        // if user is not logged in, the code below will run\n        if (userAuthStatus === \"loggedOut\") {\n          history.push(\"/\");\n        }\n      }\n    };\n\n    handleMount();\n  }, [history, userAuthStatus]);\n};","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport styles from \"../../styles/SignInUpForm.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport Login from \"../../assets/login.png\";\n\nimport Image from \"react-bootstrap/Image\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\n\nimport axios from \"axios\";\nimport { useRedirect } from \"../../hooks/useRedirect.js\";\n\nconst SignUpForm = () => {\n  // Redirect the user if already logged in\n  useRedirect('loggedIn')\n  const [signUpData, setSignUpData] = useState({\n    username: \"\",\n    password1: \"\",\n    password2: \"\",\n  });\n  const { username, password1, password2 } = signUpData;\n\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n\n  // Handle form input changes\n  const handleChange = (event) => {\n    setSignUpData({\n      ...signUpData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axios.post(\"/dj-rest-auth/registration/\", signUpData);\n      history.push(\"/login\");\n    } catch (err) {\n      // Handle registration errors and display error messages\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n<Container fluid className={styles.Container}>\n  <Row className=\"justify-content-center align-items-center\">\n    <Col xs={12} md={6} className=\"text-center\">\n      <Image src={Login} className={styles.LoginImg} />\n    </Col>\n\n    {/* Column containing the sign-up form */}\n    <Col xs={12} md={6}>\n    <Row className={`justify-content-center ${styles.Row}`}>\n      <Col>\n      <h1 className={styles.Header}>Sign Up</h1>\n      <hr className=\"my-4\" />\n      </Col>\n    </Row>\n\n    <Row className={`${styles.Row}`}>\n      <Col>\n        <Container className=\"justify-content-center text-center\">\n            <Form onSubmit={handleSubmit}>\n\n              {/* Username input */}\n              <Form.Group controlId=\"username\">\n                <Form.Label className=\"d-none\">username</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.username?.map((message, idx) => (\n                <Alert variant=\"dark\" key={idx} className=\"text-center\">\n                  {message}\n                </Alert>\n              ))}\n\n              {/* Password input */}\n              <Form.Group controlId=\"password1\">\n                <Form.Label className=\"d-none\">Password</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password1\"\n                  value={password1}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.password1?.map((message, idx) => (\n                <Alert key={idx} variant=\"dark\" className=\"text-center\">\n                  {message}\n                </Alert>\n              ))}\n\n              {/* Confirm password input */}\n              <Form.Group controlId=\"password2\">\n                <Form.Label className=\"d-none\">Confirm password</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type=\"password\"\n                  placeholder=\"Confirm password\"\n                  name=\"password2\"\n                  value={password2}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.password2?.map((message, idx) => (\n                <Alert key={idx} variant=\"dark\" className=\"text-center\">\n                  {message}\n                </Alert>\n              ))}\n\n              <Button\n                className={`${btnStyles.Button} ${btnStyles.Wide} ${btnStyles.Bright}`}\n                type=\"submit\"\n              >\n                Sign up\n              </Button>\n              {errors.non_field_errors?.map((message, idx) => (\n                <Alert key={idx} variant=\"dark\" className=\"mt-3 text-center\">\n                  {message}\n                </Alert>\n              ))}\n            </Form>\n          </Container>\n\n          {/* Container for the sign-in link */}\n          <Container className=\"mt-3\">\n            <Link className={styles.Link} to=\"/login\">\n              Already have an account? <span>Sign in</span>\n            </Link>\n          </Container>\n        </Col>\n      </Row>\n    </Col>\n  </Row>\n</Container>\n  );\n};\n\nexport default SignUpForm;","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport Image from \"react-bootstrap/Image\";\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport Login from \"../../assets/login.png\";\n\nimport styles from \"../../styles/SignInUpForm.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport { useSetCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { useRedirect } from \"../../hooks/useRedirect\";\nimport { setTokenTimestamp } from \"../../utils/utils\";\n\nfunction SignInForm() {\n  // Get the setCurrentUser function from the context and redirect the user\n  // if aleary logged in.\n  const setCurrentUser = useSetCurrentUser();\n  useRedirect('loggedIn')\n\n  const [signInData, setSignInData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const { username, password } = signInData;\n\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await axios.post(\"/dj-rest-auth/login/\", signInData);\n      setCurrentUser(data.user);\n      setTokenTimestamp(data);\n      history.goBack();\n    } catch (err) {\n      setErrors(err.response?.data);\n    }\n  };\n\n  // Handle form input changes\n  const handleChange = (event) => {\n    setSignInData({\n      ...signInData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return ( \n<Container fluid className={styles.Container}>\n  <Row className=\"justify-content-center align-items-center\">\n    <Col xs={12} md={6} className=\"text-center\">\n      <Image src={Login} className={styles.LoginImg} />\n    </Col>\n\n    {/* Column containing the login form */}\n    <Col xs={12} md={6}>\n      <Row className={`justify-content-center ${styles.Row}`}>\n        <Col>\n          <h1 className={styles.Header}>Login to Picagram</h1>\n          <hr className=\"my-4\" />\n        </Col>\n      </Row>\n\n      <Row className={`${styles.Row}`}>\n        <Col>\n          <Container className=\"justify-content-center text-center\">\n          <Form onSubmit={handleSubmit}>\n            \n            {/* Username input */}\n            <Form.Group controlId=\"username\">\n              <Form.Label className=\"d-none\">username</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type=\"text\"\n                placeholder=\"Username\"\n                name=\"username\"\n                value={username}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.username?.map((message, idx) => (\n              <Alert variant=\"dark\" key={idx} className=\"text-center\">\n                {message}\n              </Alert>\n            ))}\n\n            {/* Password input */}\n            <Form.Group controlId=\"password\">\n              <Form.Label className=\"d-none\">Password</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={password}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.password1?.map((message, idx) => (\n              <Alert key={idx} variant=\"dark\" className=\"text-center\">\n                {message}\n              </Alert>\n            ))}\n\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Wide} ${btnStyles.Bright} `}\n              type=\"submit\"\n            >\n              Log In\n            </Button>\n            {errors.non_field_errors?.map((message, idx) => (\n              <Alert key={idx} variant=\"dark\" className=\"mt-3 text-center\">\n                {message}\n              </Alert>\n            ))}\n          </Form>\n          </Container>\n        </Col>\n      </Row>\n\n      {/* Row for the sign-up link */}\n      <Row className={`${styles.Row}`}>\n        <Col>\n          <Container className=\"mt-3\">\n            <Link className={styles.Link} to=\"/signup\">\n              Don't have an account? <span>Sign up now!</span>\n            </Link>\n          </Container>\n        </Col>\n      </Row>\n    </Col>\n  </Row>\n</Container>\n   );\n}\n\nexport default SignInForm;","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport styles from \"../styles/Asset.module.css\";\n\nconst Asset = ({ spinner, src, message }) => {\n  return (\n    <div className={`${styles.Asset} p-4`}>\n      {spinner && <Spinner animation=\"border\" />}\n      {src && <img src={src} alt={message} />}\n      {message && <p className=\"mt-4\">{message}</p>}\n    </div>\n  );\n};\n\nexport default Asset;","export default __webpack_public_path__ + \"static/media/upload.f5d60e01.png\";","import React, { useRef, useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Image from \"react-bootstrap/Image\";\n\nimport Asset from \"../../components/Asset\";\nimport Upload from \"../../assets/upload.png\";\n\nimport styles from \"../../styles/PostCreateEditForm.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\n\nimport { useHistory } from \"react-router\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\n\nfunction PostCreateForm() {\n  const [errors, setErrors] = useState({});\n\n  const [postData, setPostData] = useState({\n    content: \"\",\n    image: \"\",\n  });\n  const { content, image } = postData;\n\n  const imageInput = useRef(null);\n  const history = useHistory();\n\n  // Function to handle form field changes\n  const handleChange = (event) => {\n    setPostData({\n      ...postData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Function to handle image input changes\n  const handleChangeImage = (event) => {\n    if (event.target.files.length) {\n      URL.revokeObjectURL(image);\n      setPostData({\n        ...postData,\n        image: URL.createObjectURL(event.target.files[0]),\n      });\n    }\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n\n    // Append content and image data to the FormData object\n    formData.append(\"content\", content);\n    formData.append(\"image\", imageInput.current.files[0]);\n\n    try {\n      const { data } = await axiosReq.post(\"/posts/\", formData);\n      history.push(`/posts/${data.id}`);\n    } catch (err) {\n      // console.log(err);\n      if (err.response?.status !== 401) {\n        setErrors(err.response?.data);\n      }\n    }\n  };\n\n  // JSX for the text fields section\n  const textFields = (\n    <div className=\"text-center\">\n      <Form.Group>\n        <Form.Label className=\"d-none\">Content</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={6}\n          name=\"content\"\n          placeholder=\"Write a caption...\"\n          value={content}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.content?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      <Button\n        className={`${btnStyles.Button}`}\n        onClick={() => history.goBack()}\n      ><i className=\"fa-solid fa-xmark\"></i> Cancel</Button>\n      <Button className={`${btnStyles.Button}`} type=\"submit\">\n      <i className=\"fa-solid fa-circle-plus\"></i>Share\n      </Button>\n    </div>\n  );\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Row>\n        <Col>\n          <Container\n            className={`${styles.Container} d-flex flex-column justify-content-center`}\n          >\n            <Form.Group className=\"text-center\">\n              {image ? (\n                <>\n                  <figure>\n                    {/* Display the selected image */}\n                    <Image\n                        className={appStyles.Image}\n                        src={image}\n                        rounded\n                    />\n                  </figure>\n                  <div>\n                    <Form.Label\n                      className={`${btnStyles.Button} btn`}\n                      htmlFor=\"image-upload\"\n                    >\n                      Change the image\n                    </Form.Label>\n                  </div>\n                </>\n              ) : (\n                // Display the upload button and message when no image is selected\n                <Form.Label\n                  className=\"d-flex justify-content-center\"\n                  htmlFor=\"image-upload\"\n                >\n                  <Asset\n                    src={Upload}\n                    message=\"Click or tap to upload an image\"\n                  />\n                </Form.Label>\n              )}\n\n              {/* Input element for selecting an image */}\n              <Form.File\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleChangeImage}\n                ref={imageInput}\n                className={styles.hiddenInputButton}\n              />\n            </Form.Group>\n            {errors?.image?.map((message, idx) => (\n              <Alert variant=\"warning\" key={idx}>\n                {message}\n              </Alert>\n            ))}\n        </Container>\n      </Col>\n    </Row>\n    <Container className={appStyles.Content}>{textFields}</Container>\n  </Form>\n);\n}\n\nexport default PostCreateForm;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\n// Component for rendering three dots icon with click handler\nconst ThreeDots = ({ onClick }) => (\n  <i\n    className=\"fa-solid fa-ellipsis\"\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  />\n);\n\n// Component for a modal with more options (Edit, Delete, Close)\nexport const MoreModal = ({ handleEdit, handleDelete }) => {\n  const [smShow, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <ThreeDots onClick={handleShow} />\n\n      <Modal size=\"sm\" show={smShow}  onHide={handleClose}>\n        <Modal.Body>\n          <div className=\"text-center\">\n            <ButtonGroup>\n              <Button\n                  variant=\"dark\"\n                  onClick={handleEdit}\n                  aria-label=\"edit\"\n              >\n                <i className=\"fas fa-edit\" /> Edit\n              </Button>\n              <Button\n                variant=\"dark\"\n                onClick={handleDelete}\n                aria-label=\"delete\"\n              >\n                <i className=\"fas fa-trash-alt\" /> Delete\n              </Button>\n              <Button\n                variant=\"dark\"\n                onClick={handleClose}\n              >\n              <i className=\"fa-solid fa-xmark\" /> Close\n              </Button>\n            </ButtonGroup>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\n// Component for a modal with profile editing options\nexport const ProfileEditDropdown = ({ id }) => {\n  const history = useHistory();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <ThreeDots onClick={handleShow} />\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Body>\n          <div className=\"text-center\">\n            <ButtonGroup>\n              <Button\n                variant=\"dark\"\n                onClick={() => history.push(`/profiles/${id}/edit`)}\n                aria-label=\"edit-profile\"\n              >\n                <i className=\"fas fa-edit\" /> Edit profile\n              </Button>\n              <Button\n                variant=\"dark\"\n                onClick={() => history.push(`/profiles/${id}/edit/username`)}\n                aria-label=\"edit-username\"\n              >\n                <i className=\"far fa-id-card\" /> Change username\n              </Button>\n              <Button\n                variant=\"dark\"\n                onClick={() => history.push(`/profiles/${id}/edit/password`)}\n                aria-label=\"edit-password\"\n              >\n                <i className=\"fas fa-key\" /> Change password\n              </Button>\n            </ButtonGroup>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { FacebookShareButton, TwitterShareButton, WhatsappShareButton } from 'react-share';\nimport styles from '../styles/ShareButton.module.css'\n\n// Share modal for sharing posts to other platforms\nconst ShareModal = ({ isOpen, onClose, shareUrl, title }) => {\n  return (\n    <Modal show={isOpen} onHide={onClose}>\n      <Modal.Body>\n        <div className=\"text-center\">\n          <div>\n            <FacebookShareButton url={shareUrl} quote={title}>\n              <div className={styles.ShareButtonDiv}>\n                <i className=\"fa-brands fa-facebook-f\" />\n              </div>\n            </FacebookShareButton>\n\n            <TwitterShareButton url={shareUrl} title={title}>\n              <div className={styles.ShareButtonDiv}>\n                <i className=\"fa-brands fa-x-twitter\" />\n              </div>\n            </TwitterShareButton>\n\n            <WhatsappShareButton url={shareUrl} title={title}>\n              <div className={styles.ShareButtonDiv}>\n                <i className=\"fa-brands fa-whatsapp\" />\n              </div>\n            </WhatsappShareButton>\n\n            <Button variant=\"dark\" onClick={onClose}>\n              <i className=\"fa-solid fa-xmark\" />\n            </Button>\n          </div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default ShareModal;\n","import Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/esm/ButtonGroup\";\n\nconst ConfirmationModal = ({ handleMethod, show, setShow, body, type }) => {\n  return (\n    <>\n      <Modal size=\"sm\" show={show} backdrop=\"static\" keyboard={false} className=\"mt-3\">\n        <Modal.Body className=\"py-1\">\n          <div className=\"text-center\">\n            <ButtonGroup>\n              <Button variant=\"secondary\" size=\"sm\" onClick={() => setShow(false)}>\n                Cancel\n              </Button>\n              <Button variant={type} size=\"sm\" onClick={handleMethod}>\n                {body}\n              </Button>\n            </ButtonGroup>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default ConfirmationModal;","import React, { useState } from 'react';\nimport styles from \"../../styles/Post.module.css\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\n\nimport Card from 'react-bootstrap/Card';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport Avatar from \"../../components/Avatar\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nimport { MoreModal } from \"../../components/MoreModal\";\nimport ShareModal from \"../../components/ShareModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\n\nconst Post = (props) => {\n  const {\n    id,\n    owner,\n    profile_id,\n    profile_image,\n    comments_count,\n    likes_count,\n    like_id,\n    title,\n    content,\n    image,\n    updated_at,\n    setPosts,\n    bookmark_id,\n  } = props;\n\n  const currentUser = useCurrentUser();\n  const is_owner = currentUser?.username === owner;\n  const history = useHistory();\n\n  // Check what page the user is on\n  const location = useLocation();\n  const isFeedPage = location.pathname.includes('/feed');\n  const isHomePage = location.pathname === '/';\n  const isPostPage = location.pathname.startsWith('/posts/');\n  const isProfilePage = location.pathname.startsWith('/profiles/');\n\n  // State to manage the visibility of the ShareModal and construct the share URL\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const shareUrl = `${window.location.origin}/posts/${id}`;\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n\n  const [showModal, setShowModal] = useState(false);\n  const handleShowModal = () => {\n    setShowModal(true);\n  };\n\n  // Function to navigate to the post edit page\n  const handleEdit = () => {\n    history.push(`/posts/${id}/edit`);\n  };\n\n  // Function to handle post deletion\n  const handleDelete = async () => {\n    try {\n      await axiosRes.delete(`/posts/${id}/`);\n      history.push(`/profiles/${currentUser?.profile_id}`);\n    } catch (err) {\n      // console.error(err);\n    }\n  };\n\n  // Function to handle post like\n  const handleLike = async () => {\n    try {\n      const { data } = await axiosRes.post(\"/likes/\", { post: id });\n      setPosts((prevPosts) => ({\n        ...prevPosts,\n        results: prevPosts.results.map((post) => {\n          return post.id === id\n            ? { ...post, likes_count: post.likes_count + 1, like_id: data.id }\n            : post;\n        }),\n      }));\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n  // Function to handle post unlike\n  const handleUnlike = async () => {\n    try {\n      await axiosRes.delete(`/likes/${like_id}/`);\n      setPosts((prevPosts) => ({\n        ...prevPosts,\n        results: prevPosts.results.map((post) => {\n          return post.id === id\n            ? { ...post, likes_count: post.likes_count - 1, like_id: null }\n            : post;\n        }),\n      }));\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n  \n  // Function to bookmark a post\n  const handleBookmark = async () => {\n    try {\n      const { data } = await axiosRes.post(\"/bookmark/\", { post: id });\n      setPosts((prevPosts) => ({\n        ...prevPosts,\n        results: prevPosts.results.map((post) => {\n          return post.id === id\n            ? { ...post, bookmark_id: data.id }\n            : post;\n        }),\n      }));\n    } catch (err) {\n      // console.error(\"Error bookmarking post:\", err);\n    }\n  };\n\n  // Function to remove bookmark\n  const handleUnBookmark = async () => {\n    try {\n      await axiosRes.delete(`/bookmark/${bookmark_id}/`);\n      setPosts((prevPosts) => ({\n        ...prevPosts,\n        results: prevPosts.results.map((post) => {\n          return post.id === id\n            ? { ...post, bookmark_id: null }\n            : post;\n        }),\n      }));\n    } catch (err) {\n      // console.error(\"Error removing bookmark:\", err);\n    }\n  };\n\n\n  return (\n    <Card className={styles.Post}>\n      {isProfilePage ? (\n        // Render only the image, likes and comments count when on the profile page\n        <>\n        <Link to={`/posts/${id}`}>\n          <Card.Img src={image} alt={title} />\n        </Link>\n        <Card.Body>\n          <Card.Text className={styles.PostBarDark}>\n          {likes_count === 1 ? `${likes_count} like • ` : `${likes_count} likes • `}\n          {comments_count === 1 ? `${comments_count} comment` : `${comments_count} comments`}\n          </Card.Text>\n        </Card.Body>\n        </>\n      ) : (\n        // Render the entire post content when not on the profile page\n        <>\n        <Card.Body>\n        <div className={`d-flex align-items-center justify-content-between ${styles.ProfileDate}`}>\n            <Link to={`/profiles/${profile_id}`} className={`d-flex align-items-center ${styles.ProfileDateHover}`}>\n            <Avatar src={profile_image} height={30} />\n            <span>{owner} • {updated_at}</span>\n            </Link>\n            {/* Render MoreModal component for post owner to edit or delete the post */}\n            {is_owner && (\n              <>\n                <MoreModal handleEdit={handleEdit} handleDelete={() => handleShowModal()} />\n\n                {/* ConfirmationModal component */}\n                <ConfirmationModal\n                  show={showModal}\n                  setShow={setShowModal}\n                  handleMethod={handleDelete}\n                  body=\"Delete Post!\"\n                  type=\"dark\"\n                />\n              </>\n            )}\n        </div>\n        </Card.Body>\n      <Link to={`/posts/${id}`}>\n        <Card.Img src={image} alt={title} />\n      </Link>\n      <Card.Body>\n        <div className={styles.PostBar}>\n          {is_owner ? (\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>You can't like your own post!</Tooltip>}\n            >\n              <i className=\"far fa-heart\" />\n            </OverlayTrigger>\n          ) : like_id ? (\n            <span onClick={handleUnlike}>\n              <i className={`fas fa-heart ${styles.Heart}`} />\n            </span>\n          ) : currentUser ? (\n            <span onClick={handleLike}>\n              <i className={`far fa-heart ${styles.HeartOutline}`} />\n            </span>\n          ) : (\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>Log in to like posts!</Tooltip>}\n            >\n              <i className=\"far fa-heart\" />\n            </OverlayTrigger>\n          )}\n\n          {is_owner ? (\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>You can find your own posts under Profile!</Tooltip>}\n            >\n              <i className=\"fa-regular fa-bookmark\" />\n            </OverlayTrigger>\n          ) : bookmark_id ? (\n            <span onClick={handleUnBookmark}>\n              <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>Remove from bookmarks!</Tooltip>}\n              >\n              <i className={`fa-solid fa-bookmark`} />\n              </OverlayTrigger>\n            </span>\n          ) : currentUser ? (\n            <span onClick={handleBookmark}>\n              <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>Save post!</Tooltip>}\n              >\n              <i className={`fa-regular fa-bookmark`} />\n              </OverlayTrigger>\n            </span>\n          ) : (\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>Log in to save posts!</Tooltip>}\n            >\n              <i className=\"fa-regular fa-bookmark\" />\n            </OverlayTrigger>\n          )}\n\n          <Link to={`/posts/${id}`}>\n            {isPostPage ? (\n              <OverlayTrigger\n                placement=\"top\"\n                overlay={<Tooltip>{currentUser ? 'Comment down below!' : 'Log in to comment!'}</Tooltip>}\n              >\n                <i className={`far fa-comments ${styles.Comments}`} />\n              </OverlayTrigger>\n            ) : (\n              <i className={`far fa-comments ${styles.Comments}`} /> \n            )}\n          </Link>\n          {/* Render ShareModal component to share the post */}\n          <span onClick={openModal}>\n          <i className=\"fa-regular fa-paper-plane\"></i>\n          </span>\n          <ShareModal isOpen={isModalOpen} onClose={closeModal} shareUrl={shareUrl} title={title} />\n          </div>\n            <Card.Text className={styles.PostBar}>\n            {likes_count === 1 ? `${likes_count} like • ` : `${likes_count} likes • `}\n            {comments_count === 1 ? `${comments_count} comment` : `${comments_count} comments`}\n            </Card.Text>\n            {content && (\n              <Card.Text className={styles.PostBar}>\n                <span className={styles.boldText}>{owner}</span>\n                {content}\n              </Card.Text>\n            )}\n            {isFeedPage || isHomePage ? (\n              <Link to={`/posts/${id}`}>\n                <Card.Text className={styles.PostBar}>\n                  {comments_count === 0\n                    ? `Be the first to comment...`\n                    : comments_count === 1\n                      ? `See the one comment...`\n                      : `See all ${comments_count} comments...`}\n                </Card.Text>\n              </Link>\n            ) : null}\n          </Card.Body>\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default Post;","import React, { useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\n\nimport styles from \"../../styles/CommentCreateEditForm.module.css\";\n\nfunction CommentEditForm(props) {\n  const { id, content, setShowEditForm, setComments } = props;\n\n  const [formContent, setFormContent] = useState(content);\n\n  // Handle change in the comment content input\n  const handleChange = (event) => {\n    setFormContent(event.target.value);\n  };\n\n  // Handle form submission to update the comment\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axiosRes.put(`/comments/${id}/`, {\n        content: formContent.trim(),\n      });\n      setComments((prevComments) => ({\n        ...prevComments,\n        results: prevComments.results.map((comment) => {\n          return comment.id === id\n            ? {\n                ...comment,\n                content: formContent.trim(),\n                updated_at: \"now\",\n              }\n            : comment;\n        }),\n      }));\n\n      // Hide the edit form after successful comment update\n      setShowEditForm(false);\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"pr-1\">\n        <Form.Control\n          className={styles.Form}\n          as=\"textarea\"\n          value={formContent}\n          onChange={handleChange}\n          rows={2}\n        />\n      </Form.Group>\n      <div className=\"text-right\">\n        {/* Cancel button to exit the edit mode */}\n        <button\n          className={styles.Button}\n          onClick={() => setShowEditForm(false)}\n          type=\"button\"\n        >\n          cancel\n        </button>\n        {/* Save button to submit the edited comment */}\n        <button\n          className={styles.Button}\n          disabled={!content.trim()} // Disable if the content is empty\n          type=\"submit\"\n        >\n          save\n        </button>\n      </div>\n    </Form>\n  );\n}\n\nexport default CommentEditForm;","import React, { useState } from \"react\";\nimport Media from 'react-bootstrap/Media';\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"../../components/Avatar\";\nimport styles from \"../../styles/Comment.module.css\";\nimport CommentEditForm from \"./CommentEditForm\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\n\nconst Comment = (props) => {\n  const {\n    profile_id,\n    profile_image,\n    owner,\n    updated_at,\n    content,\n    id,\n    setPost,\n    setComments,\n  } = props;\n\n  const [showEditForm, setShowEditForm] = useState(false);\n  const currentUser = useCurrentUser();\n  const is_owner = currentUser?.username === owner;\n\n  const [showModal, setShowModal] = useState(false);\n\n  const handleShowModal = () => {\n    setShowModal(true);\n  };\n\n  // Handle comment deletion\n  const handleDelete = async () => {\n    try {\n      await axiosRes.delete(`/comments/${id}/`);\n      setPost((prevPost) => ({\n        results: [\n          {\n            ...prevPost.results[0],\n            comments_count: prevPost.results[0].comments_count - 1,\n          },\n        ],\n      }));\n      setComments((prevComments) => ({\n        ...prevComments,\n        results: prevComments.results.filter((comment) => comment.id !== id),\n      }));\n    } catch (err) {}\n  };\n\n  return (\n    <div>\n      <hr />\n\n      {/* Media component for comment display */}\n      <Media className=\"d-flex align-items-center\">\n        <Link to={`/profiles/${profile_id}`} className={styles.AvatarHover}>\n          <Avatar src={profile_image} height={30} />\n        </Link>\n\n        {/* Media body for comment content */}\n        <Media.Body className=\"ml-2\">\n          <span className={styles.Owner}>{owner}</span>\n          <span className={styles.Date}>{updated_at}</span>\n\n          {/* Render comment edit form if in edit mode */}\n          {showEditForm ? (\n            <CommentEditForm\n              id={id}\n              profile_id={profile_id}\n              content={content}\n              profileImage={profile_image}\n              setComments={setComments}\n              setShowEditForm={setShowEditForm}\n            />\n          ) : (\n            <>\n              {/* Render edit and delete icons for comment owner */}\n              {is_owner ? (\n                <>\n                  <span onClick={handleShowModal} className={styles.editDelete}>\n                    <i className=\"fa-solid fa-xmark\"></i>\n                  </span>\n                  <span\n                    onClick={() => setShowEditForm(true)}\n                    className={styles.editDelete}\n                  >\n                    <i className=\"fa-solid fa-ellipsis\"></i>\n                  </span>\n                </>\n              ) : null}\n\n              {/* Display the comment content */}\n              <p>{content}</p>\n            </>\n          )}\n        </Media.Body>\n      </Media>\n      <ConfirmationModal\n        show={showModal}\n        setShow={setShowModal}\n        handleMethod={handleDelete}\n        body=\"Delete comment!\"\n        type=\"dark\"\n      />\n    </div>\n  );\n};\n\nexport default Comment;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport styles from \"../../styles/CommentCreateEditForm.module.css\";\nimport Avatar from \"../../components/Avatar\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\n\nfunction CommentCreateForm(props) {\n  const { post, setPost, setComments, profileImage, profile_id } = props;\n  const [content, setContent] = useState(\"\");\n\n  // Handle change in the comment content input\n  const handleChange = (event) => {\n    setContent(event.target.value);\n  };\n\n  // Handle form submission to create a new comment\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await axiosRes.post(\"/comments/\", {\n        content,\n        post,\n      });\n\n      // Update comments and post after successful comment creation\n      setComments((prevComments) => ({\n        ...prevComments,\n        results: [data, ...prevComments.results],\n      }));\n      setPost((prevPost) => ({\n        results: [\n          {\n            ...prevPost.results[0],\n            comments_count: prevPost.results[0].comments_count + 1,\n          },\n        ],\n      }));\n\n      // Clear the comment input after submission\n      setContent(\"\");\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n  return (\n    <Form className=\"mt-2\" onSubmit={handleSubmit}>\n      <Form.Group>\n        <InputGroup>\n          <Link to={`/profiles/${profile_id}`} className={styles.AvatarHover}>\n            <Avatar src={profileImage} height={30}/>\n          </Link>\n          <Form.Control\n            className={styles.Form}\n            placeholder=\"Add comment...\"\n            as=\"textarea\"\n            value={content}\n            onChange={handleChange}\n            rows={1}\n          />\n        </InputGroup>\n      </Form.Group>\n      \n      {/* Display the \"Publish\" button if content is not empty */}\n      {content.trim() && (\n        <button\n        className={`${styles.Button} btn d-block ml-auto`}\n        type=\"submit\"\n        >\n        Publish\n        </button>\n        )}\n\n    </Form>\n  );\n}\n\nexport default CommentCreateForm;","import React, { useEffect, useState } from \"react\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\n\nimport appStyles from \"../../App.module.css\";\nimport { useParams } from \"react-router\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport Post from \"./Post\";\nimport Comment from \"../comments/Comment\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { fetchMoreData } from \"../../utils/utils\";\nimport Asset from \"../../components/Asset\";\nimport CommentCreateForm from \"../comments/CommentCreateForm\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\n\nfunction PostPage() {\n  const { id } = useParams();\n  const [post, setPost] = useState({ results: [] });\n  const [comments, setComments] = useState({ results: [] });\n\n  // Get the current user and their profile image\n  const currentUser = useCurrentUser();\n  const profile_image = currentUser?.profile_image;\n\n\n  // Use useEffect to fetch post and comments data on component mount\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const [{ data: post }, { data: comments }] = await Promise.all([\n          axiosReq.get(`/posts/${id}`),\n          axiosReq.get(`/comments/?post=${id}`),\n        ]);\n        setPost({ results: [post] });\n        setComments(comments);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n\n    handleMount();\n  }, [id]);\n\n  return (\n    <Row >\n      <Col lg={12}>\n        <Post {...post.results[0]} setPosts={setPost} postPage />\n        <Container className={appStyles.ContentBlack}>\n        {/* Render CommentCreateForm only if there is a current user */}\n          {currentUser ? (\n            <CommentCreateForm\n              profile_id={currentUser.profile_id}\n              profileImage={profile_image}\n              post={id}\n              setPost={setPost}\n              setComments={setComments}\n            />\n          ) : comments.results.length ? (\n            \"Comments\"\n          ) : null}\n          {comments.results.length ? (\n            <InfiniteScroll \n            children={\n              comments.results.map(comment => (\n                <Comment\n                key={comment.id}\n                {...comment}\n                setPost={setPost}\n                setComments={setComments}\n                />\n              ))\n            }\n            dataLength={comments.results.length}\n            loader={<Asset spinner />}\n            hasMore={!!comments.next}\n            next={() => fetchMoreData(comments, setComments)}\n            />\n          ) : currentUser ? (\n            // Render an empty span if there are no comments (and user is logged in)\n            <span> </span>\n          ) : (\n            // Render a message if there are no comments and user is not logged in\n            <span>No comments yet. Login to comment!</span>\n          )}\n        </Container>\n      </Col>\n    </Row>\n  );\n}\n\nexport default PostPage;","export default __webpack_public_path__ + \"static/media/no-results.bd8ecadb.png\";","import React, { useEffect, useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\n\nimport Post from \"./Post\";\nimport Asset from \"../../components/Asset\";\n\nimport appStyles from \"../../App.module.css\";\nimport styles from \"../../styles/PostsPage.module.css\";\nimport { useLocation } from \"react-router\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\n\nimport NoResults from \"../../assets/no-results.png\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { fetchMoreData } from \"../../utils/utils\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\n\nfunction PostsPage({ message, filter = \"\" }) {\n  const [posts, setPosts] = useState({ results: [] });\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const { pathname } = useLocation();\n\n  const [query, setQuery] = useState(\"\");\n  const currentUser = useCurrentUser();\n\n  const location = useLocation();\n  const isBookmarkedPage = location.pathname.includes('/bookmarked');\n  const isFeedPage = location.pathname.includes('/feed');\n\n  // UseEffect to fetch posts data when filter, query, or pathname changes\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const { data } = await axiosReq.get(`/posts/?${filter}search=${query}`);\n        setPosts(data);\n        setHasLoaded(true);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n\n    // Set hasLoaded to false and use a timer to wait for \n    // user to stop typing before making the API call\n    setHasLoaded(false);\n    const timer = setTimeout(() => {\n      fetchPosts();\n    }, 1000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [filter, query, pathname, currentUser]);\n\n  return (\n    <Row className=\"h-100\">\n      <Col className=\"py-2 p-0 p-lg-2\" lg={12}>\n        {/* Search bar with search icon */}\n        <i className={`fas fa-search ${styles.SearchIcon}`} />\n        <Form\n          className={styles.SearchBar}\n          onSubmit={(event) => event.preventDefault()}\n        >\n          <Form.Control\n            value={query}\n            onChange={(event) => setQuery(event.target.value)}\n            type=\"text\"\n            className=\"mr-sm-2\"\n            placeholder=\"Search posts...\"\n          />\n        </Form>\n\n        {hasLoaded ? (\n          <>\n            {isBookmarkedPage ? <h4>Your Saved Posts</h4> : isFeedPage ? <h4>Your Feed</h4> : null}\n            {posts.results.length ? (\n              // Render InfiniteScroll to display posts with lazy loading\n              <InfiniteScroll\n                children={posts.results.map((post) => (\n                  <Post key={post.id} {...post} setPosts={setPosts} />\n                ))}\n                dataLength={posts.results.length}\n                loader={<Asset spinner />}\n                hasMore={!!posts.next}\n                next={() => fetchMoreData(posts, setPosts)}\n              />\n            ) : (\n              <Container className={appStyles.Content}>\n                <Asset src={NoResults} message={message} />\n              </Container>\n            )}\n          </>\n        ) : (\n          <Container className={appStyles.Content}>\n            <Asset spinner />\n          </Container>\n        )}\n      </Col>\n    </Row>\n  );\n}\n\nexport default PostsPage;","import React, { useEffect, useRef, useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Image from \"react-bootstrap/Image\";\n\nimport styles from \"../../styles/PostCreateEditForm.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\n\nimport { useHistory, useParams } from \"react-router\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\n\nfunction PostEditForm() {\n  const [errors, setErrors] = useState({});\n\n  const [postData, setPostData] = useState({\n    content: \"\",\n    image: \"\",\n  });\n  const { content, image } = postData;\n\n  // Reference to the image input element\n  const imageInput = useRef(null);\n\n  // Use useHistory and useParams hooks for navigation and obtaining URL parameters\n  const history = useHistory();\n  const { id } = useParams();\n\n  // Use useEffect to fetch post data on component mount\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(`/posts/${id}/`);\n        const { content, image, is_owner } = data;\n\n        // Check if the current user is the owner of the post\n        // If not, redirect them to the home page\n        is_owner ? setPostData({ content, image }) : history.push(\"/\");\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n\n    handleMount();\n  }, [history, id]);\n\n  // Function to handle form field changes\n  const handleChange = (event) => {\n    setPostData({\n      ...postData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Function to handle image input changes\n  const handleChangeImage = (event) => {\n    if (event.target.files.length) {\n      URL.revokeObjectURL(image);\n      setPostData({\n        ...postData,\n        image: URL.createObjectURL(event.target.files[0]),\n      });\n    }\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n\n    formData.append(\"content\", content);\n\n    // If a new image is selected, append it to the FormData object\n    if (imageInput?.current?.files[0]) {\n        formData.append(\"image\", imageInput.current.files[0]);\n      }\n\n      try {\n        await axiosReq.put(`/posts/${id}/`, formData);\n        history.push(`/posts/${id}`);\n      } catch (err) {\n        // console.log(err);\n        if (err.response?.status !== 401) {\n          setErrors(err.response?.data);\n        }\n      }\n    };\n\n  // JSX for the text fields section\n  const textFields = (\n    <div className=\"text-center\">\n      <Form.Group>\n        <Form.Label className=\"d-none\">Content</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={6}\n          name=\"content\"\n          placeholder=\"Write a caption...\"\n          value={content}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.content?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      <Button\n        className={`${btnStyles.Button}`}\n        onClick={() => history.goBack()}\n      ><i className=\"fa-solid fa-xmark\"></i> Cancel</Button>\n      <Button className={`${btnStyles.Button}`} type=\"submit\">\n      <i className=\"fa-solid fa-circle-plus\"></i>Save\n      </Button>\n    </div>\n  );\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Row>\n        <Col>\n          <Container\n            className={`${styles.Container} d-flex flex-column justify-content-center`}\n          >\n            <Form.Group className=\"text-center\">\n                  <figure>\n                    <Image\n                        className={appStyles.Image}\n                        src={image}\n                        rounded\n                    />\n                  </figure>\n                  <div>\n                    <Form.Label\n                      className={`${btnStyles.Button} btn`}\n                      htmlFor=\"image-upload\"\n                    >\n                      Change the image\n                      </Form.Label>\n                  </div>\n              <Form.File\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleChangeImage}\n                ref={imageInput}\n                className={styles.hiddenInputButton}\n              />\n            </Form.Group>\n            {errors?.image?.map((message, idx) => (\n              <Alert variant=\"warning\" key={idx}>\n                {message}\n              </Alert>\n            ))}\n          </Container>\n        </Col>\n          <Container className={appStyles.Content}>{textFields}</Container>\n      </Row>\n    </Form>\n  );\n}\n\nexport default PostEditForm;","import React from 'react'\nimport NoResults from '../assets/no-results.png'\nimport styles from '../styles/NotFound.module.css'\nimport Asset from './Asset'\n\n// Error message to users for not found pages/search\nconst NotFound = () => {\n  return (\n    <div className={styles.NotFound404}>\n        <Asset src={NoResults} message=\"Sorry, the page you're looking for doesn't exist\" />\n    </div>\n  )\n}\n\nexport default NotFound","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useCurrentUser } from \"../contexts/CurrentUserContext\";\nimport { followHelper, unfollowHelper } from \"../utils/utils\";\n\nconst ProfileDataContext = createContext();\nconst SetProfileDataContext = createContext();\n\nexport const useProfileData = () => useContext(ProfileDataContext);\nexport const useSetProfileData = () => useContext(SetProfileDataContext);\n\n// This context is designed to manage and share profile-related\n// data (such as page profiles and popular profiles) and associated\n// functions for following and unfollowing profiles.\nexport const ProfileDataProvider = ({ children }) => {\n  const [profileData, setProfileData] = useState({\n    pageProfile: { results: [] },\n    popularProfiles: { results: [] },\n  });\n\n  const currentUser = useCurrentUser();\n\n  const handleFollow = async (clickedProfile) => {\n    try {\n      const { data } = await axiosRes.post(\"/followers/\", {\n        followed: clickedProfile.id,\n      });\n\n      setProfileData((prevState) => ({\n        ...prevState,\n        pageProfile: {\n          results: prevState.pageProfile.results.map((profile) =>\n            followHelper(profile, clickedProfile, data.id)\n          ),\n        },\n        popularProfiles: {\n          ...prevState.popularProfiles,\n          results: prevState.popularProfiles.results.map((profile) =>\n            followHelper(profile, clickedProfile, data.id)\n          ),\n        },\n      }));\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n  const handleUnfollow = async (clickedProfile) => {\n    try {\n      await axiosRes.delete(`/followers/${clickedProfile.following_id}/`);\n      setProfileData((prevState) => ({\n        ...prevState,\n        pageProfile: {\n          results: prevState.pageProfile.results.map((profile) =>\n            unfollowHelper(profile, clickedProfile)\n          ),\n        },\n        popularProfiles: {\n          ...prevState.popularProfiles,\n          results: prevState.popularProfiles.results.map((profile) =>\n            unfollowHelper(profile, clickedProfile)\n          ),\n        },\n      }));\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(\n          \"/profiles/?ordering=-followers_count\"\n        );\n        setProfileData((prevState) => ({\n          ...prevState,\n          popularProfiles: data,\n        }));\n      } catch (err) {\n      // console.log(err);\n      }\n    };\n\n    handleMount();\n  }, [currentUser]);\n\n  return (\n    <ProfileDataContext.Provider value={profileData}>\n      <SetProfileDataContext.Provider value={{ setProfileData, handleFollow, handleUnfollow }}>\n        {children}\n      </SetProfileDataContext.Provider>\n    </ProfileDataContext.Provider>\n  );\n};","import React from \"react\";\nimport styles from \"../../styles/Profile.module.css\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"../../components/Avatar\";\nimport { useSetProfileData } from \"../../contexts/ProfileDataContext\";\n\n\nconst Profile = (props) => {\n  const { profile, mobile, imageSize = 30 } = props;\n  const { id, following_id, image, owner } = profile;\n\n  const currentUser = useCurrentUser();\n  const is_owner = currentUser?.username === owner;\n\n  const  {handleFollow, handleUnfollow} = useSetProfileData();\n\n  return (\n    <div\n      className={`my-3 d-flex align-items-center ${mobile && \"flex-column\"}`}\n    >\n      <div>\n        <Link className=\"align-self-center\" to={`/profiles/${id}`}>\n          <Avatar src={image} height={imageSize} />\n        </Link>\n      </div>\n      {/* Display owner's name */}\n      <div className={`mx-2 ${styles.WordBreak}`}>\n        {owner}\n      </div>\n      {/* Display follow/unfollow button */}\n      <div className={`${!mobile && \"ml-auto\"}`}>\n        {!mobile &&\n          currentUser &&\n          !is_owner &&\n          (following_id ? (\n            // Display unfollow button if the user is following the profile\n            <span\n              className={`${styles.Follow}`}\n              onClick={() => handleUnfollow(profile)}\n            >\n              Unfollow\n            </span>\n          ) : (\n            // Display follow button if the user is not following the profile\n            <span\n            className={`${styles.Follow}`}\n            onClick={() => handleFollow(profile)}\n            >\n              Follow\n            </span>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;","import React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport appStyles from \"../../App.module.css\";\nimport Asset from \"../../components/Asset\";\nimport styles from '../../styles/PopularProfiles.module.css'\nimport { useProfileData } from \"../../contexts/ProfileDataContext\";\nimport Profile from \"./Profile\";\n\nconst PopularProfiles = ({ mobile }) => {\n  const { popularProfiles } = useProfileData();\n\n  return (\n    <Container\n      className={`${appStyles.Content} ${\n        mobile && \"d-lg-none text-center mb-3\"\n      }`}\n    >\n      {popularProfiles.results.length ? (\n        // Render popular profiles if there are results\n        <>\n          <p className={styles.boldText}>User suggestions</p>\n          {mobile ? (\n            // Render mobile layout with up to 4 profiles side by side\n            <div className=\"d-flex justify-content-around\">\n              {popularProfiles.results.slice(0, 4).map((profile) => (\n                <Profile key={profile.id} profile={profile} mobile />\n              ))}\n            </div>\n          ) : (\n            // Render profiles in a regular layout\n            popularProfiles.results.map((profile) => (\n              <Profile key={profile.id} profile={profile} />\n            ))\n          )}\n        </>\n      ) : (\n        <Asset spinner />\n      )}\n    </Container>\n  );\n};\n\nexport default PopularProfiles;","import React, { useEffect, useState } from \"react\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\n\nimport Asset from \"../../components/Asset\";\nimport styles from \"../../styles/ProfilePage.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\n\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { useParams } from \"react-router\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport {\n  useProfileData,\n  useSetProfileData,\n} from \"../../contexts/ProfileDataContext\";\n\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Post from \"../posts/Post\";\nimport { fetchMoreData } from \"../../utils/utils\";\nimport { ProfileEditDropdown } from \"../../components/MoreModal\";\n\nfunction ProfilePage() {\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [profilePosts, setProfilePosts] = useState({ results: [] });\n\n  const currentUser = useCurrentUser();\n  const { id } = useParams();\n\n  const { setProfileData, handleFollow, handleUnfollow } = useSetProfileData();\n  const { pageProfile } = useProfileData();\n\n  const [profile] = pageProfile.results;\n  const is_owner = currentUser?.username === profile?.owner;\n\n  // Effect to fetch profile data and posts on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [{ data: pageProfile }, { data: profilePosts }] =\n          await Promise.all([\n            axiosReq.get(`/profiles/${id}/`),\n            axiosReq.get(`/posts/?owner__profile=${id}`),\n          ]);\n        setProfileData((prevState) => ({\n          ...prevState,\n          pageProfile: { results: [pageProfile] },\n        }));\n        setProfilePosts(profilePosts);\n        setHasLoaded(true);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    fetchData();\n  }, [id, setProfileData]);\n\n  // JSX for the main profile section\n  const mainProfile = (\n    <>\n    {profile?.is_owner && <ProfileEditDropdown id={profile?.id} />}\n      <Row noGutters className=\"px-3 text-center\">\n        <Col lg={3} className=\"text-lg-left\">\n          <Image\n            className={styles.ProfileImage}\n            roundedCircle\n            src={profile?.image}\n          />\n        </Col>\n        <Col lg={6}>\n          <h3 className=\"m-2 mt-5\">{profile?.owner}</h3><span className={styles.JoinDate}>Since: {profile?.created_at}</span>\n          <Row className=\"justify-content-center no-gutters\">\n            <Col xs={3} className=\"my-2\">\n              <div>{profile?.posts_count}</div>\n              <div>Posts</div>\n            </Col>\n            <Col xs={3} className=\"my-2\">\n              <div>{profile?.followers_count}</div>\n              <div>Followers</div>\n            </Col>\n            <Col xs={3} className=\"my-2\">\n              <div>{profile?.following_count}</div>\n              <div>Following</div>\n            </Col>\n          </Row>\n        </Col>\n        <Col lg={3} className=\"text-lg-right\">\n          {currentUser &&\n            !is_owner &&\n            (profile?.following_id ? (\n              <Button\n                className={`${btnStyles.Button} ${btnStyles.BlackOutline}`}\n                onClick={() => handleUnfollow(profile)}\n              >\n                Unfollow\n              </Button>\n            ) : (\n              <Button\n                className={`${btnStyles.Button} ${btnStyles.Black}`}\n                onClick={() => handleFollow(profile)}\n              >\n                Follow\n              </Button>\n            ))}\n        </Col>\n        {/* Display profile content */}\n        {profile?.content && <Col className=\"p-3\">{profile.content}</Col>}\n      </Row>\n    </>\n  );\n\n  // JSX for the main profile posts section\n  const mainProfilePosts = (\n    <>\n      <hr />\n      <p className=\"text-center\">{profile?.owner}'s posts</p>\n      <hr />\n      <Container>\n        <Row xs={2} md={2} lg={2} className=\"g-4\">\n          {/* Display profile posts */}\n          {profilePosts.results.map((post) => (\n            <Col key={post.id}>\n              <Post {...post} setPosts={setProfilePosts} />\n            </Col>\n          ))}\n        </Row>\n        {/* Infinite scroll for more posts */}\n        <InfiniteScroll\n          dataLength={profilePosts.results.length}\n          loader={<Asset spinner />}\n          hasMore={!!profilePosts.next}\n          next={() => fetchMoreData(profilePosts, setProfilePosts)}\n        />\n      </Container>\n    </>\n  );\n\n  return (\n    <Row>\n      <Col className=\"py-2 p-0 p-lg-2\" lg={12}>\n        <Container className={appStyles.Content}>\n          {hasLoaded ? (\n            <>\n              {mainProfile}\n              {mainProfilePosts}\n            </>\n          ) : (\n            <Asset spinner />\n          )}\n        </Container>\n      </Col>\n    </Row>\n  );\n}\n\nexport default ProfilePage;","import React, { useEffect, useState } from \"react\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nimport {\n  useCurrentUser,\n  useSetCurrentUser,\n} from \"../../contexts/CurrentUserContext\";\n\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\n\nconst UsernameForm = () => {\n  const [username, setUsername] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n  const { id } = useParams();\n\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useSetCurrentUser();\n\n  useEffect(() => {\n    // Set the initial value of the username field to the current username\n    if (currentUser?.profile_id?.toString() === id) {\n      setUsername(currentUser.username);\n    } else {\n      // Redirect to home if the current user is not the owner of the profile\n      history.push(\"/\");\n    }\n  }, [currentUser, history, id]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axiosRes.put(\"/dj-rest-auth/user/\", {\n        username,\n      });\n      setCurrentUser((prevUser) => ({\n        ...prevUser,\n        username,\n      }));\n      history.goBack();\n    } catch (err) {\n      // console.log(err);\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n    <Row>\n      <Col className=\"py-2 mx-auto text-center\" md={6}>\n        <Container className={appStyles.Content}>\n          {/* Form for changing the username */}\n          <Form onSubmit={handleSubmit} className=\"my-2\">\n            <Form.Group>\n              <Form.Label>Change username</Form.Label>\n              <Form.Control\n                placeholder=\"username\"\n                type=\"text\"\n                value={username}\n                onChange={(event) => setUsername(event.target.value)}\n              />\n            </Form.Group>\n            {errors?.username?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Blue}`}\n              onClick={() => history.goBack()}\n            >\n              cancel\n            </Button>\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Blue}`}\n              type=\"submit\"\n            >\n              save\n            </Button>\n          </Form>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default UsernameForm;","import React, { useEffect, useState } from \"react\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\n\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\n\nconst UserPasswordForm = () => {\n  const history = useHistory();\n  const { id } = useParams();\n  const currentUser = useCurrentUser();\n\n  const [userData, setUserData] = useState({\n    new_password1: \"\",\n    new_password2: \"\",\n  });\n  const { new_password1, new_password2 } = userData;\n\n  const [errors, setErrors] = useState({});\n\n  // Handle changes in the form input fields\n  const handleChange = (event) => {\n    setUserData({\n      ...userData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  useEffect(() => {\n    if (currentUser?.profile_id?.toString() !== id) {\n      // redirect user if they are not the owner of this profile\n      history.push(\"/\");\n    }\n  }, [currentUser, history, id]);\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axiosRes.post(\"/dj-rest-auth/password/change/\", userData);\n      history.goBack();\n    } catch (err) {\n      // console.log(err);\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n    <Row>\n      <Col className=\"py-2 mx-auto text-center\" md={6}>\n        <Container className={appStyles.Content}>\n          {/* Form for changing the user's password */}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label>New password</Form.Label>\n              <Form.Control\n                placeholder=\"new password\"\n                type=\"password\"\n                value={new_password1}\n                onChange={handleChange}\n                name=\"new_password1\"\n              />\n            </Form.Group>\n            {errors?.new_password1?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n            <Form.Group>\n              <Form.Label>Confirm password</Form.Label>\n              <Form.Control\n                placeholder=\"confirm new password\"\n                type=\"password\"\n                value={new_password2}\n                onChange={handleChange}\n                name=\"new_password2\"\n              />\n            </Form.Group>\n            {errors?.new_password2?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Blue}`}\n              onClick={() => history.goBack()}\n            >\n              cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              className={`${btnStyles.Button} ${btnStyles.Blue}`}\n            >\n              save\n            </Button>\n          </Form>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default UserPasswordForm;","import React, { useState, useEffect, useRef } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Alert from \"react-bootstrap/Alert\";\n\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport {\n  useCurrentUser,\n  useSetCurrentUser,\n} from \"../../contexts/CurrentUserContext\";\n\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\n\nconst ProfileEditForm = () => {\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useSetCurrentUser();\n  const { id } = useParams();\n  const history = useHistory();\n  const imageFile = useRef();\n\n  const [profileData, setProfileData] = useState({\n    name: \"\",\n    content: \"\",\n    image: \"\",\n  });\n  const { name, content, image } = profileData;\n\n  const [errors, setErrors] = useState({});\n\n  // Effect to fetch profile data on component mount\n  useEffect(() => {\n    const handleMount = async () => {\n      if (currentUser?.profile_id?.toString() === id) {\n        try {\n          const { data } = await axiosReq.get(`/profiles/${id}/`);\n          const { name, content, image } = data;\n          setProfileData({ name, content, image });\n        } catch (err) {\n          // console.log(err);\n          history.push(\"/\");\n        }\n      } else {\n        history.push(\"/\");\n      }\n    };\n\n    handleMount();\n  }, [currentUser, history, id]);\n\n  // Event handler for form input changes\n  const handleChange = (event) => {\n    setProfileData({\n      ...profileData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Event handler for form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"content\", content);\n\n    if (imageFile?.current?.files[0]) {\n      formData.append(\"image\", imageFile?.current?.files[0]);\n    }\n\n    try {\n      const { data } = await axiosReq.put(`/profiles/${id}/`, formData);\n      setCurrentUser((currentUser) => ({\n        ...currentUser,\n        profile_image: data.image,\n      }));\n      history.goBack();\n    } catch (err) {\n      // console.log(err);\n      setErrors(err.response?.data);\n    }\n  };\n\n  // JSX for text fields section of the form\n  const textFields = (\n    <>\n      <Form.Group>\n        <Form.Label>Bio</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          value={content}\n          onChange={handleChange}\n          name=\"content\"\n          rows={7}\n        />\n      </Form.Group>\n\n      {errors?.content?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n      <Button\n        className={`${btnStyles.Button} ${btnStyles.Blue}`}\n        onClick={() => history.goBack()}\n      >\n        cancel\n      </Button>\n      <Button className={`${btnStyles.Button} ${btnStyles.Blue}`} type=\"submit\">\n        save\n      </Button>\n    </>\n  );\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Row>\n        {/* Image and text fields for smaller screens */}\n        <Col className=\"py-2 p-0 p-md-2 text-center\" md={7} lg={6}>\n          <Container className={appStyles.Content}>\n            <Form.Group>\n              {/* Display current image and handle image change */}\n              {image && (\n                <figure>\n                  <Image src={image} fluid />\n                </figure>\n              )}\n              {errors?.image?.map((message, idx) => (\n                <Alert variant=\"warning\" key={idx}>\n                  {message}\n                </Alert>\n              ))}\n              <div>\n                <Form.Label\n                  className={`${btnStyles.Button} ${btnStyles.Blue} btn my-auto`}\n                  htmlFor=\"image-upload\"\n                >\n                  Change the image\n                </Form.Label>\n              </div>\n              <Form.File\n                id=\"image-upload\"\n                ref={imageFile}\n                accept=\"image/*\"\n                onChange={(e) => {\n                  if (e.target.files.length) {\n                    setProfileData({\n                      ...profileData,\n                      image: URL.createObjectURL(e.target.files[0]),\n                    });\n                  }\n                }}\n              />\n            </Form.Group>\n            {/* Display text fields section for smaller screens */}\n            <div className=\"d-md-none\">{textFields}</div>\n          </Container>\n        </Col>\n        {/* Text fields section for larger screens */}\n        <Col md={5} lg={6} className=\"d-none d-md-block p-0 p-md-2 text-center\">\n          <Container className={appStyles.Content}>{textFields}</Container>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default ProfileEditForm;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\n\nimport Card from \"react-bootstrap/Card\";\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport Avatar from \"../../components/Avatar\";\n\nimport appStyles from \"../../App.module.css\";\nimport styles from \"../../styles/Notifications.module.css\"\n\nconst Notification = (props) => {\n  const {\n    id,\n    profile_image: senderAvatar,\n    created_at: sentAt, \n    item_id: itemId,\n    is_read: isRead,\n    content,\n    category,\n    setNotifications,\n  } = props;\n  const [showModal, setShowModal] = useState(false);\n\n  const handleShowModal = () => {\n    setShowModal(true);\n  };\n\n  // function to handle notification is read\n  const handleSetRead = async () => {\n    try {\n      await axiosRes.patch(`/notifications/${id}`, { is_read: !isRead });\n      setNotifications((prevNotifications) => ({\n        ...prevNotifications,\n        results: prevNotifications.results.map((notification) => {\n          return notification.id === id ? { ...notification, is_read: !isRead } : notification;\n        }),\n      }));\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n  // function to handle deletion of notification\n  const handleDelete = async () => {\n    try {\n      await axiosRes.delete(`/notifications/${id}`);\n      setNotifications((prevNotifications) => ({\n        ...prevNotifications,\n        results: prevNotifications.results.filter((notification) => notification.id !== id),\n      }));\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <Card className={`${appStyles.ContentBlack} mt-3 me-3 ${isRead ? styles.ContentBlackRead : ''}`}>\n        <Card.Header className=\"d-flex justify-content-between\">\n          <small className=\"\">{sentAt}</small>      \n          <span>\n              <OverlayTrigger\n                placement=\"top\"\n                overlay={<Tooltip>Clear Notification!</Tooltip>}\n              >\n                <span\n                  aria-label=\"Clear\"\n                  title=\"Clear Notification\"\n                  onClick={handleShowModal}\n                >\n                  <i className=\"fa-regular fa-trash-can\" />\n                </span>\n              </OverlayTrigger>\n              {isRead ? (\n                <OverlayTrigger\n                placement=\"top\"\n                overlay={<Tooltip>Mark as unread!</Tooltip>}\n                >\n                  <span onClick={handleSetRead}>\n                    <i className=\"fa-solid fa-circle-check\" />\n                  </span>\n                </OverlayTrigger>\n              ) : (\n                <OverlayTrigger\n                placement=\"top\"\n                overlay={<Tooltip>Mark as read!</Tooltip>}\n                >\n                  <span onClick={handleSetRead}>\n                    <i className=\"fa-regular fa-circle-check\" />\n                  </span>\n                </OverlayTrigger>\n              )}\n            </span>\n        </Card.Header>\n        <Card.Body>\n          <Card.Text>\n            <Avatar src={senderAvatar} height={30} /> {content}{category !== \"follow\" && ( <Link to={`/posts/${itemId}`} className=\"ms-sm-2\">• Go to post...</Link> )}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n\n      <ConfirmationModal\n        show={showModal}\n        setShow={setShowModal}\n        handleMethod={handleDelete}\n        body=\"Clear notification!\"\n        type=\"dark\"\n      />\n    </>\n  );\n};\n\nexport default Notification;","import React, { useState, useEffect } from \"react\";\n\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport { fetchMoreData } from \"../../utils/utils\";\nimport Notification from \"./Notification\";\nimport Asset from \"../../components/Asset\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport NotFound from \"../../components/NotFound\";\n\nconst NotificationPage = ({ showMessage }) => {\n  const [notifications, setNotifications] = useState({ results: [] });\n  const currentUser = useCurrentUser();\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  // gets the notification data\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(`/notifications/`);\n        setNotifications(data);\n      } catch (err) {\n        // console.log(err);\n      }\n      setHasLoaded(true);\n    };\n\n    handleMount();\n  }, []);\n\n  // renders notifications with infinite scroll\n  return !currentUser ? (\n    <NotFound />\n  ) : (\n    <>\n      <h4>Notifications</h4>\n      {hasLoaded ? (\n        notifications.results.length ? (\n          <InfiniteScroll className=\"overflow-hidden\"\n            children={notifications.results.map((notification) => (\n              <Notification\n                key={notification.id}\n                {...notification}\n                setNotifications={setNotifications}\n                showMessage={showMessage}\n              />\n            ))}\n            dataLength={notifications.results.length}\n            loader={\n              <div className=\"mt-3 text-muted text-center\">\n                <Spinner />\n              </div>\n            }\n            hasMore={!!notifications.next}\n            next={() => fetchMoreData(notifications, setNotifications)}\n          />\n        ) : (\n          <p>No new notifications</p>\n        )\n      ) : (\n        <Asset spinner />\n      )}\n    </>\n  );\n};\n\nexport default NotificationPage;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport NavBar from './components/NavBar';\nimport styles from './App.module.css'\nimport {Route, Switch, useLocation} from 'react-router-dom'\nimport './api/axiosDefaults'\nimport SignUpForm from './pages/auth/SignUpForm';\nimport SignInForm from './pages/auth/SignInForm';\nimport PostCreateForm from \"./pages/posts/PostCreateForm\";\nimport PostPage from \"./pages/posts/PostPage\";\nimport PostsPage from \"./pages/posts/PostsPage\";\nimport { useCurrentUser } from \"./contexts/CurrentUserContext\";\nimport PostEditForm from \"./pages/posts/PostEditForm\";\nimport NotFound from \"./components/NotFound\";\nimport PopularProfiles from './pages/profiles/PopularProfiles';\nimport ProfilePage from \"./pages/profiles/ProfilePage\";\nimport UsernameForm from \"./pages/profiles/UsernameForm\";\nimport UserPasswordForm from \"./pages/profiles/UserPasswordForm\";\nimport ProfileEditForm from \"./pages/profiles/ProfileEditForm\";\nimport NotificationPage from \"./pages/notifications/NotificationPage\";\n\n\nfunction App() {\n  const currentUser = useCurrentUser();\n  const profile_id = currentUser?.profile_id || \"\";\n\n  const location = useLocation();\n  const isSignInOrSignUp = location.pathname.includes('/login') || location.pathname.includes('/signup');\n\n  return (\n    <Container className={styles.App} fluid>\n      <Row>\n        <Col xs={12} lg={2} className={styles.NavCol}><NavBar /></Col>\n        <Col xs={12} lg={3} className={`order-lg-2 ${styles.ProfilesCol}`}>\n          {/* Render PopularProfiles if not in SignIn/SignUp pages */}\n          {!isSignInOrSignUp && (\n            <>\n              <Col>\n                <PopularProfiles mobile />\n              </Col>\n              <Col className=\"d-none d-lg-block\">\n                <PopularProfiles />\n              </Col>\n              <Col className=\"d-none d-lg-block mt-4\">\n                <span className={styles.Copyright}>© 2024 Picagram by J. Timlin / Code Institute</span>\n              </Col>\n            </>\n          )}\n        </Col>\n        <Col xs={12} lg={7} className={`order-lg-1 justify-content-center align-items-center ${styles.MidCol}`}>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <PostsPage message=\"No results found. Adjust the search keyword.\" />\n              )}\n            />\n            <Route\n              exact\n              path=\"/feed\"\n              render={() => (\n                <PostsPage\n                  message=\"No results found. Adjust the search keyword or follow a user.\"\n                  filter={`owner__followed__owner__profile=${profile_id}&`}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/bookmarked\"\n              render={() => (\n                <PostsPage\n                  message=\"No bookmarked posts found. Bookmark some posts to see them here.\"\n                  filter={`bookmark__owner__profile=${profile_id}&ordering=-bookmark__created_at&`}\n                />\n              )}\n            />\n            <Route exact path=\"/login\" render={() => <SignInForm />} />\n            <Route exact path=\"/signup\" render={() => <SignUpForm />} />\n            <Route exact path=\"/posts/create\" render={() => <PostCreateForm />} />\n            <Route exact path=\"/posts/:id/edit\" render={() => <PostEditForm />} />\n            <Route exact path=\"/posts/:id\" render={() => <PostPage />} />\n            <Route exact path=\"/notifications\" render={() => <NotificationPage />} />\n            <Route exact path=\"/profiles/:id\" render={() => <ProfilePage />} />\n            <Route exact path=\"/profiles/:id/edit/username\" render={() => <UsernameForm />} />\n            <Route exact path=\"/profiles/:id/edit/password\" render={() => <UserPasswordForm />} />\n            <Route exact path=\"/profiles/:id/edit\" render={() => <ProfileEditForm />} />\n            {/* Catch-all route for handling unmatched routes */}            \n            <Route render={() => <NotFound />} />\n          </Switch>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { CurrentUserProvider } from './contexts/CurrentUserContext';\nimport { ProfileDataProvider } from './contexts/ProfileDataContext';\n\nReactDOM.render(\n    <Router>\n      <CurrentUserProvider>\n        <ProfileDataProvider>\n          <App />\n        </ProfileDataProvider>\n      </CurrentUserProvider>\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"Content\":\"App_Content__ZaMNr\",\"ContentBlack\":\"App_ContentBlack__3IPbw\",\"Image\":\"App_Image__3UPXw\",\"NavCol\":\"App_NavCol__1X7Z8\",\"MidCol\":\"App_MidCol__3enO6\",\"ProfilesCol\":\"App_ProfilesCol__5BEju\",\"Copyright\":\"App_Copyright__1VPM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SignInUpForm_Container__2cuBp\",\"Input\":\"SignInUpForm_Input__3xaLZ\",\"Header\":\"SignInUpForm_Header__3joQJ\",\"Link\":\"SignInUpForm_Link__1BeMm\",\"LoginImg\":\"SignInUpForm_LoginImg__XPDvg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__3UScv\",\"Heart\":\"Post_Heart__3zMAO\",\"HeartOutline\":\"Post_HeartOutline__2dqsh\",\"PostBar\":\"Post_PostBar__3geIW\",\"PostBarDark\":\"Post_PostBarDark__2wHZP\",\"ProfileDate\":\"Post_ProfileDate__2ciSx\",\"ProfileDateHover\":\"Post_ProfileDateHover__2oJJl\",\"Comments\":\"Post_Comments__3v2v5\",\"boldText\":\"Post_boldText__1Dgmw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"CommentCreateEditForm_Form__1Qeyz\",\"Button\":\"CommentCreateEditForm_Button__sGFSX\",\"AvatarHover\":\"CommentCreateEditForm_AvatarHover__CKMUG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PostCreateEditForm_Container__2WHuV\",\"hiddenInputButton\":\"PostCreateEditForm_hiddenInputButton__lKd0Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Owner\":\"Comment_Owner__3sgYe\",\"AvatarHover\":\"Comment_AvatarHover__1ckLn\",\"Date\":\"Comment_Date__10qt0\",\"editDelete\":\"Comment_editDelete__3KLM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShareButtonDiv\":\"ShareButton_ShareButtonDiv__153wC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WordBreak\":\"Profile_WordBreak__3_YmI\",\"Follow\":\"Profile_Follow__2dmyf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"PostsPage_SearchBar__1T8bC\",\"SearchIcon\":\"PostsPage_SearchIcon__12ojn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileImage\":\"ProfilePage_ProfileImage__7dvRw\",\"JoinDate\":\"ProfilePage_JoinDate__BMrtT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__1amC6\",\"mobileIconsRow\":\"NavBar_mobileIconsRow__1JvMs\",\"Container\":\"NavBar_Container__15V9o\",\"picagramLogo\":\"NavBar_picagramLogo__1rbwc\",\"darkNavbar\":\"NavBar_darkNavbar__yV-0n\",\"NavLink\":\"NavBar_NavLink__34ons\",\"NavLinkProfile\":\"NavBar_NavLinkProfile__EOzlF\",\"NavLinkMob\":\"NavBar_NavLinkMob__1mMZM\",\"Active\":\"NavBar_Active__3PBZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Avatar_Avatar__196lW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Asset\":\"Asset_Asset__1dBcX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotFound404\":\"NotFound_NotFound404__3uH1o\"};"],"sourceRoot":""}